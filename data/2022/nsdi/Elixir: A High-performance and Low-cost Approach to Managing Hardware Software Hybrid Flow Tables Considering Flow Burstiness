Hardware/software hybrid ﬂow table is common in modern commodity network devices, such as NFV servers, smart NICs and SDN/OVS switches. The overall forwarding performance of the network device and the required CPU resources are considerably affected by the method of how to split the ﬂow table between hardware and software. Previous works usually leverage the trafﬁc skewness for ﬂow table splitting, e.g. ofﬂoading top 10% largest ﬂows to the hardware can save up to ∼ 90% CPU resources. However, the widely-existing bursty ﬂows bring more challenges to ﬂow table splitting. In particular, we need to identify the proper ﬂows and proper timing to exchange the ﬂows between hardware and software by considering ﬂow burstiness, so as to maximize the overall performance with low overhead. In this paper we present Elixir, a high-performance and low-cost approach to managing hardware/software hybrid ﬂow tables on commodity devices. The core idea of Elixir includes three parts, namely, combining sampling-based and counter-based mechanisms for ﬂow rate measurement, sep-arating the replacement of large ﬂows and bursty ﬂows, as well as decoupling the ﬂow rate identiﬁcation window and the ﬂow replacement window. We have implemented Elixir prototypes on both Mellanox ConnectX-5 NIC and Barefoot Wedge100BF-32X/65X P4 Switch, with a software library on top of DPDK. Our experiments based on real-world data traces demonstrate that, compared with the state-of-the-art solutions, Elixir can save up to ∼ 50% software CPU resources while keeping the tail forwarding latency ∼ 97.6% lower.