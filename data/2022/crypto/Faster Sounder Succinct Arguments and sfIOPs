. Succinct arguments allow a prover to convince a veriﬁer that a given statement is true, using an extremely short proof. A major bottleneck that has been the focus of a large body of work is in reducing the overhead incurred by the prover in order to prove correctness of the computation. By overhead we refer to the cost of proving correctness, divided by the cost of the original computation. In this work, for a large class of Boolean circuits C = C ( x, w ), we construct succinct arguments for the language { x : ∃ w C ( x, w ) = 1 } , with 2 − λ soundness error, and with prover overhead polylog( λ ). This result relies on the existence of (sub-exponentially secure) linear-size computable collision-resistant hash functions. The class of Boolean circuits that we can handle includes circuits with a repeated sub-structure, which arise in natural applications such as batch computation/veriﬁcation, hashing and related block chain applications. The succinct argument is obtained by constructing interactive oracle proofs for the same class of languages, with polylog( λ ) prover overhead, and soundness error 2 − λ . Prior to our work, the best IOP s for Boolean circuits either had prover overhead of polylog( | C | ) based on eﬃcient PCP s due to Ben Sasson et al. (STOC, 2013) or poly( λ ) due to Rothblum and Ron-Zewi (STOC, 2022).