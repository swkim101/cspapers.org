An oblivious RAM (ORAM), introduced by Goldreich and Ostrovsky (STOC ’87 and J. ACM ’96), is a technique for hiding RAM’s access pattern. That is, for every input the distribution of the observed locations accessed by the machine is essentially independent of the machine’s secret inputs. Recent progress culminated in a work of Asharov et al. (EUROCRYPT ’20), obtaining an ORAM with (amortized) logarithmic overhead in total work, which is known to be optimal. Oblivious Parallel RAM (OPRAM) is a natural extension of ORAM to the (more realistic) parallel setting where several processors make concurrent accesses to a shared memory. It is known that any OPRAM must incur logarithmic work overhead and for highly parallel RAMs a logarithmic depth blowup (in the balls and bins model). Despite the significant recent advances, there is still a large gap: all existing OPRAM schemes incur a poly-logarithmic overhead either in total work or in depth. Our main result closes the aforementioned gap and provides an essentially optimal OPRAM scheme. Specifically, assuming one-way functions, we show that any Parallel RAM with memory capacity N can be obliviously simulated in space O(N), incurring only O(logN) blowup in (amortized) total work as well as in depth. Our transformation supports all PRAMs in the CRCW mode and the resulting simulation is in the CRCW mode as well. Bar-Ilan University. NTT Research and Hebrew University of Jerusalem. Cornell University. Università degli Studi di Padova. Cornell University and CMU.