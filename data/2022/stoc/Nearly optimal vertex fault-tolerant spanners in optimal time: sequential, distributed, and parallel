We (nearly) settle the time complexity for computing vertex fault-tolerant (VFT) spanners with optimal sparsity (up to polylogarithmic factors). VFT spanners are sparse subgraphs that preserve distance information, up to a small multiplicative stretch, in the presence of vertex failures. These structures were introduced by [Chechik et al., STOC 2009] and have received a lot of attention since then. Recent work provided algorithms for computing VFT spanners with optimal sparsity but in exponential runtime. The first polynomial time algorithms for these structures have been given by [Bodwin, Dinitz and Robelle, SODA 2021]. Their algorithms, as all other prior algorithms, are greedy and thus inherently sequential. We provide algorithms for computing nearly optimal f-VFT spanners for any n-vertex m-edge graph, with near optimal running time in several computational models: (i) A randomized sequential algorithm with a runtime of O(m) (i.e., independent in the number of faults f). The state-of-the-art time bound is O(f1−1/k· n2+1/k+f2 m) by [Bodwin, Dinitz and Robelle, SODA 2021]. (ii) A distributed congest algorithm of O(1) rounds. Improving upon [Dinitz and Robelle, PODC 2020] that obtained FT spanners with near-optimal sparsity in O(f2) rounds. (iii) A PRAM (CRCW) algorithm with O(m) work and O(1) depth. Prior bounds implied by [Dinitz and Krauthgamer, PODC 2011] obtained sub-optimal FT spanners using O(f3m) work and O(f3) depth. An immediate corollary provides the first nearly-optimal PRAM algorithm for computing nearly optimal λ-vertex connectivity certificates using polylogarithmic depth and near-linear work. This improves the state-of-the-art parallel bounds of O(1) depth and O(λ m) work, by [Karger and Motwani, STOC’93].