Given a set of n points in d dimensions, the Euclidean k -means problem (resp. the Euclidean k -median problem) consists of finding k centers such that the sum of squared distances (resp. sum of distances) from every point to its closest center is minimized. The arguably most popular way of dealing with this problem in the big data setting is to first compress the data by computing a weighted subset known as a coreset and then run any algorithm on this subset. The guarantee of the coreset is that for any candidate solution, the ratio between coreset cost and the cost of the original instance is less than a (1 ± ε ) factor. The current state of the art coreset size is ˜ O (min( k 2 · ε − 2 , k · ε − 4 )) for Euclidean k -means and ˜ O (min( k 2 · ε − 2 , k · ε − 3 )) for Euclidean k -median. The best known lower bound for both problems is Ω( kε − 2 ) . In this paper, we improve the upper bounds ˜ O (min( k 3 / 2 · ε − 2 , k · ε − 4 )) for k -means and ˜ O (min( k 4 / 3 · ε − 2 , k · ε − 3 )) for k -median. In particular, ours is the first provable bound that breaks through the k 2 barrier while retaining an optimal dependency on ε .