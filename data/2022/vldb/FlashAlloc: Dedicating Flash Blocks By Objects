
 For a write request, today's flash storage cannot distinguish the logical object it comes from (
 e.g.
 , SSTables in RocksDB). In such object-oblivious flash devices, concurrent writes from different objects are simply packed in their arrival order to flash memory blocks; hence data pages from multiple objects with different lifetimes are multiplexed onto the same flash blocks. This multiplexing incurs write amplification, worsening the performance.
 
 
 Tackling the multiplexing problem, we propose a novel interface for flash storage,
 FlashAlloc.
 It is used to pass the logical address ranges of objects to the underlying flash device and thus to enlighten the device to stream writes by objects. The object-aware flash storage can now de-multiplex concurrent writes from multiple objects with distinct deathtimes into per-object dedicated flash blocks. In essence, the interface enables the per-object fine-grained write streaming. Given that popular data stores tend to separate writes by logical objects, we can achieve, compared to the existing solutions, transparent streaming just by calling
 FlashAlloc
 upon object creation. Also,
 FlashAlloc
 is adaptive to workload changes, and liberates the stream conflicts in the multi-tenant environment.
 
 
 Our experimental results using an open-source SSD prototype demonstrate that
 FlashAlloc
 can reduce the device-level write amplification factor (WAF) under RocksDB, F2FS, and MySQL by 1.5, 2.5, and 0.3, respectively and improve their throughput by 2.7x, 1.8x, and 1.2x, respectively. Also,
 FlashAlloc
 can mitigate the WAF interference among tenants: when running RocksDB and MySQL together on the same SSD,
 FlashAlloc
 reduced WAF from 2.5 to 1.6 and doubled their throughputs.
