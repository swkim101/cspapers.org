Debugging is an essential practice in programming. Yet for many novice programmers, the process of finding and fixing errors in code can be frustrating. Debugging is rarely explicitly taught in introductory programming courses, perhaps because best practices of teaching debugging are largely undefined. In K-12, teachers new to teaching CS may also experience trepidation about supporting student-directed work in languages and environments unfamiliar to them. In this poster, we build on previous research that documented the individual and social debugging strategies employed by young novice programmers, from studying projects to asking for help (Brennan, 2013). With a focus on classroom settings, we have designed a set of debugging activities for young people working in Scratch--the Getting Unstuck activities. Through these interactive activities, students and teachers explore creative and collaborative strategies for debugging Scratch projects. In July 2017, the authors piloted these strategies with 17 novice programmers, ages 14 to 18. This poster describes this new resource, reports on findings from the pilot testing, and offers recommendations for the design of K-12 programming activities.