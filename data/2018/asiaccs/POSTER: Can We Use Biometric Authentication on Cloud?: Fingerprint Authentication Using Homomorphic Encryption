Even though biometric authentication such as fingerprint authentication is popularly used, there are few network services supporting biometric authentication because many users have serious privacy concerns about leakage of the biometric data on a server. For example, in fingerprint authentication, a user's raw fingerprint is typically stored in plaintext form. Unlike conventional text passwords, we cannot use a cryptographic hash function such as SHA-256 because it is very hard to obtain the same fingerprint features even when the exactly same finger is scanned multiple times. In this paper, we present a fingerprint authentication mechanism using the Fastest Homomorphic Encryption in the West (FHEW) library for Learning With Errors (LWE) scheme. Our implementation allows us to securely store fingerprint data on a network server using homomorphic encryption to calculate the distance between two encrypted fingerprint data without decrypting them. To show the efficiency of our implementation, we used "NIST special database 9'' containing 4,000 fingerprint samples. Our results show that two fingerprints can be efficiently compared with about 209 seconds on average even when they are securely stored in encrypted form.