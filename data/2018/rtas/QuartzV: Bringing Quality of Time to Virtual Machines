Cyber-physical systems are increasingly interconnected and distributed. Examples range from factory-scale industrial robotics to regional-scale smart grids. Therefore, to enable dynamic coordination at scale among geo-distributed physical endpoints, the intelligence behind these systems will often be hosted in the cloud. However, most CPS applications are inherently safety-critical, and require low-latency responses. Hence, a hierarchy of edge cloudlets and the cloud can be used to offload computationally and data-intensive workloads. While low latency is key, a shared sense of time with the added notion of Quality of Time (QoT) is useful for fault detection, and enables fault-tolerant coordinated action in distributed CPS. Given that most public clouds and cloudlets provide multi-tenancy using virtualized units of computing, we aim to introduce the notion of QoT to virtual machines. The use of virtual machines entails the use of a hypervisor, which adds additional timing uncertainty due to relatively higher jitter in clock-read and timer-interrupt latencies. Hence, the use of virtualization presents a challenge in terms of observing and guaranteeing the QoT delivered to an application. To meet these challenges, we present the QuartzV extension to the QoT Stack for Linux, to make virtual machines QoT-aware. We utilize the open-source QEMU-KVM hypervisor, and illustrate the para-virtual design choices that are key for delivering near-native levels of timing performance in virtual machines. We also demonstrate the utility of QuartzV by using it in the development of an industrial-automation application. Experimental evaluations also show the efficacy of QuartzV with respect to the native and fully-virtualized cases.