Exascale systems face high error-rates due to increasing scale (109 cores), software complexity and rising memory error rates. Increasingly, errors escape immediate hardware-level detection, silently corrupting application states. Such latent errors can often be detected by application-level tests but typically at long latencies. We propose a new approach called application-based focused recovery (ABFR), that defines the application knowledge needed for efficient latent error recovery. This allows the application to pursue strategies exploiting a range of application semantics within a well-defined resilience framework. The ABFR runtime then exploits this knowledge to achieve efficient latent error tolerance. ABFR enables application designers to express resilience without concern for the underlying architectures and systems. Together, these ABFR properties support flexible application-based resilience. To demonstrate its generality, we apply ABFR to three varied scientific computations (stencil, N-Body tree, and Monte Carlo). We measure latent error resilience performance for varied error rates; results indicate significant reductions in error recovery cost (up to 367x) and recovery latency (up to 24x). And ABFR achieves efficient and scalable recovery at scale with high latent error rates for these computations.