Significance Zero testing [or polynomial identity testing (PIT)] for circuits is a computational algebra problem with numerous practical applications and a beautiful theory (e.g., primality testing and graph matching are solved using PIT). It strongly relates to showing that there are explicit/natural polynomials that require exponentially large circuits. The latter is also called the algebraic version of the P≠NP question (or VP≠?VNP) and lies in the intersection of mathematics and computing. This work provides a plausible route to it if we can design a polynomial-time computable, but small enough, hitting set for trivariate depth-4 circuits [merely ΣΠΣ∧(3)]. We show that for the blackbox polynomial identity testing (PIT) problem it suffices to study circuits that depend only on the first extremely few variables. One needs only to consider size-s degree-s circuits that depend on the first log○c s variables (where c is a constant and composes a logarithm with itself c times). Thus, the hitting-set generator (hsg) manifests a bootstrapping behavior—a partial hsg against very few variables can be efficiently grown to a complete hsg. A Boolean analog, or a pseudorandom generator property of this type, is unheard of. Our idea is to use the partial hsg and its annihilator polynomial to efficiently bootstrap the hsg exponentially w.r.t. variables. This is repeated c times in an efficient way. Pushing the envelope further we show that (i) a quadratic-time blackbox PIT for 6,913-variate degree-s size-s polynomials will lead to a “near”-complete derandomization of PIT and (ii) a blackbox PIT for n-variate degree-s size-s circuits in snδ time, for δ<1/2, will lead to a near-complete derandomization of PIT (in contrast, sn time is trivial). Our second idea is to study depth-4 circuits that depend on constantly many variables. We show that a polynomial-time computable, O(s1.49)-degree hsg for trivariate depth-4 circuits bootstraps to a quasipolynomial time hsg for general polydegree circuits and implies a lower bound that is a bit stronger than that of Kabanets and Impagliazzo [Kabanets V, Impagliazzo R (2003) Proceedings of the Thirty-Fifth Annual ACM Symposium on Theory of Computing STOC ’03].