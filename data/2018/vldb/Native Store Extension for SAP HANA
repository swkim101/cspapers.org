We present an overview of SAP HANA ’s Native Store Extension ( NSE ). This extension substantially increases database capacity, allowing to scale far beyond available system memory. NSE is based on a hybrid in-memory and paged column store architecture composed from data access primitives. These primitives enable the processing of hybrid columns using the same algorithms optimized for traditional HANA ’s in-memory columns. Using only three key primitives, we fabricated byte-compatible counterparts for complex memory resident data structures (e.g. dictionary and hash-index), compressed schemes (e.g. sparse and run-length encoding), and exotic data types (e.g. geo-spatial). We developed a new buﬀer cache which optimizes the management of paged resources by smart strategies sensitive to page type and access patterns. The buﬀer cache integrates with HANA ’s new execution engine that issues pipelined prefetch requests to improve disk access patterns. A novel load unit conﬁguration, along with a uniﬁed persistence format, allows the hybrid column store to dynamically switch between in-memory and paged data access to balance performance and storage economy according to application demands while reducing Total Cost of Ownership ( TCO ). A new partitioning scheme supports load unit speciﬁcation at table, partition, and column level. Finally, a new advisor recommends optimal load unit conﬁgurations. Our experiments illustrate the performance and memory footprint improvements on typical customer scenarios.