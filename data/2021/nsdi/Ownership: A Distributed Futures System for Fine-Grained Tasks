The distributed futures interface is an increasingly popular choice for building distributed applications that manipulate large amounts of data. Distributed futures are an extension of RPC that combines futures and distributed memory: a distributed future is a reference whose eventual value may be stored on a remote node. An application can then express distributed computation without having to specify when or where execution should occur and data should be moved. Recent distributed futures applications require the ability to execute ﬁne-grained computations , i.e., tasks that run on the order of milliseconds. Compared to coarse-grained tasks, ﬁne-grained tasks are difﬁcult to execute with acceptable sys-tem overheads. In this paper, we present a distributed futures system for ﬁne-grained tasks that provides fault tolerance without sacriﬁcing performance. Our solution is based on a novel concept called ownership , which assigns each object a leader for system operations. We show that this decentralized architecture can achieve horizontal scaling, 1ms latency per task, and fast failure handling.