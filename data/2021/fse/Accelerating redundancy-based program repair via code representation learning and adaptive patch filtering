Automated program repair (APR) has attracted extensive attention and many APR techniques have been proposed recently, in which redundancy-based techniques have achieved great success. However, they still suffer from the efficiency issue. One key problem is how to advance the generation and validation of correct patches. Traditional redundancy-based approaches often use simple meth-ods, such as statistical-based methods, to measure code similarity. This could result in the inaccuracy of measuring code similarity, which may produce meaningless patches that hinder the generation and validation of correct patches. Recently, state-of-the-art studies demonstrate that neural models can better represent source code. Therefore, to solve this issue, we propose a novel method AccPR, which leverages neural network for code representation learning to measure code similarity accurately and employs adaptive patch filtering to accelerate redundancy-based APR. We have implemented a prototype of AccPR and integrated it with a state-of-the-art APR tool, SimFix. We conducted a preliminary study on the benchmark, Defects4J, where the average improvement of repairing efficiency is 47.85%, indicating AccPR is promising.