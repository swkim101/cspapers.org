Programming is a useful medium for artists and humanities majors. Learning to program provides a useful set of skills and concepts for critical computing scholars and conversational programmers. Introductory computing classes (at both secondary and post-secondary) level focus on job skills in software development or data science, which is a different focus from what arts and humanities students need. We have been developing new introductory computing courses for arts and humanities undergraduate students, explicitly including programming. The courses were designed using participatory methods with faculty who focus on creative expression and justice. The goal was to make them engaging with no requirement for prior programming background or mathematics past algebra. We use teaspoon (task-specific programming) languages and custom blocks in Snap to create a highly-scaffolded on-ramp into programming. These include supports for image processing, language recognition and generation, digital sound manipulation, creating Web pages, building chatbots, and manipulating databases. The workshop will include a presentation of the learning goals that emerged from our participatory design sessions. Participants will use our teaspoon languages and context-specific Snap! blocks during the workshop on their own laptops, and also try out the ebooks we use to help students transfer their knowledge to mainstream tools like Python, Processing, and SQL. These activities might also be useful in secondary school computing classes. (Links to all of the tools will be provided, though only some will be used hands-on in the workshop.)