We want more students to have experiences that prepare them for future careers in IT, software, and high tech industries. Students need to have a strong background in object-oriented programming that is strongly typed in preparation for working on large, collaborative software projects in real life. They need to learn modern concepts and practice applying that to today's problems. They need to be skilled in the languages that are in high demand in industry. And they need to find joy in programming to stay motivated. Modern Java is ideally suited and one of the most used languages in industry today. The education industry is primarily using Java 8. Java 8 shipped in March of 2014. It is nearly 10 years old! Java has advanced significantly since then. What are the Java programming components and capabilities most of us still using version 8 are missing out on? Recently the OpenJDK delivered Java 21 and now advances capabilities, including syntax simplifications, every 6 months. This is not your grandparents' Java. In this interactive BOF, we'd like to share relevant changes and modern capabilities in today's Java, educate the audience about the OpenJDK development process and cadence, motivate the value of staying on current versions of software such as security hygiene, solicit feedback and encourage discussion on pain points that prevent the education industry from moving ahead to current versions, and identify suggestions for supportive change.