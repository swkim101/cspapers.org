While professional integrated programming environments support developers with advanced debugging functionality, block-based programming environments for young learners often provide no support for debugging at all, thus inhibiting debugging and preventing debugging education. In this paper we introduce NUZZLEBuG, an extension of the popular block-based programming environment Scratch that provides the missing debugging support. Nuzzlebug allows controlling the executions of Scratch programs with classical debugging functionality such as stepping and breakpoints, and it is an omniscient debugger that also allows reverse stepping. To support learners in deriving hypotheses that guide debugging, Nuz-ZLEBuG is an interrogative debugger that enables to ask questions about executions and provides answers explaining the behavior in question. In order to evaluate NUZZLEBuG, we survey the opinions of teachers, and study the effects on learners in terms of debugging effectiveness and efficiency. We find that teachers consider Nuzzlebug to be useful, and children can use it to debug faulty programs effectively. However, systematic debugging requires dedicated training, and even when Nuzzlebug can provide correct answers learners may require further help to comprehend faults and necessary fixes, thus calling for further research on improving debugging techniques and the information they provide.