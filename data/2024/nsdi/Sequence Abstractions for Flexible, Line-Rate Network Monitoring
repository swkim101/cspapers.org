We develop a high-level language called FLM that enables network operators to write programs that recognize and react to specific packets sequences. To be able to examine every packet, such programs must run in the switch hardware. Our compilation procedure can transform FLM programs into P4 code that can run on programmable switch ASICs. It first splits FLM programs into a state management component and a classical regular expression, and it then generates an efficient implementation of the regular expression using SMT-based program synthesis. Our experiments finds that FLM is highly expressive: It can easily express 15 diverse sequence monitoring tasks drawn from the literature. Our compiler can convert all of these programs to run on switch hardware in way that easily fit within available pipeline stages and consume less than 10â€“25% of header fields and instruction words.