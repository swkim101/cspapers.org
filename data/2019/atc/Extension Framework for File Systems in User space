User file systems offer numerous advantages over their in-kernel implementations, such as ease of development and better system reliability.  However, they incur heavy performance penalty.  We observe that existing user file system frameworks are highly general; they consist of a minimal interposition layer in the kernel that simply forwards all low-level requests to user space.  While this design offers flexibility, it also severely degrades performance due to frequent kernel-user context switching.This work introduces ExtFUSE, a framework for developing extensible user file systems that also allows applications to register "thin" specialized request handlers in the kernel to meet their specific operative needs, while retaining the complex functionality in user space.  Our evaluation with two FUSE file systems shows that ExtFUSE can improve the performance of user file systems with less than a few hundred lines on average.  ExtFUSE is available on GitHub.