Most public blockchain systems, exemplified by cryptocurrencies such as Ethereum and Monero, use memory-hard proof-of-work (PoW) algorithms in consensus protocols to maintain fair participation without a trusted third party. The memory hardness, or the amount of memory access, of these PoW algorithms is to prevent the dominance of custom-made hardware of massive computation units, in particular, application-specific integrated circuit (ASIC) and field-programmable gate array (FPGA) machines, in the system. However, it is unclear how effective these algorithms are on general-purpose processors. In this paper, we study the performance of representative memory-hard PoW algorithms on the CPU, the Graphics Processing Unit (GPU), and the Intel Knights Landing (KNL) processors. We first optimize each algorithm for individual processors, and then measure their performance with number of threads and memory size varied. Our experimental results show that (1) the GPU dominates the CPU and the KNL processors on each algorithm, (2) all algorithms scale well with number of threads on the CPU and KNL, and (3) the size of accessed memory area affects each algorithm differently. Based on these results, we recommend CryptoNight with scratchpads of different sizes as the most egalitarian PoW algorithm.