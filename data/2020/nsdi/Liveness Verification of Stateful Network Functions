Network veriﬁcation tools focus almost exclusively on various safety properties such as “reachability” invariants, e.g., is there a path from host A to host B ? Thus, they are inappli-cable to providing strong correctness guarantees for modern programmable networks that increasingly rely on stateful network functions . Correct operations of such networks depend on the validity of a larger set of properties, in particular liveness properties. For instance, a stateful ﬁrewall that only allows solicited external trafﬁc works correctly if it eventually detects and blocks malicious connections, e.g., if it eventually blocks an external host E that tries to reach the internal host I before receiving a request from I . Alas, verifying liveness properties is computationally expensive and, in some cases, undecidable. Existing veriﬁcation techniques do not scale to verify such properties. In this work, we provide a compositional programming abstraction, model the programs expressed in this abstraction using compact Boolean formulas, and show that veriﬁcation of complex properties is fast on these formulas, e.g., for a 100-host network, these formulas result in 8 ⇥ speedup in the veriﬁcation of key properties of a UDP ﬂood mitigation function compared to a naive baseline. We also provide a compiler that translates the programs written using our abstraction to P4 programs.