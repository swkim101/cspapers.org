In this paper, we design new sublinear-time algorithms for solving the gap edit distance problem and for embedding edit distance to Hamming distance. For the gap edit distance problem, we give a greedy algorithm that distinguishes in time <tex>$\tilde{\mathcal{O}}(\frac{n}{k}+k^{2})$</tex> between length-n input strings with edit distance at most <tex>$k$</tex> and those with edit distance more than <tex>$4k^{2}$</tex>. This is an improvement and a simplification upon the main result of [Goldenberg, Krauthgamer, Saha, FOCS 2019], where the <tex>$k$</tex> vs <tex>$\Theta(k^{2})$</tex> gap edit distance problem is solved in <tex>$\tilde{\mathcal{O}}(\frac{n}{k}+k^{3})$</tex> time. We further generalize our result to solve the <tex>$k$</tex> vs <tex>$\alpha k$</tex> gap edit distance problem in time <tex>$\tilde{\mathcal{O}}(\frac{n}{\alpha}+k^{2}+\frac{k}{\alpha}\sqrt{nk})$</tex>, strictly improving upon the previously known bound <tex>$\tilde{\mathcal{O}}(\frac{n}{\alpha}+k^{3})$</tex>. Finally, we show that if the input strings do not have long highly periodic substrings, then the gap edit distance problem can be solved in sublinear time within any factor <tex>$\alpha > 1$</tex>. Specifically, if the strings contain no substring of length <tex>$\ell$</tex> with the shortest period of length at most <tex>$2k$</tex>, then the <tex>$k$</tex> vs <tex>$(1+\varepsilon)k$</tex> gap edit distance problem can be solved in time <tex>$\tilde{\mathcal{O}}(\frac{n}{\varepsilon^{2}k}+k^{2}\ell)$</tex>. We further give the first sublinear-time algorithm for the probabilistic embedding of edit distance to Hamming distance. Our <tex>$\tilde{\mathcal{O}}(\frac{n}{p})$</tex>-time procedure yields an embedding with distortion <tex>$k^{2}p$</tex>, where <tex>$k$</tex> is the edit distance of the original strings. Specifically, the Hamming distance of the resultant strings is between <tex>$\frac{k-p+1}{p}$</tex> and <tex>$k^{2}$</tex> with good probability. This generalizes the linear-time embedding of [Chakraborty, Goldenberg, Kouck√Ω, STOC 2016], where the resultant Hamming distance is between <tex>$k$</tex> and <tex>$k^{2}$</tex>. Our algorithm is based on a random walk over samples, which we believe will find other applications in sublinear-time algorithms.