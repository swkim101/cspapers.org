Many of us use fractals (e.g., C-Curve) and the Fibonacci sequence to teach recursion to our students. We show that the na√Øve recursive implementations of them have exponential running time. However, while we all explain that the Fibonacci sequence can be computed in linear time, how many of us show that completely self-similar fractals can also be created in linear time? Snap! is a blocks-based programming environment with a hidden and magical feature - the ability to save pen trails (i.e., the lines that the turtle-geometry sprite has drawn on the screen) into a single "costume", which can later be "stamped" onto the stage at an arbitrary position, orientation and size. Stamping takes constant time, regardless of the complexity of the pen trails that have been saved. This allows a sprite to draw a complicated picture once, save it as a pen trail, and simply stamp it over and over again, rather than redraw it. We have created "the world's fastest fractal drawing program", which makes use of this feature, & can draw the C-Curve fractal at level 40 (with over 1 trillion "lines") in a fraction of a second; the speed is quite startling! We encourage you to see it for yourself: https://tinyurl.com/SIGCSE2020WorldsFastestFractal In this lightning talk, we'll show our program, explain how it works, encourage educators to teach this new approach with Fractals, and challenge everyone to "think out of the box" when approaching problems that may have previously seemed intractable.