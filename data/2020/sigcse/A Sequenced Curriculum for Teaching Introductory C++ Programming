Several computer science education studies show that it is important when teaching introductory computer programming to teach the fundamental skills needed to learn programming in a sequenced order. These skills are reading code, writing code, interpreting programming templates, and applying programming templates to specific problems. However, most introductory programming courses, and programming textbooks, often interleave these skills so that writing code may be introduced before reading code and using templates to solve problems may be introduced before students are adequately taught how to interpret those templates. This poster will present a curriculum for teaching introductory C++ programming to Computer Science majors that follows the proper sequencing of skills. Examples of reading code using variable tracing problems are demonstrated, along with example problems in writing code. These examples will highlight several programming constructs including if statements, loops, and functions. Several programming templates are shown, as well as sample problems that require the student to recognize that the problem has an associated template and then be able to apply that template to solving the problem. The templates demonstrated in the poster include variable swapping, input one - process one, accumulate values until done, and processing all elements of an array.