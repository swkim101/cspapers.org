Since the development of efficient linear program solvers in the 80s, all major improvements for solving multi-commodity flows to high accuracy came from improvements to general linear program solvers. This differs from the single commodity problem (e.g. maximum flow) where all recent improvements also rely on graph specific techniques such as graph decompositions or the Laplacian paradigm. This phenomenon sparked research to understand why these graph techniques are unlikely to help for multi-commodity flow. [Kyng and Zhang FOCS’17] reduced solving multi-commodity Laplacians to general linear systems and [Ding, Kyng, and Zhang ICALP’22] showed that general linear programs can be reduced to 2-commodity flow. However, the reductions create sparse graph instances, so improvement to multi-commodity flows on denser graphs might exist. We show that one can indeed speed up multi-commodity flow algorithms on non-sparse graphs using graph techniques from single-commodity flow algorithms. This is the first improvement to high accuracy multi-commodity flow algorithms that does not just stem from improvements to general linear program solvers. In particular, using graph data structures from recent min-cost flow algorithm by [Brand, Lee, Liu, Saranurak, Sidford, Song, and Wang STOC’21] based on the celebrated expander decomposition framework, we show that 2-commodity flow on an n-vertex m-edge graph can be solved deterministically in $\widetilde{O}\left(\sqrt{m} n^{\omega-1 / 2}\right)$ time for current bounds on fast matrix multiplication $\omega \approx 2.372$, improving upon the previous fastest algorithms with $\widetilde{O}\left(m^{\omega}\right)$ [Cohen, Lee, and Song STOC’19] and $\widetilde{O}\left(\sqrt{m} n^{2}\right)$ [Kapoor and Vaidya;96] time complexity. For general k commodities, our algorithm runs in $\widetilde{O}\left(k^{2.5} \sqrt{m} n^{\omega-1 / 2}\right)$ time.