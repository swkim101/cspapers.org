Oblivious RAM (ORAM) allows a client to outsource database storage to a remote server while hiding the data access pattern. Existing designs use non-linear data structures (e.g., trees or hierarchical structures) and follow a online-offline paradigm. Clients submit their queries in the online phase and then the queries are ''flushed'' in the offline (eviction) phase. Such designs are interactive, requiring more than one round of client-server communication, be it during the online, offline, or both phases. Moreover, the client has to maintain an internal state which depends on the database state. We present Panacea: a novel design of ORAM based on FHE techniques, that uses a linear data-structure while being stateless, non-interactive, achieving O(1) bandwidth-blowup, and does not need an offline phase. In our design, servers are assumed to be much more resourceful than clients, which is typically the case in the cloud computing landscape. In that sense, we offload all the computational overhead to the server, and only ask our clients to perform encryption and decryption. In terms of interaction, this new paradigm is almost identical to those of any plaintext cloud storage solution. This allows ORAM to be a privacy enhancing drop-in solution for remote storage services such as storage buckets, password managers, etc. Building on top of our simple design, we show how to boost the server performance by three orders of magnitude in the amortized setting using probabilistic batch codes.