AI is changing the way we develop software. AI is becoming powerful enough to change the nature of interaction between humans and machines and not only to raise the level of abstraction. AI-driven software development is poised to transform the entire software development lifecycle (SDLC). As we move towards AI-driven software development, we must revisit some fundamental assumptions and address the following challenges: • How does the SDLC change when autonomous agents can handle some tasks? What is the role of code and version control? • Interaction model: What is the right human-machine interaction? How do we best communicate intent to the AI? How to best consume results? • Contextual awareness: How do we make the AI contextually aware of our development environment? Can we make the AI hyper-local and tailored to our problem and solution domains? • Trust: How can we trust the suggested results? How can we trust results that are not provided as code? In this talk, we will start with practical AI-assisted software development, including lessons from the field, based on our experience serving millions of users with Tabnine. We will cover different tasks in the SDLC and various techniques for addressing them in the face of the challenges above.