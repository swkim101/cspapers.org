Understanding software's user behavior is key to personalizing and enriching the user experience and improving the quality of the software. In this paper, we consider the use of user navigation graphs issued from user activity traces. The aim of our study is to do node classification over the user graph navigation in order to understand better the composition of the software and to offer a better experience to the users. Traditional baseline methods has shown good performance in the node classification task, but can't be applied for tasks as link prediction. Graph Neural Network on the contrary can satisfy both node classification and link prediction. However, GNN produce significant results when the features on the nodes are numerous enough. This is not always the case in real-world problems, because too many features implies too much data, storage issues, affect the performances of apps, etc. Indeed, due to the origin of the data and their uncontrolled generation, the resulting graphs contain few or no features (AKA non-attributed graphs). In addition, in industrial fields, some external requirements particularly legal may limit the collection and the use of data. In this article, we show that graphs issued from real-world data also have such limitations, and we propose the generation of artificial features on the nodes as a solution to this problem. The obtained results showed that the usage of artificial node features is a promising solution to overcome the greediness of GNN in terms of node features and applying GNN on the non-attributed graphs.