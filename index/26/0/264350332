SPARQL is the standard query language for RDF data. A SPARQL query consists of basic graph patterns (BGPs), which are matched onto the data graph, and graph pattern operators, which specify how to merge the matched results. Despite the prevalence of graph pattern operators in real-world SPARQL workloads, the optimization of SPARQL queries with graph pattern operators has scarcely been studied. We hence propose gFOV, a full-stack SPARQL query optimizer and plan visualizer targeting both BGPs and graph pattern operators. As its basis, we propose a novel BGP-based evaluation tree (BE-tree) plan representation for SPARQL queries that integrates the physical plan for BGPs, which directly accesses the RDF store, and the logical plan for graph pattern operators, which operates on existent results in memory. On top of it, we devise a full-stack cost-based optimization scheme, combining logical and physical plan optimization, that outperforms the state-of-the-art. In the demonstration, we present an interactive interface that explains our optimization scheme and shows its efficiency by visualizing changes in the query plan and allowing the audience to inspect and execute alternative plans.