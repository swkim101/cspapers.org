Let Fn be the set of all functions from n bits to n bits. Let fn specify for each key k of a given length a function fkn ? Fn. We say fn is pseudo-random if the following two properties hold: (1) Given a key k and an input a of length n, the time to evaluate fkn (?) is polynomial in n. (2) If a random key k is chosen, fkn "looks like" a random function chosen from fn to any algorithm which is allowed to evaiuste fkn at polynomial in n input values.Let P2n be the set of permutations (1-1 onto functions) from 2n bits to 2n bits. Let P2n specify for each key k of a given length a permutation Pk2n ? P2n. We present a simple method for describing P2n in terms of fn. The method has the property that if fn is pseudo-random then p2n is also pseude-random. The method was inspired by a study of the security of the Data Encryption Standard. This result, together with the result of Goldreich, Goldwasser and Micali [GGM], implies that if there is a pseudo-random number generator then there is a pseuderandom invertible permutation generator. We also prove that if two permutation generators which are "slightly secure" are cryptographically composed, the result is more secure than either one alone.