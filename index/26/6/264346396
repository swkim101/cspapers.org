We consider the following computational problem. Let F be a field. Given two <i>n</i>-variate polynomials <i>f</i>(<i>x</i><sub>1</sub>,.., <i>x</i><sub><i>n</i></sub>) and <i>g</i>(<i>x</i><sub>1</sub>,.., <i>x</i><sub><i>n</i></sub>) over the field F, is there an invertible linear transformation of the variables which sends <i>f</i> to <i>g</i>? In other words, can we substitute a linear combination of the <i>x</i><sub><i>i</i></sub>'s for each <i>x</i><sub><i>j</i></sub> appearing in <i>f</i> and obtain the polynomial <i>g</i>? This problem is known to be at least as difficult as the graph isomorphism problem even for homogeneous degree three polynomials. There is even a cryptographic authentication scheme (Patarin, 1996) based on the presumed <i>average-case</i> hardness of this problem.
 Here we show that at least in certain (interesting) special cases there is a polynomial-time randomized algorithm for determining this equivalence, if it exists. Somewhat surprisingly, the algorithms that we present are efficient even if the input polynomials are given as arithmetic circuits. As an application, we show that if in the key generation phase of Patarin's authentication scheme, a <i>random multilinear</i> polynomial is used to generate the secret, then the scheme can be broken and the secret recovered in randomized polynomial-time.