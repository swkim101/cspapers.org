As the number of upper-elementary students (grades 4-7) interested in computer programming increases, there is growing interest in age-appropriate pedagogical approaches to debugging instruction. However, previous research findings with younger novice learners are limited, and research with explicit debugging instruction has shown limited uptake by students. This experience report describes two novel classroom activities undertaken as part of an investigation into explicit debugging instruction with upper-elementary-aged students: student-generated examples (SGE), in which students modified working programs by purposefully introducing bugs; and stump-the-teacher, in which the teacher demonstrates their expert debugging approach explicitly by thinking aloud while attempting to debug the SGEs. Students demonstrated both an eagerness to craft examples that they hoped would stump the teacher and actively engaged with the live-debugging exercise. Students were also asked to compare and describe their own debugging approach to the teacher's debugging approach. Analysis of the bugs deliberately introduced by students found that they were primarily syntax-related, in line with early novice programmer error patterns. Additionally, student comparisons of their debugging approaches demonstrated awareness and engagement by most students, as well as possible early indications for disengaged or overwhelmed students. Further, analysis of later student debugging behavior on exercises showed students following the "run first, run often" approach demonstrated by the teacher. These findings suggest that engaging students in explicit debugging instruction can provide insights into their engagement and confidence levels, as well as encourage them to self-reflect and improve their debugging approaches.