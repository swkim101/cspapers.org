A model of unrestricted And-parallel execution for logic programs is described, based on Dependency Directed Backtracking (DDBT) aimed at improving the efficiency of execution while remaining faithful to conventional syntax and semantics. This is achieved with maximum exploitation of parallelism, DDBT, support of opportunistic stream parallelism and potentially parallel backtracking. The same dependency information needed for DDBT is used to resolve variable binding conflicts. An algorithmic description of the behavior of processes embodying logical procedures is given. Circular dependencies arising out of the opportunistic nature of execution are removed by imposing an ordering on dependencies with an overwriting rule. Various aspects of the model are discussed and illustrated with examples.