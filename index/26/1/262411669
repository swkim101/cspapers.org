In a class hierarchy, a method should have access to only as many attributes as it needs to do its job. In general case, object programmers do not have regard to such an optimizing criterion. Consequent defaults are displayed and measured. In analyzing the way class attributes are used by methods, can we define alternative classes, not containing more attributes than are needed? Is it possible to translate an application into one achieving the same purpose but with attributes more efficiently spread in class hierarchy? We propose a reversible technique for restructuring that may answer these questions. Indirectly, it provides by measurement a way for localizing attributes and restricting their use in an object system. [Lieb 88], [Parn 86].