Researchers stipulate that a mental model of a system comprises two types of sub-components: parts andstate changes. CS education researchers have noted that state changes in a program are some of the most troublesome concepts to understand. Furthermore, challenges understanding a program's dynamic state changes persist in beginning students even after instruction. Drawing from the theories of mental models, we decomposed arrays into its sub-components of parts andstate changes. Using a questionnaire, we elicited CS1 students' mental models after they received instruction on arrays and then we analyzed and compared the correctness of their mental models with a focus on this decomposition. We compared the mental model correctness of the parts and state changes components. We found that the participants' mental model correctness of parts was significantly higher (i.e., more correct responses) than the mental model correctness of state changes, regardless of teaching modality (online or in-person) or prior programming experience. Moreover, participants with prior programming experience have higher mental model correctness (both for parts and state changes) than participants with no prior programming experience. We close with a discussion of the implications of these findings for introductory courses and highlight recommendations from the literature on ways to teach dynamic aspects of programming.