Recently, with the increasing size of real-world networks, graph engines have been studied extensively for efficient graph analysis. As one of the state-of-the-art single-machine-based graph engines, \textRealGraph ^\textGPU processes large-scale graphs very efficiently thanks to its well-designed architecture and the strong parallel-computing power of GPU. Via a preliminary analysis, we first observe \textRealGraph ^\textGPU has a good chance for more performance improvement in IOs between storage and GPU's device memory. This motivates us to present \textRealGraph ^\textGPU++ , a solution that substantially reduces IO time by establishing adirect data path between storage and device memory. Additionally, it employsasynchronous processing of CPU and GPU tasks to issue IO requests more frequently, thereby improving overall performance by achieving higher IO bandwidth. Experimental results on real-world datasets show that \textRealGraph ^\textGPU++ outperforms dramatically existing 11 state-of-the-art graph engines including \textRealGraph ^\textGPU .