If a data base query fails, i.e., if the required information is not available, contemporary data base systems report the fact that the query failed rather than the actual reason for the failure. We argue that the deeper reason for a failure may be detected by computing certain subqueries of the user's query. We introduce a query language based on the relational calculus and show how the subqueries are inferred from a failing query which is expressed in this language. Moreover we demonstrate how a certain class of integrity constraints may be used to augment the procedure which is employed to compute an informative answer to a failing query. The method is a good means to clear the dialog between a user and the data base from unnecessary queries.