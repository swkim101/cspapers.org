In this panel, we discuss the relevance of formal techniques for applying object-orientation. The object-oriented paaadigm is currently broadened from the programming realm to cover the full development life cycle, including (domain) analysis and design. These extensions are driven by the demands of large system development. Delivering huge 00 software systems routinely and cost effectively is a significant challenge. To quote Ed Yourdon: “A system composed of 100,000 lines of C++ is not to be sneezed at, but we don’t have that much trouble developing 100,000 lines of COBOL today. The real test of OOP will come when systems of 1 to 10 million lines of code are developed.” Scaling up seems to require increasing the precision of the semantics of the languages/ nota,tions used by a team.