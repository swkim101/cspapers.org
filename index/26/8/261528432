Given is a sequence of <i>n</i> positive integers <i>w</i><inf>1</inf>;<i>w</i><inf>2</inf>....,<i>w</i><inf><i>n</i></inf> that are associated with the items 1, 2....<i>n</i> respectively. In the <i>windows scheduling</i> problem, the goal is to schedule all the items (equal length information pages) on broadcasting channels such that the gap between two consecutive appearances of page <i>i</i> on any of the channels is at most <i>w</i><inf><i>i</i></inf> slots (a slot is the transmission time of one page). In the <i>unit fractions bin packing</i> problem, the goal is to pack all the items in bins of unit size where the size (width) of item <i>i</i> is 1/<i>w</i><inf><i>i</i></inf>. The optimization objective is to minimize the number of channels or bins. In the off-line setting the sequence is known in advance whereas in the on-line setting the items arrive in order and assignment decisions are irrevocable. Since a page requires at least 1=wi of the channel's bandwidth, it follows that windows scheduling without migration (all broadcasts of a page must be from the same channel) is a restricted version of unit fractions bin packing.Let <i>H</i> = [Σ<sup><i>n</i></sup><inf><i>i</i> = 1</inf> (1/<i>w</i><inf><i>i</i></inf>)] be the obvious bandwidth lower bound on the required number of bins (channels). Previously an <i>H</i> + <i>O</i>(ln <i>H</i>) off-line algorithm for the windows scheduling problem was known. This paper presents an <i>H</i> + 1 off-line algorithm to the unit fractions bin packing problem. In the on-line setting, this paper presents an <i>H</i> + <i>O</i>(√<i>H</i>) algorithm to both problems where the one for the unit fractions bin packing problem is simpler. On the other hand, this paper shows that already for the unit fractions bin packing problem, any on-line algorithm must use at least <i>H</i> + Ω (ln <i>H</i>) bins.