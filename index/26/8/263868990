We present a distributed randomized algorithm finding Minimum Spanning Tree (MST) of a given graph in O(1) rounds, with high probability, in the congested clique model. The input graph in the congested clique model is a graph of n nodes, where each node initially knows only its incident edges. The communication graph is a clique with limited edge bandwidth: each two nodes (not necessarily neighbours in the input graph) can exchange O(log n) bits. As in previous works, the key part of the MST algorithm is an efficient Connected Components (CC) algorithm. However, unlike the former approaches, we do not aim at simulating the standard Boruvka's algorithm, at least at initial stages of the CC algorithm. Instead, we develop a new technique which combines connected components of sample sparse subgraphs of the input graph in order to accelerate the process of uncovering connected components of the original input graph. More specifically, we develop a sparsification technique which reduces an initial CC problem in O(1) rounds to its two restricted instances. The former instance has a graph with maximal degree O(log log n) as the input - here our sample-combining technique helps. In the latter instance, a partition of the input graph into O(n/ log log n) connected components is known. This gives an opportunity to apply previous algorithms to determine connected components in O(1) rounds. Our result addresses a problem proposed by Lotker et al. [SPAA 2003; SICOMP 2005] and improves over previous O(log* n) algorithm of Ghaffari et al. [PODC 2016], and O(log log log n) algorithm of Hegeman et al. [PODC 2015]. It also determines Î˜(1) round complexity in the congested clique for MST, as well as other graph problems, including bipartiteness, cut verification, s-t connectivity, and cycle containment.