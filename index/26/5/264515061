In exploratory digital fabrication, artists, scientists, and engineers use machines and code to prototype object forms and ways of making that do not currently exist. However, prior research has yet to provide expressive agency for makers doing this work, which includes rapid experimentation, safe adjustments and detailed, accurate control of machines and data. To address this, I frame exploratory fabrication as physical-digital programming: handling physical contingencies within core features of a programming language. I posit that physical-digital programming will let exploratory makers build digital fabrication workflows that are otherwise prohibitively difficult to construct, share, and improve. To test this hypothesis, I built three systems that prototype components of physical-digital programming: a common, multimodal programming environment; a formal grammar of machine functionality; and a method of generating task-specific visualizations of machine behavior. In addition, I am working on a fourth system intended to synchronize code assumptions with physical-world states through user-defined axioms and augmented reality. These tools will help both novice and experienced makers use programming to solve emerging problems that require physical automation.