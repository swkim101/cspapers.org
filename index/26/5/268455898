We define algorithmic essays as short reports that explain and contrast at least two approaches to a computational problem. Writing and reviewing others' essays requires the higher cognitive levels of the revised Bloom taxonomy (analyse, evaluate, create) and allows students to practise professional skills like: communicating clearly a problem and its solutions; giving & receiving feedback; writing clean code using appropriate tools. We outline the requirements for an environment that supports writing, critiquing and publishing algorithmic essays, and demonstrate one such environment: an existing cloud platform (with free education accounts) for Jupyter notebooks, the natural medium to write documents that mix text and code. We wrote open-source materials that educators can adopt and adapt to introduce algorithmic essays in their courses. The materials include sample essays, a small library, and guidance on how to write and structure essays, how to give feedback, how to lint code, and how to use the platform and the library. The latter has simple auxiliary functions that allow students to test code and measure its run-time performance for best- and worst-case inputs, without the learning curve of testing & profiling frameworks. The demo shows how to use the platform and our materials to write essays without installing or configuring software, and how to comment on essays to help improve them. We also discuss what changes educators may need to make to adapt the materials to their courses.