This paper proposes a task planning and motion control framework that generates task plans for a linear temporal logic specification (LTL), which are then executed using a task-space constrained motion controller and a local task planner that overcomes local minima. We propose a new encoding for task specifications, directly in the task-space, as constraints of a mixed-integer linear program that can be used with off-the-shelf LTL linear encoding. We apply our framework to plan and execute trajectories for a free-flying robot and show that the task plan is accomplished without collisions, even in the presence of unexpected moving obstacles that are not considered in the planning phase, while control signal constraints are satisfied. To evaluate the local minima avoidance, we compare the local task planner with a sampling-based motion planner, and the results show a smoother trajectory with a faster execution and less total planning time when using our framework. Last, our framework scaled well with a longer LTL specification, as opposed to automata-based frameworks that usually suffer with the curse of the dimensionality.