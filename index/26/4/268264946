With the emergence of microsecond-scale NVMe storage devices, the Linux kernel storage stack overhead has become signiﬁcant, almost doubling access times. We present XRP, a framework that allows applications to execute user-deﬁned storage functions, such as index lookups or aggregations, from an eBPF hook in the NVMe driver, safely bypassing most of the kernel’s storage stack. To preserve ﬁle system semantics, XRP propagates a small amount of kernel state to its NVMe driver hook where the user-registered eBPF functions are called. We show how two key-value stores, BPF-KV, a simple B + -tree key-value store, and WiredTiger, a popular log-structured merge tree storage engine, can leverage XRP to signiﬁcantly improve throughput and latency.