E-business sites are increasingly utilizing dynamic web pages since they enable a much wider range of interaction than static HTML pages can provide. Dynamic page generation technologies allow a Web site to generate pages at run-time, based on various parameters. Delaying content decisions until run-time a ords a Web site signi cant exibility in customizing page content, thereby enriching users' Web experiences. At the same time, however, dynamic page generation technologies have resulted in serious performance problems due to the increased load placed on the server-side infrastructure. Consequently, end users experience increased response times. According to recent research [1], 40% of the total page delivery delay experienced by end users can be attributed to server-side latency. As server-side techniques such as dynamic page generation techologies become more widespread, this percentage will only increase. There has been very little work so far to address the delays associated with dynamic page generation. One proposed approach is to cache entire pages of dynamically generated content (e.g., [3, 5]). However, caching dynamically generated pages in this manner is infeasible, since two calls to the same script with the same input parameters are not guaranteed to produce the same output. Our approach to this problem