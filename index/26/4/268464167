The early web was built on static HTML or pages generated dynamically by the server. In both paradigms, the combination of HTML, CSS, and JavaScript was considered a specific platform rather than a core CS concept. In recent years, the nature of web development has shifted dramatically, emphasizing web applications that limit their dependency on server-side processing. Much of the content generation is handled in response to asynchronous execution of JavaScript. JavaScript is no longer just a language for writing event handlers; it now forms the core of client-side web development. This code must interact dynamically and asynchronously with complex backend processing systems. As such, modern web development is not as straightforward as using a server-side language to generate HTML text dynamically. It requires addressing a new computational paradigm, while also placing a greater emphasis on the user experience and accessibility. In our classes, we have observed the need to rethink how this part of our curriculum is structured. A one-semester course is no longer sufficient. We have also begun starting with JavaScript and the DOM as the native language of the web. In this birds-of-a-feather (BoF) session, we will exchange ideas on how this part of the curriculum is structured and how others approach teaching these courses.