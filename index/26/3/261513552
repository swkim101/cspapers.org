Knowledge processing is very demanding on computer architectures. Knowledge processing generates subcomputation paths at an exponential rate. It is memory intensive and has high communication requirements. Marker passing architectures are good candidates to solve knowledge processing problems. In this paper, we justify the design decisions made for the Semantic Network Array Processor (SNAP). Important aspects of SNAP are: the instruction set, markers, relations, propagation rules, interconnection network, and granularity. These features are compared to those in NETL and the Connection Machine.