We describe a new class of scheduling problem with precedence constraints, the disconnected staged scheduling problem (dssp). dssp is a nonpreemptive multiprocessor deadline scheduling problem; we seek to maximize the aggregate value of jobs that complete by a specified deadline. It arises in many commercially-important domains including bioinformatics and seismic signal processing. Our interest in dssp began with the practical problem of scheduling computer animation rendering jobs. Each job represents a brief film clip and consists of several stages that must be processed in order (e.g., physical simulation, model baking, frame rendering, and clip assembly). Each stage in turn consists of computational tasks that may be run in parallel; all tasks in a stage must finish before any task in the next stage can start. A job completes if and only if all of its tasks complete. Precedence constraints exist among tasks within a job, but not among tasks in different jobs. Jobs run overnight and yield value only if they complete before the artists who submitted them return the following morning. Demand frequently exceeds available CPU capacity, making it impossible to complete all submitted jobs by the deadline. The set of jobs is known in advance but their computational demands (e.g., the run times of tasks) are not precisely known. Existing scheduling practices rely on priority schedulers, which are not well suited to dssp because ordinal priorities cannot adequately express the value of jobs. Furthermore priority schedulers make job selection decisions as byproducts of task sequencing decisions. Our approach is to assign to jobs completion rewards whose sums and ratios are meaningful, and to perform job selection and task sequencing separately. We present both theoretical analysis and empirical evaluation of our dssp solution. Our empirical results are based on an eight-week trace of 2,388 jobs collected in a 1,000-CPU production system that rendered part of film Shrek 2 in 2004. We show that our two-phase method improves aggregate reward and achieves near-optimal performance under