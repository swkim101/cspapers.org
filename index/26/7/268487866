We propose a new exercise format for an upper-division software engineering course. The exercises scaffold the gap between the "box and arrows" representation of a complex software architecture and the nuts-and-bolts realization of that architecture in code. A qualitative study with 12 upper-division computer science students explored the effectiveness of these exercises as a teaching tool and opportunities to improve them. All participants desire for these new exercises to be incorporated into their course, self-rating the exercises as educational and confidence-boosting, suggesting these new types of exercises will pave the way for more confident and competent software engineers.