Protocol implementations are essential components in network infrastructures. Flaws hidden in the implementations can easily render devices vulnerable to adversaries. Therefore, guaranteeing their correctness is important. However, commonly used vulnerability detection techniques, such as fuzz testing, face increasing challenges in testing these implementations due to ineffective feedback mechanisms and insufﬁcient protocol state-space exploration techniques. This paper presents B LEEM , a packet-sequence-oriented black-box fuzzer for vulnerability detection of protocol implementations. Instead of focusing on individual packet generation, B LEEM generates packets on a sequence level. It provides an effective feedback mechanism by analyzing the sys-tem output sequence noninvasively, supports guided fuzzing by resorting to state-space tracking that encompasses all parties timely, and utilizes interactive trafﬁc information to generate protocol-logic-aware packet sequences. We evaluate B LEEM on 15 widely-used implementations of well-known protocols (e.g., TLS and QUIC). Results show that, compared to the state-of-the-art protocol fuzzers such as Peach, B LEEM achieves substantially higher branch coverage (up to 174.93% improvement) within 24 hours. Furthermore, B LEEM exposed 15 security-critical vulnerabilities in prominent protocol implementations, with 10 CVEs assigned.