In scrum, the development team is responsible for converting the selected product backlog items of a sprint to a "done" product increment. In sprint planning, the team develops product functionality to fulfill the selected product backlog items. In order to implement the product functionality, the team plans needed activities and then decomposes the activities into tasks. When dependent tasks are assigned to different developers, there is need for coordination between developers. The needs of coordination are difficult to quantify, however, quantification of the needs of coordination is an important factor to accurately estimate team performance of a sprint. In this paper, a method is proposed to calculate distribution of task dependency among developers, and the distribution is defined as Coordination Needs. An experiment on an open source project, Spring, demonstrates that the Coordination Needs is strongly correlated with team performance. With the method, the Coordination Needs of task allocation is revealed so team performance of a sprint can be accurately estimated, and task allocation can be optimized.