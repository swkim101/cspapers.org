During the booting process of an Android device, a special daemon called Init is launched by the kernel as the ﬁrst user-space process. Android allows vendors to extend the behavior of Init by introducing custom routines in .rc ﬁles. These Init routines can also be triggered by privileged pre-installed apps in a certain manner to accomplish privileged functionalities. However, as these pre-installed apps may fail to properly protect access to code sites triggering these Init routines, the capabilities of these routines may leak to unprivileged apps, resulting in crossing security boundaries set by the system. To this end, this study aims at investigating the prevalence of these Init routines and their security impact. We present DEFI NIT as a tool to help automate the process of identifying Init routines exposed by pre-installed apps and estimating their potential security impact. Our ﬁndings are alarming. We found that custom Init routines added by vendors were substantial and had signiﬁcant security impact. On a data set of 259 ﬁrmware from the top 21 vendors worldwide, we iden-tiﬁed 1 , 947 exposed custom Init routines in 101 ﬁrmware from 13 vendors. Of these routines, 515 performed at least one sensitive action. We veriﬁed 89 instances spanning 30 ﬁrmware from 6 vendors, allowing unprivileged apps to perform sensitive functionalities without user interaction, including disabling SELinux enforcement, snifﬁng network trafﬁc, reading system logs, among others.