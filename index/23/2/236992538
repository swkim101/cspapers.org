The bandwidth of ﬂash storage has been surging in recent years. Employing multicores to fully unleash its abundant bandwidth becomes a necessary step towards building high performance storage systems. This paper presents the de-sign and implementation of M ax , a multicore-friendly log-structured ﬁle system (LFS) for ﬂash storage. With three main techniques, M ax systematically improves the scalability of LFS while retaining the ﬂash-friendly design. First, we pro-pose a new reader-writer semaphore to scale the user I / Os with negligible impact on the internal operations of LFS. Second, we introduce ﬁle cell to scale the access to in-memory index and cache while delivering concurrency-and ﬂash-friendly on-disk layout. Third, to fully exploit the ﬂash parallelism, we advance the single log design with runtime-independent log partitions, and delay the ordering and consistency guarantees to crash recovery. We implement M ax based on the F2FS in the Linux kernel. Evaluations show that M ax signiﬁcantly improves scalability, and achieves an order of magnitude higher throughput than existing Linux ﬁle systems.