Real-time embedded systems with safety-critical functions must often share a limited number of computational resources. Scheduling models within the Hierarchical Real-Time Scheduling (HiRTS) framework allow applications to share resources in an efficient manner. The Regularity-Based Resource Partition (RRP) model offers an efficient way to schedule resource partitions, ensuring transparent task scheduling. A model within this framework can manage resource distribution in real-time embedded systems, ensuring fault tolerance through a checkpointing system. However, checkpoint insertions are known to incur high time and energy overheads. This paper proposes the use of a Two-State checkpointing scheme in conjunction with the fault-tolerant hierarchical RRP model. By reducing the number of checkpoints during fault-free states, we can reduce time and energy overheads while still ensuring fault tolerance in worst-case fault scenarios. We outline our plan to construct a model that can offer low-overhead solution to transient faults in embedded real-time systems. We do so with the intent to build upon this model and eventually test it through simulation.