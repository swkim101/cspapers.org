We present a faster symbolic algorithm for the following central problem in probabilistic verification: Compute the maximal end-component (MEC) decomposition of Markov decision processes (MDPs). This problem generalizes the SCC decomposition problem of graphs and closed recurrent sets of Markov chains. The model of symbolic algorithms is widely used in formal verification and model-checking, where access to the input model is restricted to only symbolic operations (e.g., basic set operations and computation of one-step neighborhood). For an input MDP with n vertices and m edges, the classical symbolic algorithm from the 1990s for the MEC decomposition requires O(n2) symbolic operations and O(1) symbolic space. The only other symbolic algorithm for the MEC decomposition requires $O(n\sqrt m )$ symbolic operations and $O(\sqrt m )$ symbolic space. The main open question has been whether the worst-case O(n2) bound for symbolic operations can be beaten for MEC decomposition computation. In this work, we answer the open question in the affirmative. We present a symbolic algorithm that requires $\widetilde O\left( {{n^{1.5}}} \right)$ symbolic operations and $\widetilde O\left( {\sqrt n } \right)$ symbolic space. Moreover, the parametrization of our algorithm provides a trade-off between symbolic operations and esymbolic space: for all 0 < ϵ ≤ 1/2 the symbolic algorithm requires $\widetilde O\left( {{n^{2 - \in }}} \right)$ symbolic operations and $\widetilde O\left( {{n^ \in }} \right)$ symbolic space ($\widetilde O(\cdot)$ hides poly-logarithmic factors).Using our techniques we also present faster algorithms for computing the almost-sure winning regions of ω-regular objectives for MDPs. We consider the canonical parity objectives for ω-regular objectives, and for parity objectives with d-priorities we present an algorithm that computes the almost-sure winning region with $\widetilde O\left( {{n^{2 - \in }}} \right)$ symbolic operations and $\widetilde O\left( {{n^ \in }} \right)$ symbolic space, for all 0 < ϵ ≤ 1/2. In contrast, previous approaches require either (a) O(n2•d) symbolic operations and O(log n) symbolic space; or (b) $O(n\sqrt m \cdot d)$ symbolic operations and $\widetilde O\left( {\sqrt m } \right)$ symbolic space. Thus we improve the time-space product from $\widetilde O\left( {{n^2}\cdot d} \right)$ to $\widetilde O\left( {{n^2}} \right)$.