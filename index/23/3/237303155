Common Vulnerabilities and Exposures (CVEs) are used to ensure conﬁdence among developers, to share information about software vulnerabilities, and to provide a baseline for security measures. Therefore, the correctness of CVE reports is crucial for detecting and patching software vulnerabilities. In this paper, we introduce the concept of “Vulnerability Zero” (VZ), the software where a vulnerability ﬁrst originated. We then present V0Finder , a precise mechanism for discovering the VZ of a vulnerability, including software name and its version. V0Finder utilizes code-based analysis to identify reuse relations, which specify the direction of vulnerability propagation, among vulnerable software. V0Finder constructs a graph from all the identiﬁed directions and traces backward to the root of that graph to ﬁnd the VZ. We applied V0Finder to 5,671 CVE vulnerabilities collected from the National Vulnerability Database (NVD) and popular Bugzilla-based projects. V0Finder discovered VZs with high accuracy of 98% precision and 95% recall. Furthermore, V0Finder identiﬁed 96 CVEs with incorrect information related to their respective VZs. We conﬁrmed that the incorrect VZ causes prolonged patch updates of vulnerable software; the patch update of CVEs with the incorrect VZ information takes 2 years, while the patch update of CVEs with the correct VZ takes less than a year on average. Such in-correctly identiﬁed VZ hinders the objective of the CVE and causes confusion rather than “ensuring conﬁdence” among developers. Our analysis shows that V0Finder can enhance the credibility of information provided by the CVEs.