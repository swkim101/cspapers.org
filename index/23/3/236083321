In this paper, we consider the problem of finding an induced cycle passing through k given vertices, which we call the induced cycle problem. The significance of finding induced cycles stems from the fact that precise characterization of perfect graphs would require structures of graphs without an odd induced cycle, and its complement. There has been huge progress in the recent years, especially, the Strong Perfect Graph Conjecture was solved in [6]. Concerning recognition of perfect graphs, there had been a long-standing open problem for detecting an odd hole and its complement, and finally this was solved in [4].Unfortunately, the problem of finding an induced cycle passing through two given vertices is NP-complete in a general graph [2]. However, if the input graph is constrained to be planar and k is fixed, then the induced cycle problem can be solved in polynomial time [13, 14, 16].In particular, an O(n2) time algorithm is given for the case k = 2 by McDiarmid, Reed, Schrijver and Shepherd [18], where n is the number of vertices of the input graph.Our main results in this paper are to improve their result in the following sense.1. The number of vertices k is allowed to be non-trivially super constant number, up to k = o((log n/log log n)2/3). More precisely, when k = o((log n/log log n)2/3), then the ICP in planar graphs can be solved in O(n2+e) time for any e>0.2. The time complexity is linear if the given graph is planar and k is fixed.3. The above results are extended to graphs embedded in a fixed surface.We note that the linear time algorithm (the second result) is independent from the first result.Let us point out that we give the first polynomial time algorithm for the problem for the bounded genus case. In fact, our proof gives a short proof of a result announced in [20] (without complete proof) which gives a linear time algorithm for the disjoint paths problem for fixed k for the bounded genus case. We also extend this result to the induced disjoint paths problem.Let us observe that if k is as a part of the input, then the problem is still NP-complete, and so we need to impose some condition on k.