The appealing properties of NVM including high performance, persistence, and byte-addressability, and a recent active thread of building remote memory systems with RDMA, have produced considerable interest in combining them for fast and persistent remote memory systems. However, many prior systems are either based on emulated NVM or have failed to fully exploit NVM characteristics, leading to sub-optimal performance. This paper conducts a systematic study to summarize optimization hints that the system designer can use to exploit NVM with RDMA better. Speciﬁcally, we demonstrate how system conﬁgurations, NVM access patterns, and RDMA-aware optimizations affect the efﬁcacy of RDMA-NVM systems. Based on the summarized hints, we empirically study the design of two existing RDMA-NVM systems, namely a distributed database (DrTM+H) and a distributed ﬁle system (Octopus). Both systems are designed when no production NVM is available, and neither of them achieves good performance on it. Our optimized systems achieve up to 2.4X (from 1.2X) better performance.