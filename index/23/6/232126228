In recent years, hundreds of CS1 classes have adopted a many small programs (MSP) approach to weekly programming assignments. The MSP approach involves assigning students several smaller programming assignments per week, for example 5-7, versus the traditional one larger program (OLP) per week. This shift is largely made possible by easy-to-use program auto-graders that have arisen in recent years. Such auto-graders make grading so many programs feasible, while also providing students with immediate feedback. The MSP approach has been shown to yield advantages that include earlier starts, reduced anxiety, increased confidence, the ability to switch to another program if stuck, better exam performance, and less attrition, with analysis showing students easily transition to larger programs later. We desired to gain insight on how our CS1 students were working through our weekly MSPs. Thus, in 2018, we began exploring automated creation of concise representations of student behavior while they developed their programs, what we call "workflow charts". We used a popular commercial auto-grader that has a built-in development environment and provides detailed log files of every program compile/run by each student. We describe the goals of such a representation, the evolution of our representation to its current status, various design trade-offs, our current usage, and numerous possible future uses in CS1 classes. We plan to create a website for any instructor to upload such log files to gain insight on their own class' performance.