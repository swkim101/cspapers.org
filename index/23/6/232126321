Comparison activities, such as comparing a code against peers' code, rubric, exemplar or other are found to be an effective teaching strategy for building programming skills. Comparison activities support self-regulated learning through a process of abstraction. That is, students are facilitated to engage in a conversation with their work and produce inner feedback that becomes the raw material for their learning and development [1]. This workshop is designed to support educators in their designing and implementing effective comparison activities and administering the process to facilitate student self-regulation. This highly interactive and collaborative workshop will provide participants with materials and ideas that are immediately useable and applicable to a wide variety of teaching practices. In particular, we guide participants in their developing insights about comparison activities for students self-regulated learning; we describe and discuss ubiquitous, implicit comparison opportunities, and facilitate participants identifying concrete opportunities for explicitly implementing comparison activities within their teaching practice; we introduce participants to a framework that guides their decisions on design and implementation; and provide case examples. These segments will be interspersed with reflective and experiential exercises to highlight the benefits and processes of comparison-based internal feedback. Comparison activities can be deployed across all learning settings including in classroom settings, individual and group assignments, and online tasks and interactions.