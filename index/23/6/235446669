Software obfuscation is a crucial technology to protect intellectual property. Despite its importance, commercial and academic state-of-the-art obfuscation approaches are vulnerable to a plethora of automated deobfuscation attacks, such as symbolic execution, taint analysis, or program synthesis. While several enhanced techniques were proposed to thwart taint analysis or symbolic execution, they either impose a prohibitive runtime overhead or can be removed by compiler optimizations. In general, they suffer from focusing on a single attack vector, allowing an attacker to switch to other more effective techniques, such as program synthesis. In this work, we present L OKI , an approach for code obfuscation that is resilient against all known automated deob-fuscation attacks. To this end, we deploy multiple techniques, including a generic approach to synthesize formally veriﬁed expressions of arbitrary complexity. Contrary to state-of-the-art approaches that rely on a few hardcoded generation rules, our expressions are more diverse and harder to pattern match against. Moreover, L OKI protects against previously unac-counted attack vectors such as program synthesis, for which it reduces the success rate to merely 19%. Overall, our design incurs signiﬁcantly less overhead while providing a much stronger protection level.