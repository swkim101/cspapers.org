As machine learning becomes more widely used for critical applications, the need to study its implications in privacy becomes urgent.

Given access to the target model and auxiliary information, model inversion attack aims to infer sensitive features of the training dataset, which leads to great privacy concerns.

Despite its success in the grid domain, directly applying model inversion techniques on non grid domains such as graph achieves poor attack performance due to the difficulty to fully exploit the intrinsic properties of graphs and attributes of graph nodes used in GNN models.

To bridge this gap, we present Graph Model Inversion attack, which aims to infer edges of the training graph by inverting Graph Neural Networks, one of the most popular graph analysis tools.

Specifically, the projected gradient module in our method can tackle the discreteness of graph edges while preserving the sparsity and smoothness of graph features.

Moreover, a well designed graph autoencoder module can efficiently exploit graph topology, node attributes, and target model parameters.

With the proposed method, we study the connection between model inversion risk and edge influence and show that edges with greater influence are more likely to be recovered.

Extensive experiments over several public datasets demonstrate the effectiveness of our method.

We also show that differential privacy in its canonical form can hardly defend our attack while preserving decent utility.