The Zoned Namespace (ZNS) interface represents a new division of functionality between host software and ﬂash-based SSDs. Current ﬂash-based SSDs maintain the decades-old block interface, which comes at substantial expense in terms of capacity over-provisioning, DRAM for page mapping tables, garbage collection overheads, and host software complexity attempting to mitigate garbage collection. ZNS offers shelter from this ever-rising block interface tax . This paper describes the ZNS interface and explains how it affects both SSD hardware/ﬁrmware and host software. By exposing ﬂash erase block boundaries and write-ordering rules, the ZNS interface requires the host software to address these issues while continuing to manage media reliability within the SSD. We describe how storage software can be specialized to the semantics of the ZNS interface, often resulting in signiﬁcant efﬁciency beneﬁts. We show the work required to enable support for ZNS SSDs, and show how modiﬁed versions of f2fs and RocksDB take advantage of a ZNS SSD to achieve higher throughput and lower tail latency as compared to running on a block-interface SSD with identical physical hardware. For example, we ﬁnd that the 99.9 th -percentile random-read latency for our zone-specialized RocksDB is at least 2–4 × lower on a ZNS SSD compared to a block-interface SSD, and the write throughput is 2 × higher.