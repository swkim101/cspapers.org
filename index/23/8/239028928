This paper studies a fundamental distributed primitive - approximate consensus - in connected things using wireless networks. It has been extensively studied in different disciplines, such as fault-tolerant computing, distributed computing, control, and robotics communities. To our surprise, we have not found any practical algorithm that is appropriate for our target scenario - a system of small things that have limited computation and storage capability, and use lossy wireless links to communicate with each other. This work first identifies the limitations of prior algorithms. Then we present two fault-tolerant approximate consensus algorithms, which minimizes storage complexity. In an n-node system, the first algorithm tolerates crash faults and only needs to store 4 values and an n-bit bit-vector, whereas the second algorithm tolerates up to f Byzantine faults, and needs to store 2f + 4 values and an n-bit bit-vector. In practice, these values are implemented using either integer or float data type. Compared to our algorithms, prior works may need to store O(nD) more values, where D is the number of rounds needed for convergence.