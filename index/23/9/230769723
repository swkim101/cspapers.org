This paper proposes and evaluates two techniques for efficient user-level communication on any multicomputer with a reliable network (e.g., a wormhole routing network) and/or a network interface protected in a privileged domain. This work was motivated by the following two observations. First, commercial communication systems for multicomputers with reliable networks typically use con.servaiive flow-control protocols, in which a processor only sends a message after it ensures that the destination processor has enough buffer space to receive the message. These protocols may send many protocol messages. For example, the Intel NX/2 operating system running on several models of Intel multicomputers always sends three messages in order to transfer any medium or long message [1]. This three-way protocol increases dramatically the latency for medium messages, a problem that is intrinsic to the conservative flow-control protocols [2]. Second, conventional communication systems typically cross protection boundaries through expensive traps, upcalls, and software interrupts. While it is possible for the kernel and the user-level address space to communicate asynchronously through shared kernel/user data structures, many applications may require messages to be delivered synchronously in order to achieve good performance. We propose to alleviate these two problems via the two techniques described in the following two sections.