This paper puts a new light on computational secret sharing with a view towards distributed storage environments. It starts with revisiting the security model for encrypted data protection against key exposure. The goal of this revisiting is to take advantage of the characteristics of distributed storage in order to design faster key leakage resisting schemes, with the same security properties as the existing ones in this context of distributed storage. We then introduce two novel schemes that match our ---all storage places or nothing--- security level of secret sharing under key exposure. The first one is based on standard block cipher encryption. The second one fits both in the random oracle model (e.g. Keccak) or in the idealized blockcipher model with twice larger key than the security parameter (e.g. an idealized AES256 would achieve 128 bits security). The first one reduces by half the amount of the processing required to be done in addition to data encryption with regard to the fastest state-of-the-art solution, whereas the second one completely eradicates additional processing. We confirm the complexity results by presenting a performance evaluation. A non-negligible part of our contribution lies in the provided security analysis. In addition to giving security proofs for our schemes, we revisit the ones of previous work and point out structural weaknesses in a context of key exposure.