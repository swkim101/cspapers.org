This paper concerns an effort to implement structured programming concepts in an introductory COBOL programming course in order to improve student program design and techniques. Since COBOL's native habitat is a business environment with recurring processing cycles and evolving systems requirements, COBOL, perhaps more than other languages, exhibits a glaring need for orderly structure and rigid standards to provide for readability, maintainability and modifiability. It is difficult for a student in a one-quarter course to fully appreciate the significance of having these characteristics in his own program when they are reviewed months (or years) later or in programs acquired from someone else.