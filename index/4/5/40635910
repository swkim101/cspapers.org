The problem of updating XML views is more complex than in the relational scenario due to its nested hierarchical structure. While several research projects [1, 4] began to explore this XML view updating problem, they typically provide no guarantee for avoiding view side effects. An update translatability analysis can be employed to reason about the potential view side effects before performing the update. Intuitively, such analysis could examine the actual base data [2, 3]. However, as indicated by [2], this data-centric search for a translation tends to be very expensive, even for relational view updates. Instead, in our HUX project, we have designed a comprehensive solution of exploring schema-knowledge to optimize this analysis. Fig. 1(a) shows a running example of a relational database for a course registration system. A virtual XML view in Fig. 1(c) is defined by the view query in Fig. 1(b). The following examples illustrate cases of classifying updates as translatable or not translatable. Here we only use a delete primitive with the format (delete nodeID), where nodeID is the abbreviated identifier of the element to be deleted. For example, CI1.PS1 represents the first Professor-Student element of the first ClassInfo element.