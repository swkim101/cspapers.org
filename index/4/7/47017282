Biological design principles can potentially change the way we study engineer, maintain, and develop large dynamic software systems. For example, computer programmers like to think of software as the product of intelligent design, carefully crafted to meet well-specified goals. In reality, large software systems evolve inadvertently through the actions of many individual programmers, often leading to unanticipated consequences. Because software is subject to constraints similar to those faced by evolving biological systems, we have much to gain by viewing software through the lens of biology. The talk will highlight how abstractions of biological processes can lead to new computational algorithms and engineering principles. Specifically, it will show how the biological concepts of Darwinian evolution and immunology can be applied to problems such as repairing software bugs and cybersecurity.