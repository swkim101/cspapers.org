In database systems which allow concurrent processing, it is necessary to control the interaction among the concurrent transactions in order to prevent them from destroying the consistency of the database. The most common mechanism proposed to achieve this involves the use of locking and unlocking instrucions to provide controlled access to units of shared data. These instructions are embedded in the transactions according to rules which are called locking protocols. A correct locking protocol assures that the consistency of the database is preserved and that no deadlocks occur to prevent termination of the transactions. In this paper, a theory is developed of how a priori syntactic information about the behavior of the transactions in a system can be used to construct correct protocols. The relationship between the problems of assuring correctness and deadlock-freedom is explored in a unified model which applies to systems which allow only exclusive locks as well as to systems which allow both exclusive and shared access nodes.