A database subsystem (GDS) is proposed. The main objective is to provide a basis for constructing efficient database management systems. A functional interface (GDI), defined for the subsystem, primarily manipulates a single record. Various access functions are provided in order to manipulate a wide variety of logical data structures. Mapping from a logical data structure to a physical data structure is completely maintained in the GDS. Data definition and control functions are also included in the GDI. The subsystem is implemented on a special purpose processor (GDP) which independently operates from a host processor, responsible for the rest of the database management functions. The GDP is composed of special hardware and firmware function modules, local memories and a shared memory which is used for communicating with the host processor. Parallel processing at the host-GDP level and intra-GDP level assures high performance. Furthermore, the interprocessor communication mechanism using the shared memory significantly reduces overhead time by avoiding useless data transfer operations. The subsystem can be applied to various database management system, such as a CODASYL type, a relational type, end user facilities etc.