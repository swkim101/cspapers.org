The paper describes an interactive programming system which provides an integrated collection of tools for dealing with the whole process of program development. The pivot tool, the symbolic interpreter, may cover a broad range of applications, from testing to correctness Proving. The aspects in which the symbolic interpreter differs from a conventional interpreter, i.e. the possibility of handling nondeterministic branching at choice points and the presence of a system for manipulating symbolic expressions, are described. Furthermore, the main features of a programming language, around which the programming system is built, are presented.