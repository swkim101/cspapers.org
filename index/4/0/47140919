Graph <i>H</i> is a root of graph <i>G</i> if there exists a natural number <i>k</i> such that <i>xy</i> ∈ <i>E</i>(<i>G</i>) ↔ <i>d<inf>H</inf></i>(<i>x, y</i>) ≤ <i>k</i> where <i>d<inf>H</inf></i>(<i>x, y</i>) is the length of a shortest path in <i>H</i> from <i>x</i> to <i>y.</i> In such a case, <i>H</i> is a <i>k</i>-th root of <i>G</i> and we write <i>G = H<sup>k</sup></i> and call <i>G</i> the <i>k</i>-th power of <i>H.</i> Motwani and Sudan proved that it is NP-complete to recognize squares of graphs and believed it is also NP-complete to recognize squares of bipartite graphs. In this paper, we show, rather surprisingly, that squares of bipartite graphs can be recognized in polynomial time. Also, we show that counting the number of different bipartite square roots of a graph can be done in polynomial time although this number could be exponential in the size of the input graph. Furthermore, we can generate all bipartite roots of a graph <i>G</i> in time O(max{Δ(<i>G</i>) · <i>M, r</i>(<i>G</i>)}) where Δ(<i>G</i>) is the maximum degree of <i>G, M</i> is the time complexity to do matrix multiplication, and <i>r</i>(<i>G</i>) is the number of different bipartite square roots of <i>G.</i> By using the tools developed, we are able to give a new and simpler linear time algorithm to recognize squares of trees and a new algorithmic proof that tree square roots, when they exist, are unique up to isomorphism. Finally, we prove the NP-completeness of recognition of cubes of bipartite graphs.