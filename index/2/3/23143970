Is it possible to excite students about learning the mathematical principles that underlie high-quality software? Can they use a development environment for "hands-on" experimentation with reasoning? Is this possible without displacing existing content? The answer is a resounding yes "from the experiences of professors at several institutions" but it takes the right set of pedagogical principles, reasoning tools, and hands-on exercises. This laboratory will help educators transfer the excitement of learning how to apply mathematical reasoning in building high quality software, by adopting one reasoning concept at a time.
 The workshop will introduce a series of independent content modules that can be introduced in any course where mathematical reasoning might be taught -- from introductory programming and software engineering to data structures and algorithms. They are designed to supplement, rather than replace, existing course materials.
 Fees for this workshop will be covered for a limited number of attendees through an NSF award; limited travel support is also available. All participants are required to bring a laptop to participate in the computer-assisted exercises.