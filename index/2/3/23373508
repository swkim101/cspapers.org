An algorithmic language interpreter is presented which provides users of various technical backgrounds a convenient way to describe algorithms and simultaneously focus on problem-solving concepts: problem analysis, algorithm development, and the computer implementation of the algorithm. The interpreter permits the use of decision tables as a means of expressing complex logic.
 In view of the significance of structured programming in today's environment (and that of the future), the language processor allows three logical constructs: sequential, IF... THEN...ELSE..., and the DO WHILE construct. The use of GO TOs is only allowed to transfer control from one table to another. Hence, several tables/subtables (each may contain 1 decision table) may be required for the description of an algorithm. Examples are presented to illustrate how the language interpreter enhances programming organization and thereby facilitates structured programming.