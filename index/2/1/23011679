INTRODUCTION Many programs in computer science began by first developing graduate courses and degrees . Undergraduate level courses and degrees were adde d to complete the program . Ten years ago there wer e few undergraduate degree programs in compute r science . Therefore, entering graduate student s were assumed to have a minimal background in actual computer science topics . Graduate courses assumed very little in the way of prerequisites , but coursework moved on rapidly . As the preparation of entering graduate students gradually in creased, so did the level of these existing graduate courses . We now have a number of undergraduate programs in computer science . However, we are still faced with the problem of how to integrat e a graduate student with limited previous forma l course work in computer science . At Old Dominion University, we are developing graduate level course work in the sciences , business, and engineering . Students from other departments are interested in taking graduat e level course work in computer science, but often have a very limited background . We are also developing graduate degree programs in Applie d Mathematics and in Computer Science . Students i n these programs will be required to take graduat e level courses in computer science . Student s studying for a Masters Degree in Mathematics Education are also required to take a graduate leve l course in computer science . At Old Dominion University, we have a relatively new undergraduate degree program in computer science (the first students graduated in May 1976) . We have done considerable developmen t work on a curriculum which places more emphasi s on data structures and programming languages than usual . [1] In our undergraduate curriculum w e require courses in machine organization, system s programming, compiler design, the theory of computability, and at least five advanced elective s in the department . The graduate programs we ar e designing in Applied Mathematics and in Compute r Science assume preparation equivalent to ou r undergraduate curricula in those areas . So tha t our other graduate courses could proceed from a common prerequisite level in computer science, w e decided to design an introductory course to accomodate different backgrounds and put the students o n a common advanced level . This same approach ha s been used at other universities . [2,3,4 ] The course we designed is an attempt to mee t both of these needs -one, an introductory graduate level computer science course for student s from other departments, and two, a preparatory course for other graduate courses in compute r science . What originally started in our plannin g as a single course has now become two courses, o f three semester hours each, offered in sequence . The first course is intended for students with a minimal background in computer science . They should know something about programming (FORTRAN , BASIC, or COBOL probably) and have a mathematic s background at the calculus level . This course i s intended for graduate students in any scienc e related area . It gives broad coverage to many areas in computer science . It also tries to develop some programming skill in three language s (FORTRAN, BASIC, and PASCAL) and their related computer systems . It also provides an introduction to discrete mathematics, numerical methods, and data structures . The second course is aimed primarily at students who wish to continue into mor e advanced computer science courses . It assumes a background equivalent to the first course of thi s sequence . This course or its equivalent from other courses or experiences is the prerequisit e to all other graduate level computer scienc e courses . In this second course we cover mor e material from data structures and programming languages . Then we go into machine organization , systems programming, and compiler theory . In these courses we cannot cover every topi c at length or require the kind of programmin g experiences we would in an undergraduate leve l course on the same topic . But that is not the purpose of these courses . We expect that the programming skill level necessary for an individua l student will be developed in other related graduate courses or work experiences . These courses try to give the student the background and concept s necessary to proceed to other graduate level work . The following general description of the courses i s taken primarily from material used in describin g the courses to prospective students .