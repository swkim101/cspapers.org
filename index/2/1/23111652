Types for the Working ProgrammerAndrew Black, DEC
There has been recent progress in understanding types forobject-oriented languages, but most of it has had little or noimpact on real programmers. This tutorial aims to extract from theconfusion those topics that are important to programmers who mustuse or choose an object-oriented language. The tutorial explainsthe role of types in object-oriented languages, what types can dofor programmers, and how the trend towards distributed andheterogeneous systems and object-oriented databases influences whatit means for a program to be type-correct.
The tutorial describes the difference between objects andvalues, what types are and why they are good for you, whatrefinement and subtyping are, what problems they solve, and whatproblems they do not; why contravariance isnt an unnatural act; whyinheritance is a relationship between programs, not betweenclasses.
By the end of the tutorial, you will understand how abstractconcepts like subtyping can help you solve practical problems suchas deciding when one piece of code can be substituted foranother.