Speaking is the result of two processes: first, deciding what to say, and than, datarmining how that can ba said using a natural language, in this case English. The second is a linguistic process, which begins with intentional messages formed by the first process, adds audience and discourse information, and produces fluent, situationally appropriate English utterances as output. This note reports on a theory and program developed for that process, in particular, an English generation grammar, procedural lexicon, and translation process have been designed and implemented as the program MUMBLE, which has been tested by replicating several existing programs improving their capabilities. This work was initially presented In [1]. It has since been completed and is described in detail in [2] CAPABILITIES: Using MUMBLE has two principle benefits. 1) Programs which incorporate it are freed from concern with the details of English grammar, thus simplifying their processing by allowing them to use whatever internal representation is most comfortable while they determine the content of what they should say-their message. 2) It becomes possible to use the constructions of fluent English in a general, theoretically motivated fashion. For example, MUMBLE can select from the full range of nominal descriptions: from pronouns, through noun phrases with relative clauses, to nominalized clauses, depending on the program's intent and the current discourse context. MUMBLE can employ sophisticated methods in constructing major clause structures: topicalization, extraposition, tag-questions, appositives, etc.. Such methods are viewed as strategies for conveying particular intentions, such as degree of conviction or special emphasis, that go beyond the "standard" content of the clause. Redundant phrases are dealt with automatically, by ellipsis, or by the dropping of obvious function words. Strictly grammatical details are implemented automatically, such as the morphological distinctions between instances of the same relation in functionally different roles (e.g. modifier, principal relation, object of a predicate). CHARACTERISTICS OF THE DESIGN: Linguistically, language generation is seen as a process of translation from a message given in one representation-that of the speaking program-to the equivalent message represented in English. Messages are taken as consisting of a set of intentional features and annotated pointers to the program entities the message refers to: objects, predicates, machine states, etc. The features encode the effects that the message is intended to have on its audience. Several effects may be desired in the same message. For example, to "ask a question", "express an assumption", and "describe e â€¦