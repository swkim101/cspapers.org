Computer programming assignments for discrete mathematics courses are usually used as a means of illustrating the practical application of theoretical concepts. Two programming assignments that use graphics are presented as a means of reinforming concepts in the areas of recursive algorithms and formal languages. 1. Introduction Discrete mathematics courses cover abroad range of topics that computer science students will encounter in many different aspectsof their academic and professioml careers. Despite the importance of these concepts, it is often difficult to give students enrolled in a discrete mathematics course a feeling for the variety of applications in which the concepts are used. Discrete mathematics is not usually considered a " programming " course, but programming assignments are often used to illustrate a few of the many applications of the concepts students are learning. This means that the assignments should be of high interest to the students, provide a clear illustration of concepts being taught, and require a reasonable amount of time to implement. This paper will discuss two graphics assignments that were used in a discrete mathematics course to teach concepts in reeursive algorithms and formal language theory. In both programming assignments, students were asked to generatecomputer landscapesusing fractals and graftals (Becker & Dorfler, 1989), In the first assignment, students were given the basic recursive algorithms for some common fractal curves, and then asked to use several mechanisms to modify the algorithms so that the resulting drawings were " natural " plant-like structures. In the seeond assignment, students were asked to generate drawings of plants using a parallel graph grammar (Smith 1984). In both casesthe drawing Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for d!rect commercial advantage, tha ACM copyright notice rmd the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. was accomplished using simple turtle graphics routines that were supplied to the students. 2. Fractal Plants Recursive algorithms are a difficult topic to teach because many of the traditional recursive algorithm assignments are either more efficiently implemented using non-recursive algorithms (calculation of nl factorial, or n choose r, for example) or are so abstract that the students see little use for them (Ackermann's function) or both (Fibonacci numbers). â€¦