systems-engineering and software-engineering techniques for improving dependability will be reviewed. Topics to be covered include hazard analysis, fault-tree analysis, formal specification, design for safety, and verification. Abstract: Simple Object Access Protocol (SOAP) is an exciting new technology for developing Web Services. A Web Service is a set of related application functions that can be programmatically invoked over the Internet. In contrast to traditional Web applications, Web Services are application building blocks that use Extensible Markup Language (XML) for information interchange. In this session you will learn about SOAP, Web Services, and related standards including Web Services Description Language (WSDL) and Universal Description, Discovery and Integration (UDDI). These technologies will be demonstrated using the IBM XML and Web Services Development Environment which is available for free download from the alphaWorks Web site at Abstract: In our rapidly changing IT environment, it is essential that the security posture of all systems and networks are understood. This is extremely difficult when most of the systems that make up our infrastructures are legacy systems. Current state of the art techniques for auditing systems assume that expertise exists in all of the systems and platforms that make up the environment, when in fact many systems that are essential in the infrastructure predate any member of the auditing team. In this case, we show how use cases and intruder scenarios can be used to determine which systems are important from a security perspective and which services and properties of these systems must be verified. These techniques are part of the Survivable Network Analysis method, developed at the Software Engineering Institute to provide a measure of survivability for complex system architectures.