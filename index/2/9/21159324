We provide an extension to the existing data-driven tutoring system, ITAP (Rivers and Koedinger 2014) to provide personalized help to students. The existing ITAP framework relies on abstract syntax trees and works only on compilable code, we extend the framework to work even with uncompilable code. We use an iterative correction technique that locally corrects code by manipulating tokens in the vicinity of an erroneous token, using a specially designed parser. It utilizes the power of a LALR (1) parser to identify the erroneous token, and suggests the possible expected token at that position. We utilize this information to iteratively modify the code to reach to a compilable state. This compilable state is then fed as an input to the ITAP, and the received hints are then coupled suitably.