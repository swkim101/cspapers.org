This paper takes a look behind the scenes at two conceptually-based parsers in order to shed light on the true differences between them. The first one is Riesbeck's parser for Schank's conceptual dependency; the second is the 'LNR' parser for Norman and Rume hart's active semantic networks. Both are described in terms of Kaplan's General Syntactic Processor formalism. This analysis shows that 'conceptual dependency' and 'active semantic networks' have little or nothing to do with the actual functioning of the parsers. Computationally, the two parsers differ only in terms of (a) effective use of interrupts and (b) reliance on selectional restrictions to guide parsing. A synthesis of the best features of both is suggested.