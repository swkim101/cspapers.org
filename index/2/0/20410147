The need for power- and energy-efﬁcient computing has resulted in aggressive cooperative hardware-software energy management mechanisms on modern commodity devices. Most systems today, for example, allow software to control the frequency and voltage of the underlying hardware at a very ﬁne granularity to extend battery life. Despite their beneﬁts, these software-exposed energy management mechanisms pose grave security implications that have not been studied before. In this work, we present the CLK SCREW attack, a new class of fault attacks that exploit the security-obliviousness of energy management mechanisms to break security. A novel beneﬁt for the attackers is that these fault attacks become more accessible since they can now be conducted without the need for physical access to the devices or fault injection equipment. We demonstrate CLK SCREW on commodity ARM/Android devices. We show that a malicious kernel driver (1) can extract secret cryptographic keys from Trustzone, and (2) can escalate its privileges by loading self-signed code into Trustzone. As the ﬁrst work to show the security ramiﬁcations of energy management mechanisms, we urge the community to re-examine these security-oblivious designs.