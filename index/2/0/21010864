Researchers, practitioners, and policymakers are (in most states) rallying around the Next Generation Science Standards. First released in 2012, the NGSS address the "mile wide, inch deep" science teaching so prevalent in K-12 and instead emphasize disciplinary core ideas, cross-cutting concepts, and practices in science and engineering. The NGSS make a nuanced distinction between science (inquiry) and engineering (design) and include performance standards for engineering design that "literate citizens" are expected to know. Early versions of the NGSS caused kerfluffles in the CS community - "the attention paid to the discipline of computer science does not match its importance in terms of workforce demand." Ignoring calls from industry and academia to promote computer science, the authors relegated it, like statistics, to a supporting role. Putting CS in a supporting role means that it becomes a second-class object of study - a tool for investigating other disciplines - instead of a first-class object that is investigated in terms of disciplinary core ideas. Part of the problem is the lack of widely accepted core ideas that are easily explained. In the course of our work on building assessments for the Exploring Computer Science course (including drawing from the AP CS Principles framework) we have identified a manageable set of core ideas and mapped them to the NGSS engineering design standards. In this talk, I will point to materials we have developed that the community can use to show how computer science can replace engineering in the NGSS to teach practices and meet standards.