Many university software engineering/capstone courses attempt to teach students the importance of communication by having them work collaboratively on a large scale project. This can be a sink-or-swim approach. There is a real risk of complete project failure, and while students may learn that coordination is important, it isn't clear they learn how to do it effectively. The CoordinationTracker project uses social network analysis both to study coordination in student project teams, and to develop an automated tool to support students learning this skill. In this talk, I will briefly present some results using social network analysis and socio-technical congruence measures to study communication in a software engineering course, and then will describe the design of the proposed CoordinationTracker tool, which will use socio-technical congruence measures to give feedback to students. For example, as a student works on a file, an automated reminder capability will suggest who the student should be communicating with in order to prevent unwanted effects on components dependent on the file. The system also will have a reporting component which will allow each student, as well as the instructor, to view his or her coordination performance via graphs. Once CoordinationTracker has been implemented, it will be tested on several iterations of the software engineering course in order to determine whether students improve their coordination while using the tool. I am interested in audience feedback on the design of this tool as well as possible involvment with the project.