There is a clear shift of emphasis in the way in which computer systems in general, and database management systems in particular, are perceived in the marketplace today. Questions of usability are beginning to outweigh the more traditional concerns with raw performance. The reason for this state of affairs is obvious; People costs are rising and machine costs are falling. This presentation consists of a critical examination of database management systems, or more specifically the externals of such systems, from a usability standpoint.The talk is divided into three parts. The first part, "What Does Usability Mean?", is an attempt to capture the notion of usability, or at least to characterize certain aspects of the notion in a variety of helpful ways. It is argued that usability is fundamentally concerned with raising the level of abstraction of the user interface in an appropriate and coherent manner --- with the emphasis on "appropriate" and "coherent".The second part of the talk, "Where We Are Today", contrasts the usability of modern (relational) systems with the comparative lack of usability found in older (nonrelational) systems. The usability advantages of the relational model and of relational systems are summarized and briefly analyzed.The third (and longest) part is called "How We Might Improve". Improvements are needed in at least four somewhat overlapping areas:1. Quality of current interfacesEven though they represent a major advance over earlier systems, most relational systems today still suffer from a number of usability problems, specifically with regard to missing function and what might be termed "ad hoc"-ness. Both of these aspects are illustrated with examples. Some principles of interface design (for example, uniformity and orthogonality) are briefly discussed.2. More semantics over current dataRaising the intelligence of the system (via semantic modeling) can also help to make the system more usable, especially with regard to database design and definition.3. New kinds of dataIncorporating new kinds of data (e.g., text, arrays, noncoded information) can also help to raise the level of the user interface, especially if the database management function is properly integrated with appropriate statistics, word-processing, graphics, and similar packages.4. New kinds of interfaceConventional, written-word-oriented query languages are very clumsy in many applications. The Field is wide open for improvements: text-editor-like interfaces, voice input and output, 3D terminals, pictorial interfaces, etc., etc.