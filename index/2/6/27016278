The ASE conference series is rooted in the 1981 Knowledge-Based Software Assistant (KBSA) document [1] and the ensuing US Air Force Rome Labs research program. KBSA addressed automated tool support for the entire software lifecycle, including project management, requirements, specifications, code generation, and evolution. A core goal of KBSA and ASE is the automated generation of code from requirement-level specifications, which promises benefits in three directions: (1) High Assurance - generation of correct code, as well as certification information as a by-product, (2) Productivity through automation, and (3) High Performance through machine application of best-practice design knowledge. Benefits should also include lowering of the cost of lifecycle ownership, due to automated treatment of evolving requirements. This talk lays out a more modern unifying framework for automated software development that is consistent with these goals [2]. Recent progress in automated support for algorithm design and system development is highlighted