A b s t r a c t We consider the movement minimization problem in a con-veyor flow shop processing controlled by one worker for all machines. A machine can only execute tasks if the worker is present. The worker has to cover a certain distance to move from one machine to the other. The objective is to minimize the total distance the worker has to cover for the processing of all jobs. Such path minimization problems especially appear in conveyor controlled manufacturing systems. They usually have to be executed only at some of the machines. All machines are controlled by one worker operating in front of them. A machine can only execute a job if the worker is present. Thus the worker has to change his working position from time to time so that the processing continues. The objective is to minimize the movement of the worker along the flow shop. We introduce lower bounds and analyze several offline and online algorithms that control the movement of the worker. The movement minimization problem in a conveyor flow shop processing appears, for example, in conveyor controlled manufacturing systems, and recently more frequently also in pick-to-belt orderpicking systems [2, 5], where each task merely consists of picking up certain material from a shelf rack and putting it into a box or a bin. Changing a working position takes a considerable amount of time compared to the execution time of a task. For example, in today's order picking systems it is quite usual that a worker spends 50% of his time by moving between the machines. This deplorable state can usually not be redressed by additional workers, because then idle times have to be taken into account. Movement minimization in conveyor flow shop processing is quite different from flow shop scheduling [1]. For movement minimization, the order in which the jobs enter the flow shop is given by the instance, whereas for scheduling, the main problem is to find the best job order. In a conveyor flow shop processing, a job remains at machine Pj after its processing, if the next machine Pj+I is occupied by the previous job. This is quite unusual for scheduling. For movement minimization, the objective is totally independent of the exact processing times of the jobs at the machines. We only need to distinguish between zero and non-zero processing times. All known results about scheduling problems, also â€¦