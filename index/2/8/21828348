Search algorithms often suffer from exploring areas which eventually are not part of the shortest path from the start to a goal. Usually it is the purpose of the heuristic function to guide the search algorithm such that it will ignore as much as possible of these areas. We consider other, non-heuristic methods that can be used to prune the search space to make search even faster. We present two algorithms: one for search in graphs that fit in memory, and in which we will need to perform many searches, and another, which improves the search time of planning problems that contain symmetries.