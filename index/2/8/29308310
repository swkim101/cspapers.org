This paper discusses the computation of finite functions with the aim of investigating ways of judging the relative worth of the different methods for computing a given finite function. Any finite function may, of course, be computed in a number of ways, including a “brute-force” method of table look-up and methods which exploit some pattern which may exist in the function. How “good” we judge each of the several methods to be will depend on which criteria we wish to apply, and here we will be considering two: size of program and cost of computation, first of all separately, and then together. The latter case gives rise to the notion of a “reasonable” way of computing a finite function, and certain considerations with respect to this notion suggest a modified notion of “relatively reasonable”. Some properties of these concepts, in particular some of the differences between them, are developed. The spirit of the paper is machine-independent except for the last paragraph which suggests a need for some idea of “program structure” to be introduced into the formulation.