Efficient Implementation of Object-Oriented ProgrammingLanguagesCraig Chambers, University of Washington, David Ungar, Sun Labs
This tutorial is for those who like to know how object-orientedlanguages work under the hood, why some things are expensive whileother things are cheap, and why language definitions includecertain restrictions. This tutorial provides that, and more. Itdescribes features of object-oriented languages that are difficultto implement efficiently, and how this has affected languagedesigns. It describes state-of-the-practice and state-of-the-arttechniques for implementing languages like C++ and Smalltalk.
Language features include dynamic binding and genericoperations, inheritance, user-defined control structures, statictype systems, multiple inheritance and virtual base classes, andmixing object-oriented and non-object-oriented programming.
The tutorial also addresses questions like: What are thetrade-offs in using the various implementation techniques? Whatproblems remain that block more efficient object-oriented languageimplementations? What might be promising areas for futureresearch?