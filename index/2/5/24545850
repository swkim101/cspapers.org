This poster describes an ongoing five-year assessment of a new introductory programming course for architecture students at the University of North Carolina at Charlotte. The goal of this course is to teach the fundamentals of computing with an emphasis on their relation to design and aesthetics. Many of the students struggle with the material, as they typically come into the course with no prior programming experience. To improve class performance, the author turned to instructional methods developed for Media Computation, which have been successfully used to teach introductory programming to non-major students for more than a decade. Our data suggest that the same methods -- media-based contextual content, pair programming, and peer instruction -- can have positive effects for students taking an introductory programming course taught by and for disciplines other than computer science. Compared to the first version of the course, which used traditional labs and lectures, the second iteration of the course, updated with the three instructional methods from Media Computation, resulted in higher student retention and an increase in student interest in computing topics. These improvements have remained consistent over the past three years. The data implies that research-based practices from computer science education can be used to improve computing education in other domains.