The model theory of simply typed and polymorphic (second-order) lambda calculus changes when types are allowed to be empty. For example, the “polymorphic Boolean” type really has <italic>exactly</italic> two elements in a polymorphic model only if the “absurd” type ∀<italic>t.t</italic> is empty. The standard β-ε axioms and equational inference rules which are complete when all types are nonempty are <italic>not complete</italic> for models with empty types. Without a little care about variable elimination, the standard rules are not even <italic>sound</italic> for empty types. We extend the standard system to obtain a complete proof system for models with empty types. The completeness proof is complicated by the fact that equational “term models” are not so easily obtained: in contrast to the nonempty case, not every theory with empty types is the theory of a single model.