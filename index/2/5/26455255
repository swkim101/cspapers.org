Extended transaction models have drawn much interest recently in academia and industry [2]. Such models seek to address the limitations of traditional ACID transactions for supporting multisystem applications that operate in heterogeneous environments. Such applications are increasingly proving to be of strategic importance to a number of businesses and governmental agencies. Different transaction models, however, tend to be closed in that they cannot be easily combined with other such models, thus limiting their applicability to situations which exactly match one of them. We do not propose yet another transaction model. Instead, we have developed a general specification facility that enables the formalization of any transaction model that can be stated in terms of dependencies amongst significant events in different subtransactions. Such significant events include start, commit, and abort. We make no assumptions that these are the only kinds of events. Our approach is viable because most extended transaction models can be naturally formalized in terms of dependencies among different subtransactions.