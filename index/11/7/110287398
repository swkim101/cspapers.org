The goal of software engineering is to achieve high-quality software in a cost-effective, timely, and reproducible manner. Advances in technology are enabling reductions in costs and schedule, but their effect on software quality assurance remains often unclear. The widespread availability of interconnectivity has changed the nature of software systems and has deeply affected both complexity and quality requirements, raising new design and quality issues that call for new approaches to quality assurance. Many modern software systems consist of large sets of heterogeneously developed components. Object-oriented design, component-based software engineering, components off the shelf (COTS), design patterns, and open source software facilitate the development tasks, but assuring the quality in scenarios that entail (combinations of) these concepts is problematic. 
 
The Fourth InternationalWorkshop on Software Quality Assurance (SOQUA 2007), which was colocated with the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE 2007), discussed and evaluated latest challenges, breakthroughs and experiences in the field of software quality assurance, aiming to identify open issues and future trends in this important field. In particular, SOQUA 2007 put special focus on the role that self-adaptive and self-healing solutions can play in quality assurance. 
 
The program committee had the difficult task to select 17 papers out of 27 highquality submissions from all over the world. These papers covered many aspects of software quality assurance, including self-healing and self-adaptive solutions, testing, quality assurance processes, process modeling, failure analysis and anticipation, quality of requirements, and variability modeling. The collected papers represent a significant contribution to the state of the art in the field.