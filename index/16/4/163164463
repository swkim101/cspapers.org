Compilation has become a major challenge to the usability of coarse-grained reconfigurable architectures as increasing programmable resources must be orchestrated. Static compilation is insufficient for prohibitive time cost while dynamic compilation still performs poorly in both generality and efficiency. This paper proposes a general pattern-based dynamic compilation framework, which utilizes statically-generated patterns to straightforwardly determine runtime re-placement and routing so that runtime configuration creation algorithm has low complexity. Domain-specific communication characteristics are harnessed to help improve the efficiency of patterns. The experimental results show that compiled general applications can be transformed onto arbitrary resources at runtime, reserving $97 \%(39 \% \sim 163 \%)$ of the original performance/resource on average, $7 \%(0 \sim 17 \%)$ better than the state-of-the-art non-general methods.CCS CONCEPTS• Computer systems organization $\rightarrow$ Reconfigurable computing; • Hardware $\rightarrow$ Hardware description languages and compilation.