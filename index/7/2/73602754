— We discuss how symbolic execution can be used to not only ﬁnd low-level errors but also analyze the semantic correctness of protocol implementations. To avoid manually crafting test cases, we propose a strategy of meta-level search, which leverages constraints stemmed from the input formats to automatically generate concolic test cases. Additionally, to aid root-cause analysis, we develop constraint provenance tracking (CPT), a mechanism that associates atomic sub-formulas of path constraints with their corresponding source level origins. We demonstrate the power of symbolic analysis with a case study on PKCS#1 v1.5 signature veriﬁcation. Leveraging meta-level search and CPT, we analyzed 15 recent open-source implementations using symbolic execution and found semantic ﬂaws in 6 of them. Further analysis of these ﬂaws showed that 4 implementations are susceptible to new variants of the Bleichenbacher low-exponent RSA signature forgery. One implementation suffers from potential denial of service attacks with purposefully crafted signatures. All our ﬁndings have been responsibly shared with the affected vendors. Among the ﬂaws discovered, 6 new CVEs have been assigned to the immediately exploitable ones.