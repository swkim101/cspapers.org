One of a Software Engineer's most important skills is the ability to define the scope of the problem and ascertain the requirements from general and vague specifications. Teaching this skill is known to be difficult and is made more complex because students are conditioned to expect that this portion of programming projects is already complete. This paper reports on experience in teaching a second year computer science class which exposed the need for requirements engineering and gave students an opportunity to engage in the activity. We found that the student response was bimodal, and while some students met the challenge, more felt betrayed by the experience. We conclude that students gained the requisite knowledge using this approach but that a less traumatic approach may produce better results.