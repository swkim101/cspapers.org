Automated unit testing techniques can reduce manual effort to write unit test drivers/stubs and generate unit test inputs. However, automatically generated unit test drivers/stubs may raise many false alarms because they often over-approximate real context of a target function f and allow infeasible unit executions of f . To alleviate this limitation, we have developed a concolic unit testing technique CONBRIO. CONBRIO generates a symbolic unit test driver of f using closely relevant functions to f . Also, CONBRIO filters out a false alarm by checking feasibility of a corresponding symbolic execution path with regard to f ’s symbolic calling contexts obtained by combining symbolic execution paths of f ’s closely related predecessor functions. In the experiments targeting the crash bugs of the 15 real-world C programs, CONBRIO shows both high bug detection ability (i.e. 91.0% of the target bugs detected) and precision (i.e. a true to false alarm ratio is 1:4.5). Furthermore, CONBRIO detects 14 new crash bugs in the latest versions of the 9 target C programs studied in other papers on crash bug detection techniques.