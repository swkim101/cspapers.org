Let <i>G</i> = (<i>V, E</i>) be an undirected connected graph with edge weights <i>s</i>: <i>E → IR<sup>+</sup>.</i> An edge set <i>A ⊆ E</i> is called a <i>k-cut</i> if <i>G</i>′ = (<i>V,E\A</i>) has <i>k</i> connected components. The <i>k-cut problem</i> is to compute a minimum weight <i>k</i>-cut in <i>G.</i>The <i>k</i>-cut problem is known to be <i>NP</i>-hard. Saran and Vazirani [3] gave a combinatorial (2-2/<i>k</i>)-approximation which successively finds minimum cuts until the graph is partitioned into <i>k</i> components. Recently, Naor and Rabani [2] gave an integer program formulation of the problem, and showed that its integrality gap is 2.<b>1.1 Our Contributions.</b> We provide a new combinatorial polynomial-time approximation algorithm to the <i>k</i>-cut problem, with worst-case performance ratio 2. We also provide a new combinatorial lower bound, which is provably at least as good as the Naor-Rabani LP lower bound.<b>1.2 Network Strength and Attack.</b> For an edge set <i>A,</i> let <i>k</i> (<i>A</i>) denote the number of connected components in <i>G</i>′ = (<i>V,E\A</i>). Define <i>s</i>(<i>A</i>) = ∑<sub><i>eεA</i></sub> <i>s</i> (<i>e</i>). The <i>strength</i> of the edge set <i>A</i> is defined to be σ(<i>A</i>) := <i>s</i>(<i>A</i>)/(<i>k</i>(<i>A</i>) - 1), and the <i>strength of the graph G</i> is σ(<i>G</i>) :=min<sub><i>A⊆E</i>σ</sub>(<i>A</i>). The strength of a singleton node is defined to be infinity.For an edge set <i>A</i> and a real number <i>b</i> > 0, define <i>g<inf>A</inf></i>(<i>b</i>) := <i>s</i>(<i>A</i>) - <i>b</i>(<i>k</i>(<i>A</i>) - 1). Let <i>g</i>(<i>b</i>) := min<inf><i>A⊆E</i></inf><i>g<inf>A</inf></i>(<i>b</i>) be the <i>attack value</i> of the network. We use <i>e</i>(<i>b</i>) to denote the edge set which achieves this minimum. Define <i>k</i>(<i>b</i>) := <i>k</i>(<i>e</i>(<i>b</i>)). Note that <i>g</i>(<i>b</i>) is always non-positive, since letting <i>A</i> = Ø achieves <i>g</i>(<i>b</i>) = O.Cunningham [1] provided polynomial-time algorithms to compute both the strength and the attack value of a network. We use Cunningham's algorithms as a subroutine in our algorithm.