A potential customer examining computer graphics systems including a random positioning and refreshed CRT needs a lot of time and effort to form an opinion of the various marketed systems. To him not only systems appear very different, but also manuals are often cryptic and equivocal. In addition, graphic packages supplied by manufactures naturally take advantage of specific capabilities of the hardware and try to bypass their deficiencies. As a consequence, it is nearly impossible to run on a display system application programs which are written for another system.
 Questions that drive from this situation are: what, of what nature, and where are these differences among display systems.
 A prerequisite to investigating the differences among display systems is a uniform description. A notational system covering both the physical structure and the program level was given by BELL and NEWELL in form of Processor-Memory-Switch (PMS) - and Instruction-Set-Processor (ISP) - notation. These notations have been applied to a number of historic (ESL Console, DEC 338, IBM 2250, Evans and Sutherland LDS 1) and present (Adage AGT 400, IDIIOM/II, IMLAC PDS-4, LUNDY System 32, The Picture System, Vector General) display processors.
 The historic evolution of display systems is characterized by MYER and SUTHERLAND using the term “wheel of reincarnation”. A full rotation of this wheel is passed when another level of computer peripheral is added to the system, further removing the display CRT itself from the central processor. This evolution will be shown at presentation time with idealized systems at each stage described in PMS-notation.
 In the fifties display devices were tied directly to the central registers of the host computer. In the early sixties a data channel was included as a link between the display device and the host or central computer. This channel soon was developed into a display processor which in turn became a full-fledged mini-computer with some graphic features. In the late sixties and early seventies this potentially never-ending cyclical process of nesting levels of graphics computer power stabilized somewhere around two full rotations of the “wheel” by the design of “standalone” and “intelligent” satellites. On the first plance the ISP-description of a display processor does not disclose a taxonomical scheme. Because of the great number of graphical functions implemented in the various - and sometimes sophisticated - processors, the ISP - description certainly becomes rather bulky. But it is exactly this volume which necessitates that an unequivocal language like ISP be applied to the display hardware.
 A look at the functional level of a display processor shows that certain characteristics shared by a group of instructions ciist so that a classification throughout all descriptions is possible. There is one set of instructions controlling the display processor, another set handling references, and a third set driving graphic generators:
 1) instruction group computing (igc)
 2) instruction group addressing (iga)
 3) instruction group graphic (igg)
 An instruction group covers a number of functions each including a number of instructions. This hierarchy forms an instruction tree which clarity is further enhanced by unifying the diverse instruction identifications provided by manufactures. The attached figure shows an instruction tree derived from the ten examined display systems. The major differences between the examined display systems concern discipline, which is the specification of a function, and significant achievements in computational power, especially with respect to transformation and clipping hardware.
 On the functional level the systems appear more alike than on the discipline level. Essentially, no basic changes occured in terms of geometric primitives beside circle and reflection generation available in a few commercial systems. The resemblance on the functional level might be the key to achieve standards for display systems.