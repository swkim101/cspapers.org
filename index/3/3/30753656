This paper develops necessary conditions for languages to be stack generable, stack decidable, and non-erasing stack generable. The result for stack generable languages shows that the languages {an3¦n≥ 0} and {an bn2 cn ¦n≥0) are not stack generable. It also shows that the language {am bm2 cn ¦m, n&ge1} &ugr;{am bn2 cn ¦m, n≥1} is inherently ambiguous as a stack language. In addition, it shows that the infiniteness problem for stack generable languages is solvable. The necessary conditions for stack decidable and non-erasing stack generable languages show that {an bn2 ¦n≥1} &ugr;{an b2n2 c¦n≥1} is not stack decidable and that {an bn2 ¦n≥0}is not non-erasing stack generable. These examples show that these two families of languages are not closed under reversal. Two unsolvability results are also obtained. The question of whether a stack generable language is inherently ambiguous as a stack language is undecidable. The question of whether the reversal of a non-erasing stack generable language is also non-erasing stack generable is undecidable.