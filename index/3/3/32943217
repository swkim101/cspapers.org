One of Pascal’s virtues is that it permits the creation of modular programs by using logically independent procedures. However this advantage of Pascal is utilized only when students learn to handle procedures and to manage parameter passing well enough to harness Pascal’s power. This study examined student knowledge relating to parameter passing in Pascal. During interviews, students were asked to predict which programs from a collection of similar programs would work according to specification and which would not work due to variable access errors or parameter passing errors. This paper will discuss these interviews. In particular it will examine the most pervasive false assumptions or “student-constructed rules” exposed by the interviews. It will also discuss hints provided by the interviews regarding instructional methods to emphasize and instructional methods to avoid. BACKGROUND Personal Ex~erience In my experience teaching Pascal programming at two differe;t c~lleges, many stidents, w-he{ programming in Pascal, fmd it difficult to master parameter passing. I have found that even near the end of an introductory, college-level Pascal programming course, student programs include extraneous declarations and inappropriate uses of parameters and global variables. These observations are confirmed by Carrasquel, Roberts, & Pane (1989). This study investigated the difficulties that novice Pascal programmers have with procedures and parameter passing. Constructivism This study assumes a constructivist theoretical framework. In particular, it assumes that people construct their own knowledge by a “long process of building intellectual structures that change and interact Permission to copy without fee all or part of this material is granted provided that the copiee are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 01991 ACM 0-89791 -377 -919110002-0283 . ..$1 .50 and combine” (Papert, 1988, p. 3). Because teachers and students each construct their own meanings in the course of instruction, it is not surprising that students frequently possess misconceptions in spite of instruction to the contrary. Student Difficulties There has been research on the difficulties of student programmers, especially their difficulties with fundamental language concepts such as input and output, assignment of values to variables, and looping (Du Boulay, 1986; Sleeman, Putnam, Baxter, & Kuspa, 1986; Soloway, Ehrlich, Bonar, & Greenspan,, 1982; Soloway, Bonar, & Ehrlich, 1983). However, it is still true that “The development of procedural thinking has been little studied to date” (Pea & Kurland, 1987, p. 170). Little educational research has addressed student understanding of programs involving procedures and parameter passing. PURPOSE AND RATIONALE This study examined the following question: How knowledgeable are college students enrolled in an introductory Pascal programming course about the Pascal language rules involving parameter passing and variable access? The emphasis was on determining the extent of students’ understanding of the language rules by examining their ability to apply them. Like many recent research studies in science education (Eylon & Linn, 1988), this study focused on “detailed analyses of individual subjects rather than on aggregate behavior” (p. 285) and examined reasoning “in greater detail than has been attempted in the past” (p. 285).