A method of detecting deadlocks among processes which can be suspended due to contention for any class of resource is described. Three classes of resources are described, uniquely-named resources such as Locks, M of N resources such as Teleprocessing Sessions or Magnetic Tape Drives, and Poolresources such as variable length storage pools. By using boolean expressions to describe how a process, suspended due to resource conflict, can have its request satisfied by resources released by other processes, the deadlock detection algorithm is independent of resource tables. The algorithm produces a set of potential 'victims' which can break all the detected deadlocks. A deadlock resolution algorithm based choosing the "least costly" process in deadlock is proposed.