A Problem Solving Agent (PSA) is either an hardware or software system or a human, with an ability to execute a finite set of tasks in an application domain. An activity consists of one or more tasks which can be executed by one or more PSAS. Activity management consists of decomposition of activities into tasks, coordination and data sharing among multiple PSAS executing the activity, and monitoring, scheduling and controlling the execution of multiple tasks of an activity. The CapBased-AMS [KYH95] (based on cooperative problem solving paradigm [CKNT93]) is composed of an activity specification and decomposition module and an activity execution and monitoring module. Capability-based activity specification and decomposition [Hun95]: Each PSA has its competence defined by a set of capabilities it has to execute tasks, and a task requires a certain competence (i.e. has needs) from the PSAS for its execution. Each activity is decomposed into a set of tasks by using the property that each task must be executed by exactly one PSA. Further, each task is matched to a PSA by selecting a PSA that has the capabilities to meet the needs of the task. Tokens are used to model the capability/need of a PSA/task, respectively. The specification of activities, sub-activities, tasks and PSAS are all user-driven. All of the knowledge and information extracted from the real world is stored in the knowledge base for future reuse. Eventdriven activity execution [Yeu95]: An activity consists of multiple, inter-dependent tasks that need to be coordinated, scheduled and executed. The dependencies between tasks can be one or more of data/control dependency, temporal dependency, and external dependency. These dependencies are expressed