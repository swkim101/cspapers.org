A strong memory model, such as region serializability, helps programmers reason about programs in the granularity of synchronization free regions and allows compiler and hardware to more freely reorder accesses. However, providing region serializability usually is expensive in software or requires custom hardware. We introduce a new approach to support a memory model that guarantees write-atomicity and a consistent snapshot view to reads in a synchronization free region by tolerating the majority region-conflicts caused by write-write and write-read conflicts and freezes the program state if a read-write conflict violates the memory model.