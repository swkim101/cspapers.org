Which computer languages should we be teaching our students — and why? This paper examines the multitude of languages now available from three perspectives: classificatory, predictive, and pedagogical. It offers a “linguistic” analysis of computer languages in terms of their structure, their function, and their genealogy. Using these classifications, the paper then analyzes current and future trends for each language type. The classifications and predictions suggest a fundamental distinction between two sorts of languages: those appropriate for public computing (i.e. programming done by most professional computer scientists) and those appropriate for private computing (computing by individuals for their own purposes). The paper suggests that while would-be computer scientists need to learn public computing languages, private computing languages may be especially appropriate for non-professional computer users.