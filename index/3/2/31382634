A number of application-specific searching mechanisms, including keyword searching in textual databases, can be implemented naturally in a relational DBMS using abstract datatypes and userdefined operators. For query efficiency these operators and abstract datatypes must be supported by indices. A new indexing scheme is proposed which allows a large class of query predicates to be evaluated using indices, including many key operators for textual databases. The indexing scheme also significantly reduces the space required to store indexed textual data in a relational database system.