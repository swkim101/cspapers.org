Estimates of large scale software development schedules and associated costs have had a history of being wrong more than right. The landscape is littered with examples of such projects, including some design automation systems, which were over a year late in becoming operational and costing millions of dollars more than estimated. There are a number of reasons for this situation including poorly stated system requirements, shortage of personnel capable of managing large scale software developments, and a tendency to try and solve system problems late in the development cycle by taking advantage of the inherent flexibility of the general purpose computer.
 To provide a background for a discussion of estimating techniques for software development schedules and costs, a brief description will be given of the development process. Next, some empirical “rules of thumb” for estimating development times, computer support and costs will be presented. Finally some interesting schedule, cost, and computer time estimating equations will be described. These are based upon a regression analysis of a large number of software development projects in terms of observed parameters.