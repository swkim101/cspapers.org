The <i>subsequence character count problem</i> has as its inputan array <i>S</i> = <i>s</i><sub>1</sub>, ¡­,<i>s<sub>n</sub></i> of symbols over alphabet ¦² and anatural number <i>m.</i> Its output is: for every <i>i, i</i> = 1,¡­, <i>n</i> - <i>m</i> + 1, the number of<i>different</i> alphabet symbols occurring in the subsequence<i>s<sub>i</sub></i>, <i>s</i><sub><i>i</i>+1</sub>, ¡­,<i>s</i><sub><i>i</i>+<i>m</i>-1</sub>. The subsequence charactercount problem is a natural problem that has many uses. It can besolved in linear time for fixed finite alphabets and in time<i>O</i>(<i>n</i> log <i>m</i>) for infinite alphabets. In [1] theproblem was used to solve the <i>parameterized matching</i>problem.
The character count problem can be generalized to two dimensionsand becomes the <i>submatrix character count problem.</i> Its inputis an <i>n</i> x <i>n</i> matrix <i>T</i> over alphabet¦² and a natural number <i>m.</i> Its output is: forevery <i>i,j, i,j</i> = 1, ¡­, <i>n</i> - <i>m</i> + 1,the number of <i>different</i> alphabet symbols occurring in thesubmatrix <i>T</i>[<i>i</i> + <i>k,j</i> + &ell;], <i>k</i> =0, ¡­, <i>m</i> - 1;&ell; = 0, ¡­, <i>m</i>- 1.
This problem was motivated by parameterized matching in twodimensions which is a good model for seeking a pattern in an imagewith a change of color map. The number of different colors in asubarea of an image is considered a "signature". There are manyimage processing tools that use this measure (see e.g. [5]).
The straightforward one dimensional solution slides a windowalong the text adding an element and deleting an element at everystep. The problem with two dimensions is that at every move of thewindow there are <i>m</i> elements added and <i>m</i> deleted.
In this paper we present an alternate solution that generalizesto two dimensions. We achieve a <i>O</i>(<i>n</i><sup>2</sup>) timesolution to the submatrix character count problem over finite fixedalphabet and a <i>O</i>(<i>n</i><sup>2</sup> log <i>m</i>) solutionover an infinite alphabet.
The submatrix character count problem is a special case of the<i>color range query problem,</i> where one needs to preprocess atwo dimensional <i>nxn</i> array <i>T</i> of symbols over alphabet¦² - the colors. Subsequently we are interested inanswers to queries of the type: Given intervals[<i>i</i><sub>1</sub>,<i>j</i><sub>1</sub>] and[<i>i</i><sub>2</sub>,<i>j</i><sub>2</sub>],<i>i</i><sub>1</sub>,<i>i</i><sub>2</sub>,<i>j</i><sub>1</sub>,<i>j</i><sub>2</sub> ¦Å {1, ¡­, <i>n</i>} and<i>i</i><sub>1</sub> ¡Ü <i>j</i><sub>1</sub>,<i>i</i><sub>2</sub> ¡Ü <i>j</i><sub>2</sub> give thenumber of <i>different</i> alphabet symbols (colors) occurring inthe submatrix <i>T</i>[<i>k,</i>&ell;], <i>k</i> =<i>i</i><sub>1</sub>, ¡­,<i>j</i><sub>1</sub>, &ell;= <i>i</i><sub>2</sub>,¡­,<i>j</i><sub>2</sub>.
Jonardan and Lopez [6] showed that with a<i>O</i>(<i>n</i><sup>2</sup> log<sup>2</sup> <i>n</i>)preprocessing one can answer queries in time<i>O</i>(<i>log</i><sup>2</sup> <i>n</i>). This means that thesubmatrices character count problem can be solved in time<i>O</i>(<i>n</i><sup>2</sup> log<sup>2</sup> <i>n</i>) bypreprocessing and then querying, for every location, the <i>m</i> x<i>m</i> submatrix starting at that location.
We are not aware of a faster direct approach for solving thesubmatrix character count problem. However, problems with a similarflavor, where the desired calculation is a convolution, are solvedin electrical engineering by a method called <i>SeparableConvolutions</i> or <i>Separable Filters</i> [4]. A similar notionwas used by Bird [3] and Baker [2] to solve the two dimensionalpattern matching problem.
The contributions of this paper are two-fold. First, Wegeneralize the notion of <i>separable convolutions</i> to<i>separable attributes.</i> We believe it is important to keepthis method in mind as an element of the basic algorithmic toolkit.It has proven useful in the past and, we think, will prove usefulfor solving various two-dimensional problems in the future.Secondly, We use the separable attributes method for providing thefastest algorithm yet for the submatrices character countproblem.
A full version of this paper can be found athttp://www.cs.biu.ac.il/~amir/Postscripts/sep.ps.