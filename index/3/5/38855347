Natural language interfaces are frequently proposed as a solution to the problems of “user-unfriendliness” present in many existing computer system interfaces. The panel will examine this claim, and discuss in what circumstances (if any) it is (or could be) true.
As a starting point, let us define a natural language interface as an interface to a computer system that allows the user to control the system by English1 commands or queries. Sometimes the output seen by the user will also be in natural language. Currently, most natural language interfaces only accept typed, rather than spoken, input. Also, such interfaces typically can only handle input related to the restricted world of their underlying application, and moreover, only a subset (albeit expressively comprehensive) of that.
 Set against these advantages are the following standardly cited disadvantages:verboseness: English commands or queries can take many more keystrokes to enter than equivalent formal command lines or menu-based selection.
coverage restrictions: Since current natural language interfaces cannot handle all natural language inputs, not even all those relevant to their domain of discourse, the user is faced with the task of learning what the system can and cannot deal with, usually by trial and error.

Given these conflicting arguments, it seems better to avoid the general question of whether natural language interfaces are Good or Bad. Instead, the panel will concentrate on how the utility of natural language interfaces is affected by the environment (broadly conceived) in which they operate. We will also be concerned with how the utility of specific natural language or other types of interface can be determined in specific circumstances.
Factors affecting the utility of natural language interfaces include:Type of user: Natural language interfaces are better suited to novice or casual users rather than expert or frequent users of a system. An expert or frequent user can afford the cost of learning a command language because of the terseness it allows. On the other hand, it may be more economical for a novice or infrequent user to enter a verbose natural language input than to find out the correct terse command line.
 Combination with other input types: It may be possible to build interfaces which combine natural language and other types of interface in way that retains the best features of both, while reducing the impact of their negative features.

The above list of issues does not pretend to be comprehensive, out is intended as a basis for discussion. Many other issues will no doubt arise during the course of the panel.