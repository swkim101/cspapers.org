In Codd's relational model, the relation name groups together a family of functional dependencies over a set of attributes. For integrity and for maintenance purposes it is important to eliminate inherent redundancy within a relation due to the repetition of instances of a functional connection between attributes. This led Codd to propose a series of three normalizations. The manipulation of normal forms is governed by functional dependencies that are explicitly declared to exist within the relation. Since functional dependencies completely govern the decomposition rules of normalization, perhaps it is more sensible to take them as the elementary notions to be later synthesized into more complex structures, such as relations. Our goals, then are twofold. First, we will discuss how the use of functional dependencies lends itself to a rigorous and correct, yet clear and simple description of complex data relationships. Second, we will outline some new computational techniques to map functional dependencies into normal form relations algorithmically, thus allowing us to use the dependencies as a basic unit on the implementation as well as conceptual level.