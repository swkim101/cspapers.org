Software Engineers apply systematic techniques to formalize requirements, build tests, and plan out complex architectures. However, few Computer Science Educators bring the same rigorous methods to the design of their students' learning experiences. Educational theories of Instructional Design (compatible with a wide range of popular educational theories) bridge this gap by emphasizing meaningful assessment, identification of instructional objectives, and analysis of the learners; unfortunately, these theories have been neglected within Computer Science Education. I have applied the Dick & Carey Model of Instructional Design in two formal case studies to create new learning modules with extensive documentation, detailed components, and clear results. In fact, my formal evaluations of my materials with real learners suggest that students had average learning gains of up to 43%. More crucially, however, the model provided key opportunities to improve the instruction a priori and posteriori. My major contribution in this research is not the generation of new instructional materials, but the demonstration of the raw potential of this methodology for curriculum development.