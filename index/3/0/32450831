Automated reasoning about database systems refers to using a program or programs to draw inferences about properties of systems and can be used by designers to analyze system designs, by query processors to optimize queries, and by transaction compilers or interpreters to optimize the checking of integrity constraints. Automated reasoning can also be used as logic programming and combined with database processing in ways that promise to be very powerful in dealing with problems currently intractable. In these efforts, complexity will be a ignificant problem to be dealt with. We report on experience in dealing with complexity during efforts to mechanically prove properties of database systems.