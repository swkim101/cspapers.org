There are numerous working projects on IoT platforms, and many projects employ JavaScript as their client-side language. One of the benefits using JavaScript in IoT platforms is its great portability which lets an application to run on any IoT devices that employ a JavaScript runtime. In this situation, user experiences can be enhanced if the states in the IoT devices can be shared so that a user can seamlessly continue an application's state from one device to another. However, serializing the whole execution state of a running application will be inefficient, since most of the execution state would be the same as the initial state of the app launch time. To reduce this inefficiency, we propose JSDelta, which traverses the JavaScript objects and save only those objects modified from the initial state to a file called snapshot. We send the snapshot to other IoT device, which launches the original app and apply the snapshot to resume the execution state. We have a promising experimental result, eliminating 94% of the snapshot size on average.