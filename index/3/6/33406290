~ically, software engineering concepts are covered in a oneor two-semester junioror senior-level course. Yet, computer science students are expected to engineer computer software throughout the undergraduate curriculum. By the time they enroll in a traditional software engineering course, their formative software development years have passed. Additionally, they may have already cultivated many undesirable software development practices that must be unlearned. Therefore, many educators believe that some software engineering principles may be best taught by introducing them early and reinforcing them throughout the students’ computer education experience, Clearly, this view is supported by some in the computing field, since many of the recently published CS1 and CS2 textbooks include softsvare engineering material. However, some of the textbooks have been augmented to inclucle only a chapter or two of software engineering information, but have not been changed otherwise; the remainder of the chapters have not been revised to take a software engineering approach. Moreover, there are very few sources available that offer educators information as to how to effectively integrate this information into their courses. ‘Ihus, software engineering principles are traditionally perceived as additional material to be covered rather than as a natural part of any computer science course.