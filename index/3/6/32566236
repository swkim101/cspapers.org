In the design of the PRTV system we stressed the importance of the easy writing of extensions to the language, ISBL. We give sufficient details of the ISBL language to provide a framework in which to discuss these extensions. They fall into two classes, those which can be thought of as relations, computed when required, rather than being explicitly stored, and those where a tuple in the result relation is, in general, formed from values taken from more than one tuple in the input relation. We discuss these extensions at a theoretical level, how they are defined and used, and how they are implemented. Finally we discuss the operation of 'glumping' or partitioning, in terms of relations not in first normal form. This provides a general way of lookinq at such operations as subtotalling.