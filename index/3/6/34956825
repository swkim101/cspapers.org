One common approach to solve combinatorial optimization nroblems is the orimal method. One starts with a feasible solution and then successively produces new feasible solutions with better objective function values until an optimal solution is reached. From an abstract point of view, an augmentation problem is solved in each iteration, i.e., given a feasible point find an augmenting vector, if one exists. Usually, augmenting vectors with problem-specific properties are needed to guarantee a polynomial running time of the overall algorithm. In this paper, we show that one can solve virtually anv integer programming problem in polynomial time provided one can efficientlv solve the directed auomentation problem. The directed augmentation problem &ises from the usual augmentation problem by splitting each direction into its positive and its negative part and by considering linear objectives on these parts. Our main result then says that in order to get a polynomial-time algorithm for optimization it is sufficient to efficiently find, for any linear objective function in the positive and negative part, an arbitrary augmentation vector. This result may have some impact on the design of special-purpose algorithms as it provides a general framework to get polynomial-time algorithms. In the full version of this paper, we demonstrate its applicability by considering the min-cost flow problem, by giving a novel algorithm for linear nromammina over uoimodular snaces. bv nroviding a new -tig&ithm fo; perfect &matching, and’by drawing a different oroof that for O/l-integer nromamminlr efficient solving of ihe standard a&gment&iori p;oblem s&ices for efficient optimization. Changing one’s mood, one can also conclude from the result that directed augmentation is at least as hard as optimization. That is, &eady finding a directed auamentation vector for an NP-hard woblem. in polynomial ‘iime is a hopeless task, unless P = HP.