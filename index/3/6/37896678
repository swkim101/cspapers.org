Automation is the most successful technological means for achieving dramatic improvements in both productivity and quality. The displacement of manual manufacturing methods by automated processes is at the core of the Industrial Revolution and accounts for much of what we usually refer to "progress" over the past several centuries. The introduction of computers and computer software more than a half century ago create unprecedented opportunities in this regard: they can not only help us automate the physical processes involved in production but also many of the highly mechanistic and error-prone mental processes involved in design. The opportunity provided by software and computers in this regard is without precedent. Yet, when one reviews the history of computer-based automation in the process of software design, we find that, following the invention of compilers almost fifty years ago, the use of computer-based automation has made little difference in the lives and methods of the vast majority of software developers. This is not due to lack of opportunity - software is an eminently flexible medium limited mostly by imagination - but mostly due to often unrecognized social and cultural factors. In this talk, we first examine the history of the use of computer-based automation in software development and speculate on the reasons why the software development community has spurned the opportunities that it offers. Next, we identify the scope of opportunities offered by current computer-based technology and what could be done to exploit this potential to its fullest.