Database workloads severely underutilize their micro-architectural resources. This results in inefficient use of the chip's limited power budget. While ARM's server-grade processor is a promising energy-efficient alternative, it nevertheless wastes significant portion of the power-budget when running a database workload. In this paper, we systematically explore the ways of improving energy efficiency when running database workloads. We start by describing software-only and hardware-only optimizations, and then discuss two hardware/software co-design approaches. We finally propose combining a diverse set of hardware/software co-designed systems into a heterogeneous, energy-efficient database machine.