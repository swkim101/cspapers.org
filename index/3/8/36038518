This paper explores the issues that arise when SSS*-like search algorithms are implemented in parallel. There is an important implicit assumption regarding the OPEN list of SSS* (and A*-like algorithms); those states which are guaranteed never to become part of an optimal solution are forced down into the OPEN list and never rise to the top for expansion. However. when multiple processors are introduced in a parallel version of SSS*. These buried states become subject to expansion despite their provable suboptimality. In such states are not identified and purged, they may exert an enormous drag on the parallel algorithm because considerable processor effort will be wasted, However, the pruning mechanisms of alpha-beta can be adapted by a parallel SSS*; the resulting algorithm HYBRID is suitable for searching game trees and general AND/OR trees in parallel.