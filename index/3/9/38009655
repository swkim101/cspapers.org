One of the claimed advantages of object-oriented (OO) development is that developers can use objects in a uniform modeling approach throughout the process. In particular, they can coherently apply the same notation for representing these objects and their relations in both analysis and design. Given this, the claims by many OO methodologists (see, e.g., [1, 5]) that the transition from OO analysis (OOA) to OO design (OOD) is easy and smooth may seem convincing. However, the contrasting view can be found in [2, 4] that it is actually difficult to go from OOA to OOD and, recognizing the differences between what is modeled in the analysis and design phases can lead to a more conscious development approach.
In the light of such controversial views, it seems to be necessary to widely discuss this issue. The prospective panelists represent a wide spectrum of related views. So, there is some hope that this panel might more or less resolve this important issue.
A consequence of resolving this issue might be a contribution to a better understanding of a paradox in the current software business: software is wanted faster and at the same time with higher quality than ever before. Does the view that the transition from OOA to OOD might be easy promise too much in the direction of quick solutions?