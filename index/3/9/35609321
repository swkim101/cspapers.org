Several aspects of relational database systems require the processing of predicates. For example, predicates can be tested for satisfiability (as in processing predicate locks), and predicates occurring in queries may be preprocessed in order to reduce the number of database operations when the query is answered. Here we study predicates consisting of conjunctions of comparisons. First, we consider predicates that are conjunctions of =, , and >= comparisons, where a variable can be compared with a constant or with another variable, possibly offset by a constant. Efficient algorithms are given for satisfiability, equivalence, and minimizing the number of comparisons in a predicate. Second, we show that when unequal comparisons between variables are allowed, satisfiability, equivalence, and minimization are NP-hard. Most approximation problems corresponding to minimization are also NP-hard. The preceding efficient algorithms show that the unequal comparison operation is the sole cause of this complexity.