Unlike preemptive scheduling policies, non-preemptive real-time scheduling policies can exhibit anomalies even for the single-processor case. In particular, a task set that is schedulable by a non-preemptive scheduler may become unschedulable when the utilization of the task set decreases relative to the CPU speed, e.g., when a faster CPU is used to run the same task set. In this paper, we define the notion of robustness to capture the essence of the scheduling anomaly on real-time system performance. We shall show that it is difficult to test for robustness in general but there are sufficient conditions for guaranteeing robustness