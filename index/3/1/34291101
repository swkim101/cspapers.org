Computer Science is a rapidly expanding discipline. While much knowledge becomes obsolete, a quick comparison of Curriculum 68 and Curriculum 91 will illustrate that students are expected to master a larger and larger body of knowledge, and this trend is expected to continue. Although the knowledge students are expected to master is increasing, the time allotted to obtain this knowledge is not increasing. Computer Science departments have cheated in this area in the past by insisting that programming courses just naturally require more time than other courses. An easy solution to this dilemma is to increase the time required to complete Computer Science degree programs. Presently, however, there is little support in academia for a five year curriculum in Computer Science. Rather, recent trends suggest a decrease in the number of hours. One approach to this problem is to redesign curricula, ruthlessly discarding obsolete information. Another is to assume that students have satisfied certain prerequisites, such as initial programming courses, in high school. A third approach, which will be the focus of this panel discussion, is to attempt to make learning more efficient. A common rule of thumb is that a student is expected to spend ten hours per week, including class time, on a three credit course. The panel will discuss how that time should best be allocated to maximize learning. More specifically, the panel will address teaching and learning paradigms which require students to think and become actively involved in the acquisition of knowledge. Such models, which are designed to make