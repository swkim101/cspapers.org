CS-4 is an extensible language currently being developed for the Navy. The language design was influenced strongly by ECL and Algol-68; some of the more important aspects of CS-4 are as follows: (1) CS-4 has strong type checking and a rich data definition facility; mode generators include ARRAY, STRUCTURE, POINTER, STATUS, and SET. (2) Procedures can be defined as GENERICs and can be used as prefix or infix operators. (3) Procedures can be "compile-time", to be invoked during program compilation. (4) CS-4 provides a complete set of structured control-flow determiners, similar to those in BLISS. (5) The ACCESS statement allows separately compiled modules to communicate via a strongly checked interface; complete attribute information concerning the ACCESSed modules is thus available to the ACCESSing modules, including any optimization properties ascribed to the ACCESSed functions.Work is currently in progress on the design of a compiler for CS-4 (ultimately to be written in CS-4). Early in the development it became apparent that a practical optimizer was important; because of the similarity of control structure in CS-4 and BLISS, the BLISS\11 compiler was studied with the intention of adapting and improving their global optimization strategies. This paper presents some of the results of this study, the main one of which is a set of new optimization techniques which defer control- and data flow-processing until the information is actually required. Such a deferral scheme is necessary for practicality in compilers such as CS-4'S, in which the intermediate representation of a program is not core-resident.