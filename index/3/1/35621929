For geometric optimization problems we often understand the computational complexity on a rough scale, but not very well on a finer scale. One example is the two-dimensional knapsack problem for squares. There is a polynomial time (1+ε)-approximation algorithm for it (i.e., a PTAS) but the running time of this algorithm is triple exponential in 1/ε, i.e., Ω (n221/ε). A double or triple exponential dependence on 1/ε is inherent in how this and other algorithms for other geometric problems work. In this article, we present an efficient PTAS (EPTAS) for knapsack for squares, i.e., a (1+ε)-approximation algorithm with a running time of Oε(1)⋅ nO(1). In particular, the exponent of n in the running time does not depend on ε at all! Since there can be no fully polynomial time approximation scheme (FPTAS) for the problem (unless P = NP), this is the best kind of approximation scheme we can hope for. To achieve this improvement, we introduce two new key ideas: We present a fast method to guess the Ω (221/ε) relatively large squares of a suitable near-optimal packing instead of using brute-force enumeration. Secondly, we introduce an indirect guessing framework to define sizes of cells for the remaining squares. In the previous PTAS, each of these steps needs a running time of Ω (n221/ε) and we improve both to Oε(1)⋅ nO(1). We complete our result by giving an algorithm for two-dimensional knapsack for rectangles under (1+ε)-resource augmentation. We improve the previous double-exponential PTAS to an EPTAS and compute even a solution with optimal weight, while the previous PTAS computes only an approximation.