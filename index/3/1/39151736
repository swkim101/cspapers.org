Restricted programming languages, for example primitive recursive definition schemes, are very often not nearly as succinct in describing primitive recursive functions as a general programming language [1]. We show that as one increases the power of programming languages, one can obtain economies in program size by any recursive amount for even very simple functions. This parallels a situation in the arithmetic hierarchy, where it is possible to get a recursively enumerable set whose smallest recursively enumerable index is much larger than the smallest index for the same set considered, say, as a set recursively enumerable in Ã¸'. These phenomena follow from the fact that the ability to write programs which refer to the universal functions of an enumeration enables one to decrease significantly the size of programs. The notation, when not defined is that of [4].