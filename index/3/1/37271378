This panel will lay the foundation for understanding the needs of Large Systems so that OO practitioners can:&bull; appreciate the problems faced;&bull; understand the issues involved; and&bull; re-orient the approaches to provide a viable solution when participating in similar efforts.Specifically, this panel will establish the foundation for discussions on Large Systems by establishing concepts, exposing terminology, and highlighting the state-of-the art.Large applications are usually complex and display one or more of the following dimensions of largeness:&bull; Processing power: requiring tens to hundreds of gigabytes of memory and hundreds of gigaflops performance&bull; High connectivity: highly-connected, systems can show aggregate behavior with complex characteristics: they can become chaotic.&bull; Online access: Archival of terabytes of information, with the need to provide online access to information&bull; Archival and online retrieval: The two technologies (database and archival storage), however, currently do not interoperate. There is a need to develop interfaces to integrate these two technologies.&bull; Data-intensive scientific applications: These involve constructing a data handling infrastructure that simplifies the effort required to maintain petabyte archives, identify relevant data sets within the archive, move, the data to processing platforms, and distribute the data sets across multiple nodes.&bull; Internet access: Large applications often require simultaneous access of information by millions of users worldwide;they must provide acceptable response times.&bull; Scaleable architecture: The systems must be prepared to support exponential growth of application load.Is OOT up to the task? OO practitioners will be encountering some of these application domains in the near future. Some may have already gained some experience in trying to solve these problems. However, the literature in OO does not provide sufficient evidence to believe that OO is ready for such large systems today. Part of the problem is the cross-disciplinary nature of these problems requires a steep learning curve for OO practitioners to be effective. The modeling of these problems with an OO approach is also a challenge. Current 00 methods do not do a good job of supporting multiple views of a domain, and multiple layers of a complex application domain.