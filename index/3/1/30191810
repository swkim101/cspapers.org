An approach to the specification of abstract data structures (or modules) is presented. Specifications are given in a state machine form. This approach emphasizes the usefulness of invariants which restrict the operations which act on the structures. Invariants are useful both for informally capturing the required behaviour of the structure, and in the development of formal specifications, Examples are used to illustrate how the invariants help in the refinement process to provide the abstract functions which describe the abstract states of the structures, Also, a nontrivial example illustrates the use of invariants to describe the consequential effects of more complex operations.