The Super Instruction Architecture (SIA) was developed to support parallel implementation of algorithms for electronic structure computational chemistry calculations. The methods are programmed in a domain specific programming language called Super Instruction Assembly Language (SIAL). An important novel aspect of SIAL is that algorithms are expressed in terms of operations (super instructions) on blocks (super numbers) rather than individual floating point numbers. The bytecode from compiled SIAL programs is executed by a parallel virtual machine known as the Super Instruction Processor (SIP). Compute intensive operations such as tensor contractions and diagonalizations, as well as communication and I/O are handled by the SIP. By separating the algorithmic complexity of the application domain in SIAL from the complexities of parallel execution on computer hardware in the SIP, a software system has been created that allows for very effective optimization and tuning on different hardware architectures with quite manageable effort.