The design of the Dart programming language is heavily based on syntax, features, and performance characteristics from past object-oriented systems. This intentional choice has resulted in a productive and yet simple to learn programming language with clear semantics. It can even be implemented efficiently on a wide variety of platforms. We will in this talk discuss several important design decisions, including: constructor semantics, the optional type system, and support for incremental execution and fast application startup. Finally, we will evaluate where the language should be improved.