Building a formally-veriﬁed software middlebox is attractive for network reliability. In this paper, we explore the feasibility of verifying “almost unmodiﬁed” software middleboxes. Our key observation is that software middleboxes are already designed and implemented in a modular way (e.g., Click). Further, to achieve high performance, the number of operations each element or module performs is ﬁnite and small. These two characteristics place them within reach of automated veriﬁcation through symbolic execution. We perform a systematic study to test how many existing Click elements can be automatically veriﬁed using symbolic execution. We show that 45% of the elements can be automatically veriﬁed and an additional 33% of Click elements can be automatically veriﬁed with slight code modiﬁcations. To allow automated veriﬁcation, we build Gravel, a software middlebox veriﬁcation framework. Gravel allows developers to specify high-level middlebox properties and checks correctness in the implementation without requiring manual proofs. We then use Gravel to specify and verify middlebox-speciﬁc properties for several Click-based middleboxes. Our evaluation shows that Gravel avoids bugs that are found in today’s middleboxes with minimal code changes and that the code modiﬁcations needed for proof automation do not affect middlebox performance.