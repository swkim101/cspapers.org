—Software vendors collect crash reports from end-users to assist in the debugging and testing of their products. However, crash reports may contain users’ private information, like names and passwords, rendering the user hesitant to share the reports with developers. We need a mechanism to protect users’ privacy in crash reports on the client side while keeping sufficient information to support server-side debugging and analysis. In this paper, we propose the D ESENSITIZATION technique, which generates privacy-aware and attack-preserving crash reports from crashed executions. Our tool adopts lightweight methods to identify bug-related and attack-related data from the memory, and removes other data to protect users’ privacy. Since a large portion of the desensitized memory contains null bytes, we store crash reports in spare files to save the network bandwidth and the server-side storage. We prototype D ESENSITIZATION and apply it to a large number of crashes of real-world programs, like browsers and the JavaScript engine. The result shows that our D ESENSITIZATION technique can eliminate 80.9% of non-zero bytes from coredumps, and 49.0% from minidumps. The desensitized crash report can be 50.5% smaller than the original one, which significantly saves resources for report submission and storage. Our D ESENSITIZATION technique is a push-button solution for the privacy-aware crash report.