The material taught in a Formal Languages course is mathematical and requires students to practice proofs and algorithms to understand the content. Traditional Formal Languages textbooks are heavy on prose, and homework typically consists of solving many paper exercises. Students need to read a significant amount of text to achieve understanding. Inspired by the principles of the Programmed Instruction (PI) teaching method, we seek to develop a new Formal Languages eTextbook. The PI approach has students read a little, ideally a sentence or a paragraph, and then answer a question or complete an exercise related to that information. Based on the question response, students are permitted to continue to other frames of information or must retry to solve the exercise. However, students need to build Formal Languages models and apply different algorithms. Some instructors make use of Finite State Machine simulators like JFLAP for this purpose. However, JFLAP is built using Java, and it gives no support for auto-grading. We developed an open-access version of JFLAP, called OpenFLAP. OpenFLAP provides proficiency exercises, auto-graded exercises, and visualizations to help students understand and practice Formal Languages contents. To evaluate the pedagogical effectiveness of our new eTextbook, we conduct time and performance evaluations across three offerings of the course CS4114 Formal Languages and Automata at Virginia Tech.