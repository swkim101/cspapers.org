Embedded systems such as self-driving systems and advanced driver-assistance systems (ADAS) require a computing platform with high computing power and low power consumption. Many-core platforms satisfy exactly these requirements. However, for hard real-time applications, multiple demands on shared resources can hinder real-time performance. Memory is among the resources that can most dramatically impair desired performance. In particular, it is important that the timing for accessing the memory is deterministic. As a method for realizing this, the Logical Execution Time (LET) paradigm is currently attracting attention. Research on the LET model is mainly conducted for control systems such as engines. However, scalability is required for application to autonomous driving systems, and high-speed task scheduling and mapping to the core must be considered. This paper summarizes the scheduling issues of hard real-time applications on a many-core processor using the LET model and discusses possible approaches.