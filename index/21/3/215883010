Writing Efficient C++ ProgramsScott Meyers, Brown University
This tutorial teaches the competing meanings of highperformance; the characteristics of object-oriented systems thatcan decrease performance; how to locate and eliminate computationalbottlenecks in C++ programs; and the trade-offs between highperformance and system reusability, maintainability, andportability. It describes in detail the factors that affect theperformance of C++ software. Whether your primary concern is highsystem speed, small system size, fast recompilation, or acombination of these, this tutorial provides you with the toolsnecessary to come up with an appropriate object- oriented design,to implement it efficiently in C++, and to fine-tune it for maximumperformance.
The reasons for bottlenecks in C++ programs are oftensurprising. Contrary to popular belief, virtual functions usuallyexact a negligible performance cost, while unexpected calls toconstructors and destructors frequently hamstring applications.This tutorial teaches you what is really important if you want todeliver high performance, and the techniques you need to achieveit.