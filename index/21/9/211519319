With recent research discussing the benefits of student's practicing programming skills in many small focused assignments and longstanding support for providing automated tests to students (including tools such as Web-Cat that have been around for a decade), the logical next step is to provide a suite of small practice problems with automated tests. However, this approach does not address the problem of motivation or the quality of the experience for students. From experience, the typical prod (mandatory graded items) has limited success, and adds the burden of including these items within the assessment framework for a course that may dilute the assessment power of the final course grade. We propose to gamify the practice process. Similar to modern games we will provide a clear progression path with continuous rewards for completing tasks. Additionally, the tasks will be small in scope with support for providing custom automated tests to support automated verification of student work and automated feedback. The goal is to develop a customizable programming practice problem system for use in an introductory course for supplementary practice.