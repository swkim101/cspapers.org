Push-In First-Out (PIFO) queues are hardware primitives which enable programmable packet scheduling by providing the abstraction of a priority queue at line rate. However, implementing them at scale is not easy: just hardware designs (not implementations) exist, which support only about 1k ﬂows. In this paper, we introduce SP-PIFO , a programmable packet scheduler which closely approximates the behavior of PIFO queues using strict-priority queues— at line rate, at scale, and on existing devices . The key insight behind SP-PIFO is to dynamically adapt the mapping between packet ranks and available strict-priority queues to minimize the scheduling errors with respect to an ideal PIFO. We present a mathematical formulation of the problem and derive an adaptation technique which closely approximates the optimal queue mapping without any trafﬁc knowledge. We fully implement SP-PIFO in P4 and evaluate it on real workloads. We show that SP-PIFO : (i) closely matches PIFO, with as little as 8 priority queues; (ii) scales to large amount of ﬂows and ranks; and (iii) quickly adapts to trafﬁc variations. We also show that SP-PIFO runs at line rate on existing hardware (Barefoot Toﬁno), with a negligible memory footprint.