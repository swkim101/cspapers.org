In the last years, the popularity of deep learning techniques has renewed the interest in neural models able to process complex patterns, that are naturally encoded as graphs. In particular, different architectures have been proposed to extend the original Graph Neural Network (GNN) model. GNNs exploit a set of state variables, each assigned to a graph node, and a diffusion mechanism among neighbor nodes, to implement an iterative state update procedure that computes the Ô¨Åxed point of the (learnable) state transition function. In this paper, we propose a novel approach to state computation and learning for GNNs, based on a constraint optimisation task solved in the Lagrangian framework. The state convergence procedure is implicitly expressed by the constraint satisfaction mechanism and does not require a separate iterative phase for each epoch of the learning procedure. In fact, the computational structure is based on the search for saddle points of the Lagrangian in the adjoint space of weights, neural outputs (node states), and Lagrange multipliers. The proposed approach is compared experimentally with other popular models for processing graphs.