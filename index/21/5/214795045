We study the classic problem of scheduling $n$ precedence constrained unit-size jobs on $m = O(1)$ machines so as to minimize the makespan. In a recent breakthrough, Levey and Rothvoss \cite{LR16} developed a $(1+\epsilon)$-approximation for the problem with running time $\exp\Big(\exp\Big(O\big(\frac{m^2}{\epsilon^2}\log^2\log n\big)\Big)\Big)$, via the Sherali-Adams lift of the basic linear programming relaxation for the problem by $\exp\Big(O\big(\frac{m^2}{\epsilon^2}\log^2\log n\big)\Big)$ levels. Garg \cite{Garg18} recently improved the number of levels to $\log ^{O(m^2/\epsilon^2)}n$, and thus the running time to $\exp\big(\log ^{O(m^2/\epsilon^2)}n\big)$, which is quasi-polynomial for constant $m$ and $\epsilon$. 
In this paper we present an algorithm that achieves $(1+\epsilon)$-approximation for the problem with running time $n^{O\left(\frac{m^4}{\epsilon^3}\log^3\log n\right)}$, which is very close to a polynomial for constant $m$ and $\epsilon$. Unlike the algorithms of Levey-Rothvoss and Garg, which are based on linear-programming hierarchy, our algorithm is purely combinatorial. For this problem, we show that the conditioning operations on the lifted LP solution can be replaced by making guesses about the optimum schedule.