Synchronous Tree-Adjoining Grammar (STAG) is a promising formalism for syntax-aware machine translation and simultaneous computation of natural-language syntax and semantics. Current research in both of these areas is actively pursuing its incorporation. However, STAG parsing is known to be NP-hard due to the potential for intertwined correspondences between the linked nonter-minal symbols in the elementary structures. Given a particular grammar, the polynomial degree of efﬁcient STAG parsing algorithms depends directly on the rank of the grammar: the maximum number of correspondences that appear within a single elementary structure. In this paper we present a compile-time algorithm for transforming a STAG into a strongly-equivalent STAG that optimally minimizes the rank, k , across the grammar. The algorithm performs in O ( | G | + | Y | · L 3 G ) time where L G is the maximum number of links in any single synchronous tree pair in the grammar and Y is the set of synchronous tree pairs of G .