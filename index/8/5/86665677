When they enter a university program, students often focus on software construction. Programming appears to them as the most interesting, most visible, and most rewarding activity in software engineering. Software engineering curricula need to widen this view by teaching the importance, the methods, the opportunities and the rewards of all software engineering disciplines. Students must learn to consider the bigger picture, including relationship and interfaces of software engineering with other engineering disciplines, management, society, and business processes. This becomes even more important as software is a significant part of most products and services. 
 
Experimental learning is a well-established tool when teaching programming or programming-centric skills. When it comes to other aspects of software engineering, experimental learning and showing the relation to real-world problems and approaches is even more important: it helps graduates contribute more effectively to projects as soon as they start their career. 
 
EduRex 2012 provides a discussion forum for people from universities and industry with an interest in enriching learning with practical content, project-oriented learning, etc. To stimulate discussions in break-out groups, we asked to submit reports on successful courses, statements of open problems, and plans on how to support experience-oriented learning in the future.