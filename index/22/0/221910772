Refactoring tools automate tedious and error-prone source code changes. Such tools can improve the speed and accuracy of software development, yet developers frequently eschew automation in favor of manual refactoring. Developers report distrust and lack of predictability as reasons for not using automated tools, but there are no comprehensive explanations of trust and predictability nor guidelines for how to improve these aspects of tools. In this position paper we explore choices and tradeoffs in refactoring tool design.