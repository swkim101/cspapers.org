In mobile computing, various energy-efficient thread scheduling schemes for heterogeneous multiprocessing architectures are proposed. For network applications, however, inaccurate prediction of the CPU load and high-priority network packet processing overdrive CPU cores, leading to large energy consumption. We present a framework including a network stack monitor, a bandwidth controller, and an energy-efficient thread scheduling scheme, which accurately estimates the CPU load for packet processing and optimally schedules CPU resource. It improves performance/watt by 4.79 times over the baseline Linux scheduler for FTP applications. In multi-threaded environments, it improves performance/watt by 2.35â€“3.11 times for PARSEC benchmark and network applications.