Conceptual design is one of the initial phases in software design. In this phase the functional requirements are extracted from the problem and transformed into descriptions of solution concepts. Peculiar characteristics of software conceptual design (scd), such as dynamicity and intangibility add to the complexity of this phase. Modeling using Unified Modeling Language (UML) tools and creating various UML representations often characterize industry practices of scd. Modeling and representations are compartmentalized in UML, i.e. the representations correspond to the solution view of function, behaviour or structure. Novices learn about syntax, semantics and processes to create UML representations in their undergraduate courses such as Software Engineering. However, results from our novice studies indicate that they are unable to create scd due to difficulties such as fixation, lack of integration. These difficulties lead to creation of solutions that are neither integrated nor fulfill all functional requirements. Current teaching-learning methods do not explicitly support novices to overcome these difficulties. In this paper we describe the design of a teaching-learning environment, 'think & link'. It is based on the theoretical design framework of Function-behaviour-structure (FBS). Initial studies with learners using 'think & link' indicate conceptual change in novices understanding of scd.