The essence of many approaches for solving and optimizing stochastic control processes, such as those that arise in multi-robot coordinated operations, is to consider many candidate policies and select the best one. For many dynamic robots, this in turn requires a huge number of forward simulations, especially when the model is complex. We investigate the use of Akka Streams to parallelize robot simulation. This allows for asynchronous processing of data streams generated by multiple sensors on multiple robots in situations where it is not possible to pause the simulation during calculations or (network) communication. This structure helps mitigate the effects of latency and provides an expressive DSL (Domain Specific Language) to define the stream transformation graphs. It also helps reduce coordination errors and improve overall distributed simulation stability.