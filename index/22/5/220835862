Fast non-volatile memory (NVM) technology changes the landscape of ﬁle systems. A series of research efforts to overcome the traditional ﬁle system designs that limit NVM performance. This research has proposed NVM-optimized ﬁle systems to leverage the favorable features of byte-addressability, low-latency, and high scalability. The work tailors the ﬁle sys-tem stack to reduce the software overhead in using fast NVM. As a further step, NVM IO systems use the memory-mapped interface to fully capture the performance of NVM. However, the memory-mapped interface makes it difﬁcult to manage the consistency semantics of NVM, as application developers need to consider the low-level details. In this work, we pro-pose Libnvmmio, an extended user-level memory-mapped IO, which provides failure-atomicity and frees developers from the crash-consistency headaches. Libnvmmio reconstructs a common data IO path with memory-mapped IO, providing better performance and scalability than the state-of-the-art NVM ﬁle systems. On a number of microbenchmarks, Lib-nvmmio gains up to 2.2 × better throughput and 13 × better scalability than ﬁle accesses via system calls to underlying ﬁle systems. For SQLite, Libnvmmio improves the performance of Mobibench and TPC-C by up to 93% and 27%, respectively. For MongoDB, it gains up to 42% throughput increase on write-intensive YCSB workloads.