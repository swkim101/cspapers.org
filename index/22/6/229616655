This paper introduces the design of a snapshot-consistent ﬂash translation layer (SCFTL) for ﬂash disks, which has a stronger guarantee about the possible behavior after a crash than conventional designs. More speciﬁcally, the ﬂush operation of SCFTL also has the functionality of making a “disk snapshot.” When a crash occurs, the ﬂash disk is guaranteed to recover to the state right before the last ﬂush. The major beneﬁt of SCFTL is that it allows a more efﬁcient design of upper layers in the storage stack. For example, the ﬁle system built on SCFTL does not require the use of a journal for crash recovery. Instead, it only needs to perform a ﬂush operation of SCFTL at the end of each atomic transaction. We use a combination of a proof assistant, a symbolic executor, and an SMT solver, to formally verify the correctness of our SCFTL implementation. We modify the xv6 ﬁle system to support group commit and utilize SCFTL’s stronger crash guarantee. Our evaluation using ﬁle system benchmarks shows that the modiﬁed xv6 on SCFTL is 3 to 30 times faster than xv6 with logging on conventional FTLs, and is in the worst case only two times slower than the state-of-the-art setting: the ext4 ﬁle system on the Physical Block Device (pblk) FTL.