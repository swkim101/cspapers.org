The paper focuses on an under-studied yet fundamental issue on Simultaneous Multi-Threading (SMT) processors — how to schedule I/O workloads, so as to improve I/O performance and efﬁciency. The paper shows that existing techniques used by CPU schedulers to improve I/O performance are inefﬁ-cient on SMT processors, because they incur excessive context switches and spinning when workloads are waiting for I/O events. Such inefﬁciency makes it difﬁcult to achieve high CPU throughput and high I/O throughput, which are required by typical workloads in clouds with both intensive I/O operations and heavy computation. The paper proposes to use context retention as a key technique to improve I/O performance and efﬁciency on SMT processors. Context retention uses a hardware thread to hold the context of an I/O workload waiting for I/O events, such that overhead of context switches and spinning can be eliminated, and the workload can quickly respond to I/O events. Targeting virtualized clouds and x86 systems, the paper identiﬁes the technical issues in implementing context retention in real systems, and explores effective techniques to address these issues, including long term context retention and retention-aware symbiotic scheduling. The paper designs V SMT-IO to implement the idea and the techniques. Extensive evaluation based on the prototype implementation in KVM and diverse real-world applications, such as DBMS, web servers, AI workload, and Hadoop jobs, shows that V SMT-IO can improve I/O throughput by up to 88.3% and CPU throughput by up to 123.1%.