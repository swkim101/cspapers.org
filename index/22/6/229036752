
 Graphs can be used to represent many engineering systems and decisions because of their ability to capture discrete compositional and relational information. In this article, improved methods for effectively representing and generating all graphs in a space defined by certain complex specifications are presented. These improvements are realized through enhancements to the original perfect matching-inspired approach utilizing a component catalog definition to capture the graphs of interest. These enhancements will come in many forms, including more efficient graph enumeration and labeled graph isomorphism checking, expansion of the definition of the component catalog, and the effective inclusion of new network structure constraints. Several examples are shown, including improvements to the original case studies (with up to 971Ã— reduction in computational cost) as well as graph problems in common system architecture design patterns. The goal is to show that the work presented here and tools developed from it can play a role as the domain-independent architecture decision support tool for a variety of graph enumeration-based engineering design challenges.