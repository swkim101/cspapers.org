We describe and evaluate an extensible bug-ﬁnding tool, Sys, designed to automatically ﬁnd security bugs in huge code-bases, even when easy-to-ﬁnd bugs have been already picked clean by years of aggressive automatic checking. Sys uses a two-step approach to ﬁnd such tricky errors. First, it breaks down large—tens of millions of lines—systems into small pieces using user-extensible static checkers to quickly ﬁnd and mark potential errorsites. Second, it uses user-extensible symbolic execution to deeply examine these potential errorsites for actual bugs. Both the checkers and the system itself are small (6KLOC total). Sys is ﬂexible, because users must be able to exploit domain-or system-speciﬁc knowledge in order to detect errors and suppress false positives in real codebases. Sys ﬁnds many security bugs (51 bugs, 43 conﬁrmed) in well-checked code—the Chrome and Firefox web browsers—and code that some symbolic tools struggle with—the FreeBSD operating system. Sys’s most interesting results include: an exploitable, cash bountied CVE in Chrome that was ﬁxed in seven hours (and whose patch was backported in two days); a trio of bountied bugs with a CVE in Firefox; and a bountied bug in Chrome’s audio support.