The invention of Ethereum smart contract has enabled the blockchain users to customize computing logic in transactions. However, similar to traditional computer programs, smart contracts have vulnerabilities, which can be exploited to cause ﬁnancial loss of contract owners. While there are many software tools for detecting vulnerabilities in the smart contract bytecode, few have focused on transactions. In this paper, we propose T X S PECTOR , a generic, logic-driven framework to investigate Ethereum transactions for attack detection. At a high level, T X S PECTOR replays history transactions and records EVM bytecode-level traces, and then encodes the control and data dependencies into logic relations. Instead of setting a pre-deﬁned set of functionalities, T X S PECTOR allows users to specify customized rules to uncover various types of attacks in the transactions. We have built a prototype of T X S PECTOR and evaluated it for the detection of three Ethereum attacks that exploit: ( i ) the Re-entrancy vulnerability, ( ii ) the UncheckedCall vulnerability, and ( iii ) the Suicidal vulnerability. The results demonstrate that T X S PECTOR can effectively detect attacks in the transactions and, as a byproduct, the corresponding vulnerabilities in the smart contracts. We also show how T X S PECTOR can be used for forensic analysis on transactions, and present Detection Rules for detecting other types of attacks in addition to the three focused Ethereum attacks.