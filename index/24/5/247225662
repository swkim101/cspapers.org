We present Spectrum, a high-bandwidth, metadata-private ﬁle broadcasting system. In Spectrum, a small number of broadcasters share a ﬁle with many subscribers via two or more non-colluding broadcast servers. Subscribers generate cover trafﬁc by sending dummy ﬁles, hiding which users are broadcasters and which users are only consumers. Spectrum optimizes for a setting with few broadcasters and many subscribers—as is common to many real-world applications—to drastically improve throughput over prior work. Malicious clients are prevented from disrupting broad-casts using a novel blind access control technique that allows servers to reject malformed requests. Spectrum also prevents deanonymization of broadcasters by malicious servers deviating from protocol. Our techniques for providing malicious security are applicable to other systems for anonymous broadcast and may be of independent interest. We implement and evaluate Spectrum. Compared to the state-of-the-art in cryptographic anonymous communication systems, Spectrum’s peak throughput is 4 – 120 , 000 × faster (and commensurately cheaper) in a broadcast setting. De-ployed on two commodity servers, Spectrum allows broad-casters to share 1 GB (two full-length 720p documentary movies) in 13h 20m with an anonymity set of 10 , 000 (for a total cost of about $6.84). These costs scale roughly linearly in the size of the ﬁle and total number of users, and Spectrum parallelizes trivially with more hardware.