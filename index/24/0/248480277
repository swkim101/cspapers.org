Double-fetch bugs are a plague across all major operating sys-tem kernels. They occur when data is fetched twice across the user/kernel trust boundary while allowing concurrent mod-iﬁcation. Such bugs enable an attacker to illegally access memory, cause denial of service, or to escalate privileges. So far, the only protection against double-fetch bugs is to detect and ﬁx them. However, they remain incredibly hard to ﬁnd. Similarly, they fundamentally prohibit efﬁcient, kernel-based stateful system call ﬁltering. Thus, we propose Midas to mitigate double-fetch bugs. Midas creates on-demand snapshots and copies of accessed data, enforcing our key invariant that throughout a system call’s lifetime, every read to a userspace object will return the same value. Midas shows no noticeable drop in performance when evaluated on compute-bound workloads. On system call heavy workloads, Midas incurs 0.2–14% performance overhead, while protecting the kernel against any TOCTTOU attacks. On average, Midas shows a 3 . 4% overhead on diverse work-loads across two benchmark suites.