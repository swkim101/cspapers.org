We study the <tex>$k$</tex>-server problem with time-windows. In this problem, each request <tex>$i$</tex> arrives at some point <tex>$v_{i}$</tex> of an <tex>$n$</tex>-point metric space at time <tex>$b_{i}$</tex> and comes with a deadline <tex>$e_{i}$</tex>. One of the <tex>$k$</tex> servers must be moved to <tex>$v_{i}$</tex> at some time in the interval [<tex>$b_{i}, e_{i}$</tex>] to satisfy this request. We give an online algorithm for this problem with a competitive ratio of <tex>$\text{poly}\log(n, \Delta)$</tex>, where <tex>$\Delta$</tex> is the aspect ratio of the metric space. Prior to our work, the best competitive ratio known for this problem was <tex>$O(k\ \text{poly}\log(n))$</tex> given by Azar et al. (STOC 2017). Our algorithm is based on a new covering linear program relaxation for <tex>$k$</tex>-server on HSTs. This LP naturally corresponds to the min-cost flow formulation of <tex>$k$</tex>-server, and easily extends to the case of time-windows. We give an online algorithm for obtaining a feasible fractional solution for this LP, and a primal dual analysis framework for accounting the cost of the solution. Together, they yield a new <tex>$k$</tex>-server algorithm with poly-logarithmic competitive ratio, and extend to the time-windows case as well. Our principal technical contribution lies in thinking of the covering LP as yielding a truncated covering LP at each internal node of the tree, which allows us to keep account of server movements across subtrees. We hope that this LP relaxation and the algorithm/analysis will be a useful tool for addressing <tex>$k$</tex>-server and related problems.