A hypervisor is system software, managing and running virtual machines. Since the hypervisor is placed at the lowest-level in the typical systems software stack, it has critical security implications. Once compromised, the entire software components running on top of the hypervisor (including all guest virtual machines and applications running within each guest virtual machine) are compromised as well, as the hypervisor has all the privileges to access those. This paper proposes M UNDO F UZZ , a hypervisor fuzzer to enable both coverage-guided and grammar-aware fuzzing. We find that the coverage measurement in hypervisors suffers from noises due to the hypervisorâ€™s asynchronous system event handling. In order to filter out such noises, M UNDO F UZZ develops a statistical differential coverage measurement methods, allowing M UNDO F UZZ to capture the clean coverage information for hypervisor inputs. Moreover, we observe that hypervisor inputs have complex input grammars because it supports many different devices and each device has its own input format. Thus, M UNDO F UZZ learns the input grammar through inspecting the coverage characteristics of the given hypervisor input, which is based on the idea that the hypervisor behaves in a different way if the grammatically correct (or incorrect) input is given. We evaluated M UNDO F UZZ with popular hypervisors, QEMU and Bhyve, and M UNDO F UZZ outperformed other state-of-the-art hypervisor fuzzers ranging from 4.91% to 6.60% in terms of coverage. More importantly, M UNDO F UZZ identified 40 pre-viously unknown bugs (including 9 CVEs), demonstrating its strong practical effectiveness in finding real-world hypervisor