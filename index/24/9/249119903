The security of the entire cloud ecosystem crucially de-pends on the isolation guarantees that hypervisors provide between guest VMs and the host system. To allow VMs to communicate with their environment, hypervisors provide a slew of virtual-devices including network interface cards and performance-optimized VIRTIO-based SCSI adapters. As these devices sit directly on the hypervisor’s isolation boundary and accept potentially attacker controlled input (e.g., from a malicious cloud tenant), bugs and vulnerabilities in the devices’ implementations have the potential to render the hypervisor’s isolation guarantees moot. Prior works applied fuzzing to simple virtual-devices, focusing on a narrow subset of the vast input-space and the state-of-the-art virtual-device fuzzer, Nyx, requires precise, manually-written, speciﬁcations to exercise complex devices. In this paper we present M ORPHUZZ , a generic approach that leverages insights about hypervisor design combined with coverage-guided fuzzing to ﬁnd bugs in virtual device implementations. Crucially M ORPHUZZ does not rely on expert knowledge speciﬁc to each device. M ORPHUZZ is the ﬁrst approach that automatically elicits the complex I/O behaviors of the real-world virtual devices found in modern clouds. To demonstrate this capability, we implemented M ORPHUZZ in QEMU and bhyve and fuzzed 33 different virtual devices (a superset of the 16 devices analyzed by prior work). Additionally, we show that M ORPHUZZ is not tied to a speciﬁc CPU architecture, by fuzzing 3 additional ARM devices. M OR PHUZZ matches or exceeds coverage obtained by Nyx, for 13/16 virtual devices, and identiﬁed a superset