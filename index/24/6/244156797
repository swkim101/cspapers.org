In this paper, we study the multipath routing problem in MPTCP-enable software-defined networks. We have proposed an efficient multipath routing algorithm for creating bandwidth-abundant and flexible future software-defined core networks. Our proposed algorithm will figure out k-least-jointed shortest paths by using conventional k-shortest path algorithm, e.g., Yen's algorithm, incorporating with a greedy algorithm for the path selection. Thanks to that, the algorithm can help to exploit the use of MPTCP while reducing the bottleneck problem that may occur with shared links in the networks. In order to verify the efficiency of our proposal, we have implemented an MPTCP-enable software-defined testbed based on mininet, Ryu controller, and Kali Linux OS and perform numerical experiments to compare the network performance of our approach to traditional MPTCP as well as conventional TCP (without MPTCP). The obtained results confirmed that, by reducing the number of jointed links in the set of selected k-shortest paths, our solution outperforms the traditional MPTCP as well as that of conventional TCP networks.