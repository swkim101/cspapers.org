This talk introduces an ongoing study which began Summer 2021. We emulate proof writing in novice programmers by having them explain their solution to logic puzzles in the first week of an intro course, as this contains many of the skills used in proof writing without requiring any prerequisite knowledge of mathematical structures. An isomorphic question is asked at the conclusion and checked for improvement. We correlate with their performance in the cs class. To ensure that the improvement is related to the cs course material, other factors (prior math courses, GPA et al) are controlled. Computer science majors typically cover material in logic and proof, either as part of programming course, or as a separate computer class. Conventional wisdom would hold that there are a variety of overlapping skill sets between the subject of logic/proof and writing efficient error-free code, and so instructors rely on this intuition to justify introducing (and in fact frequently requiring) this content to introductory programmers. Our study checks for transfer of skills between computer science and proof writing, as no approach to these logic problems is ever directly a part of the content matter in the computer class. Early results of isomorphic questioning from the start and end of the summer quarter indicate a highly statistically significant correlation, even controlling for other factors such as mathematical background and academic strength.