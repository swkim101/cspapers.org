One way to introduce active learning in large introductory computer science courses is for students to solve coding exercises in class. Although it is commonly understood that re-solving a problem after receiving feedback can deepen understanding and improve performance, students often do not have opportunities to make multiple attempts on in-class exercises due to practical classroom constraints in time and logistics. In this experience report, we share the results from our experience with multiple attempts in our CS1 course of 114 undergraduate students. In each of 2 lectures on arrays, students were given two in-class coding problems. The first was a practice problem, where they had either one attempt or two attempts to solve the problem, and the second was a test problem where all students had only one attempt. We measured how having one attempt or two attempts on the practice problem impacted student performance on the test problem. We observed that students who used a second attempt to try re-solving missed practice problems were more likely to succeed on the test problem, even if they missed both tries on the practice problem. This work suggests that, given the right context and tool, multiple attempts on in-class exercises in CS1 might improve student performance.