With the widespread introduction of computer science as a new school subject, programming is experiencing a strong and promising upswing in primary school education. Programming concepts can be taught in a constructive manner, fostering students' precision and algorithmic problem-solving skills. Simultaneously, this form of learning is also inherently challenging and error-prone. During a year-long study, we collected a trace of all failing Logo programs committed in the \xlogo programming environment. Analyzing this data set allows us to confirm that Logo errors follow the same patterns as many other programming languages. In particular, we shed a light on the following three areas of Logo programming: (i) we determine which programming errors occur and their respective frequency, (ii) we verify previous work confirming that a handful of error classes account for the vast majority of all errors committed, and (iii) we highlight that some errors are rooted in deep misunderstandings of programming concepts rather than mere syntactical flaws. A core tenet, we argue, is that whilst errors cannot be eliminated entirely they offer an opportunity for both researchers and pupils alike.