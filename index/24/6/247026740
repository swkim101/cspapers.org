Minecraft is the most downloaded game in the world, with 8-10 million playing every day. We believe there are four primary reasons for this immense popularity: easy communication while creating and playing in worlds together, and encouragement to continue to explore thanks to the achievements they earn. When we look at most programming integrated development environments (IDEs) used in CS education, we see none of these four elements. The purpose of this lightning talk is to advocate for the idea of social interaction and gamification in coding environments. Google Docs provides an idealized model " many people seamlessly working together in the same document, adding comments on what has been written, with an archived "chat" backchannel. IDEs used to teach CS should strive to achieve that level of usability, and some have started to add these features (e.g., repl.it). It's rare, but not unheard of, that multiple users can just as seamlessly interact with the running program. Unfortunately, IDEs that support all of these features make up only a small fraction of those used to teach CS. Finally, let's push for IDEs to add gamification through badges and achievements. These are present in some learning environments (code.org, Khan Academy, CodeCombat, etc.), but they're usually not built into IDEs nor used in standard education. They should be! In summary, adding these "social computing" features can promote learning, collaboration, and enjoyment.