As the number of conversational programmers grows, computing educators are increasingly tasked with a paradox: to teach programming to people who want to communicate effectively about the internals of software, but not write code themselves. Designing instruction for conversational programmers is particularly challenging because their learning goals are not well understood, and few strategies exist for teaching to their needs. To address these gaps, we analyze the research on programming learning goals of conversational programmers from survey and interview studies of this population. We identify a major theme from these learners' goals: they often involve making connections between code's real-world purpose and various internal elements of software. To better understand the knowledge and skills conversational programmers require, we apply the Structure Behavior Function framework to compare their learning goals to those of aspiring professional developers. Finally, we argue that instructional strategies for conversational programmers require a focus on high-level program behavior that is not typically supported in introductory programming courses.