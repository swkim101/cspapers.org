The generalized sorting problem is a restricted version of standard comparison sorting where we wish to sort <tex>$n$</tex> elements but only a subset of pairs are allowed to be compared. Formally, there is some known graph <tex>$G=(V, E)$</tex> on the <tex>$n$</tex> elements <tex>$v_{1, \ldots, v_{n}}$</tex>, and the goal is to determine the true order of the elements using as few comparisons as possible, where all comparisons (<tex>$v_{i, v_{j}}$</tex>) must be edges in <tex>$E$</tex>. We are promised that if the true ordering is <tex>$x_{1 < x_{2} < \cdots < x_{n}}$</tex> for <tex>$\{x_{i\}}$</tex> an unknown permutation of the vertices <tex>$\{v_{i\}}$</tex>, then <tex>$(x_{i, x_{i+1})\in E}$</tex> for all <tex>$i$</tex>: this Hamiltonian path ensures that sorting is actually possible. In this work, we improve the bounds for generalized sorting on both random graphs and worst-case graphs. For Erd≈ës-Renyi random graphs <tex>$G(n, p)$</tex> (with the promised Hamiltonian path added to ensure sorting is possible), we provide an algorithm for generalized sorting with an expected <tex>$O(n\ \text{lg}(np))$</tex> comparisons, which we prove to be optimal for query complexity. This strongly improves over the best known algorithm of Huang, Kannan, and Khanna (FOCS 2011), which uses <tex>$\tilde{O(\min(n\sqrt{np},\ n/p^{2}))}$</tex> comparisons. For arbitrary graphs <tex>$G$</tex> with <tex>$n$</tex> vertices and <tex>$m$</tex> edges (again with the promised Hamiltonian path), we provide an algorithm for generalized sorting with <tex>$\tilde{O(\sqrt{mn})}$</tex> comparisons. This improves over the best known algorithm of Huang et al., which uses <tex>$\min(m,\tilde{O}(n^{3/2}))$</tex> comparisons.