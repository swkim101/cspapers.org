Let M be a parallel RAM with p processors and arithmetic operations addition and subtraction recognizing <italic>L</italic> ⊂ <italic>N<supscrpt>n</supscrpt></italic> in t steps. Then <italic>L</italic> can be recognized by a (sequential!) linear search algorithm (LSA) in &Ogr;(<italic>n</italic><supscrpt>4</supscrpt>(log(<italic>n</italic>) + <italic>t</italic> + log(<italic>p</italic>))) steps. Thus many n-dimensional restrictions of NP-complete problems (binary programming, traveling salesman problem, etc.) and even that of the uniquely optimum traveling salesman problem, which is Δ<supscrpt><italic>P</italic></supscrpt><subscrpt>2</subscrpt>-complete, can be solved in polynomial time by an LSA. This result generalizes the construction of a polynomial LSA for the n-dimensional restriction of the knapsack problem previously shown by the author, and destroys the hope of proving nonpolynomial lower bounds for any problem which can be recognized by a PRAM as above with 2<supscrpt>poly(n)</supscrpt> processors in poly(n) time.