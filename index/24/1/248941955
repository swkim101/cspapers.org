Symbolic execution and fuzz testing are effective approaches for program analysis, thanks to their evolving path exploration approaches. The state-of-the-art symbolic execution and fuzzing techniques are able to generate valid program inputs to satisfy the conditional statements. However, they have very limited ability to explore the finite-state-machine models implemented by real-world programs. This is because such state machines contain program-state-dependent branches ( state-dependent branches in this paper) which depend on earlier program execution instead of the current program inputs. explore state-dependent branches. state-dependent in their arbitrary state-dependent branches a of dependency between current program and inputs in class of important programs. Ferry , symbolic execution engine by recognizing program exploring state-dependent different programs the comprehensive dataset Google higher and branch