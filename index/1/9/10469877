‘Highly interactive’ applications enable human users to interact with the application using direct manipulation input devices like mice, joysticks, body-position sensors etc. A class of such applications, synchronous groupware, such as distributed virtual environments, collaborative design, and multi-player games, also permit distributed users to interact with each other at the same time. Another class is virtual reality, which can be single or multi-user. A common theme of these applications is the need to provide quick response time despite scarcity of resources. Consequently, to make application development easier, many systems have been proposed which manage these resources on behalf of the application. However, there are no workloads for realistic evaluation of such systems, to see if they provide appropriate responsiveness, and at what cost. This paper describes a general approach towards designing such workloads. In synchronous groupware, collaboration or competition between users is enabled by shared data that is read and written by the users. Therefore, this shared data is one of the resources that needs to be managed so as to provide appropriate responsiveness. By responsiveness we mean both the time taken to see the response of an action on the data by the same user (response time or RT), and the effect of that action seen by a different user (user to user time or UUT). Another important goal for designers of algorithms managing this shared data is to support ‘scaling’, i.e. the users could be widely distributed, and/or there could be a potentially large number of users. Providing appropriate RT and UUT is difficult when groupware is deployed in a wide-area distributed environment like the Internet, where high communication latencies are common. Direct manipulation user interfaces can require response times of about looms, for example, manipulating something by dragging the mouse. However, due to the fundamental limitation of the speed of light, the round-trip delay to the far side of the planet is at least 200ms. Various data management algorithms and systems have been developed that claim to satisfy the scale requirements of groupware, while providing appropriate responsiveness. They range from centralized data, to replicated data with various replica consistency algorithms [2].