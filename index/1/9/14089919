This paper shows how to substantially increase the performance of Smalltalk programs by creating more classes to take advantage of polymorphism. An improved implementation of the well-known message match:, using this and other techniques, can run up to twice as fast as the current inlined implementation VisualWorks Smalltalk includes. In this particular case, creating more classes is shown to be so powerful as to become preferable to heavy use of identity checks on immediate objects by a margin of up to 20% on average. In addition, non-inlined implementations compare quite well to the existing inlined implementation of match:. While they can run faster in some cases, their overall performance falls behind by no more than a factor of 2.This is a quick summary of chapter 3 from the book currently being written by the author. It is due to be published in 2007.