To date, program development environments have been static rather than dynamic. Even emerging interactive, integrated program development environments, like the Cornell Program Synthesizer, view program editing and execution as essentially independent activities. We envision an even more dynamic environment in which the functionality (input/output relationship) of a network of programs, an individual program, or a program segment can be viewed “continuously” with editing changes to either the program input or program body. This is the VisiCalc concept extended to program development environments (VisiProg). In this paper, this “dynamic” approach to program development, testing and debugging is addressed, and considerations for the user interface are discussed. The latter includes a workstation with a flexible windowing system, three-dimensional views of programs, insertion of program control and observation points, and dynamic program slicing for “viewing” program execution. An existing prototype and current development activities are also discussed.