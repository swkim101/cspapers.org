The complexity of automotive software systems continues to increase at a dramatic pace. Traditionally, the interactions between the various software components of a vehicle are addressed only at the later stages in the overall development process. We advocate a fresh approach, where interaction patterns become the defining elements of automotive software services. This shifts the development focus from individual components to their interaction in the early stages of the development process; potentially reducing development and integration costs for both manufacturers and suppliers. We present a formal service notion based on interaction patterns and introduce a systematic, service-oriented development process, substantiated by means of a corresponding tool chain. We illustrate our definitions and results by modeling elements of a Central Locking System, an example from the automotive domain.