This paper is a design overview document, intended to aid in the implementation of an integrity-lock database management system. The authors believe that the paper is a realistic overview of the changes that need to be made to a commercial database management system in order that may support the integrity-lock architecture. The paper examine the integrity-lock retrofit at a high level of abstraction. In particular it concentrates on changes that need to be made at the process level and in terms of the functionality that needs to reside in the various functions. It hoped that this high level view will aid in the portability of the integrity-lock architecture to other systems. While the authors' work has involved retrofitting the integrity-lock onto a specific system, we believe that many of the lessons learned in this exercise can be applied to other commercial database management systems.