Pair programming is a practice in which two programmers work together at one computer, collaborating on the same design, algorithm, code or test. Studies have shown that collocated pair programmers produce higher quality code in essentially the same amount of time as solo programmers. Additional benefits include increased job satisfaction, improved team communication, and efficient tacit knowledge. However, important questions arise: How effective is pair programming if the pairs are not physically next to each other? What if the programmers are geographically distributed? An experiment was conducted at North Carolina State University (NCSU) to compare the different working arrangements of student teams developing object-oriented software. Some teams were collocated and others were in distributed environments; some teams practiced pair programming while others did not. An initial feasibility study was conducted in early fall 2001 between NCSU and The University of North Carolina-Chapel Hill (UNC-CH) to determine an effective technical platform to allow remote teaming. Two pairs of programmers collaborated over the Internet to develop a modest Java gaming application. Each pair was composed of one programmer from NCSU and one from UNC-CH. From this study, we found that effective remote teaming could be done with the desktop sharing software (Net Meeting) and audio support via headsets and microphones. They also used instant-messaging software like Yahoo Messenger while implementing the project. The students were ~rnished Intel digital cameras to use as web cams for videoconferencing, to allow them to see each other or to show paper design documents to each other. However none of these teams found the need to use the web cams. A typical session involved two pair programmers sharing desktops, with one of the pair (the navigator) having read-only access while the other (the driver) actually edited the code. The changes made by the driver were seen in real time by the navigator, who was constantly monitoring the driver's work. The navigator could communicate with the driver by speaking over the microphone, or via instant messaging. Using the feedback from the pilot experiment, a formal experiment was conducted in the fall 2001 semester on a graduate class of 132 students at NCSU. The students completed an object-oriented team project as a part of the course entitled "Object-Oriented Languages and Systems". The entire class was divided into four categories of teams: Copyright is held by the author/owner(s). 1. Collocated team without pairs (9groups) The first set of teams developed â€¦