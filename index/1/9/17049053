It is difficult to ensure consistency between a program's design and its implementation. An embedded design language (one superimposed on an implementation language) can help. This paper describes a particular embedded design language that was successfully used to design and implement a very large compiling system. This design language has a rich set of constructs for expressing the high-level and detailed designs of a program. It also supports various levels of design and implementation consistency checking, and the generation of a variety of documents for use by programmers and reviewers.