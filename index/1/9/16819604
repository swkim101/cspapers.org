1. PROBLEM STATEMENT Internet Traffic Engineering (TE) is a very important research topic for production networks, where TE is typically formulated into minimizing the maximum link utilization (MLU). For example, with increasing IPv6 traffic, the backbone network of CERNET2[1] is suffering big traffic pressure on some critical longhaul links under the traditional shortest-path routing. Taking CERNET2 as an example, we develop a practical and costeffective intra-domain TE method in this paper. Existing intradomain TE proposals, such as MPLS-based proposal [2], OpenFlow-based proposal [3] and reactive-TE proposal [4], need to make great modifications to routers, and even have to replace existing routers with brand new routers, which makes the deployment be very high-cost. Other TE proposals, such as the work [5], optimize OSPF weights for the goal of TE. Although these methods have low deployment cost, they need to frequently change OSPF weights based on dynamically changed traffic matrices. Each change to OSPF weights may lead to transient routing loops or traffic disruption. Frequent routing loops or traffic disruption is intolerable for network operators. Therefore, in this paper, we propose a new intra-domain TE method named CTE. CTE works in an OSPF/IS-IS network, where shortest-path routing is run. The core idea of CTE is to use loop-free next hops [7] to route some traffic, which is realized by configuring some static routes and some access control list (ACL) rules. CTE does not make any modifications to existing routers. We only need to develop a remote control program that can configure static routes and ACL rules on routers. In addition, CTE can be incrementally deployed. We now use an example to illustrate how CTE works. Figure 1 is a network topology composed a set of nodes and a set of links. The lowercase letters beside a node denote the prefixes associated with the node. We suppose that the capacity of each link is 100 units and the weight of each link is 1. We give the shortest-path tree towards the destination F as shown in Figure 2. In Figure 2, the solid arrows direct the next hops towards the destination F and the dash lines will not be used by the traditional shortest-path routing towards the destination F. Table 1 shows a prefixgranularity traffic matrix. Table 2 shows the corresponding nodegranularity traffic matrix. Under this traffic matrix, the MLU A F