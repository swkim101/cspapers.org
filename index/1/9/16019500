Current database languages based on Horn clausea and the bottom-up model of computa- tion, such aa LDL and DataJog, are not as expreesive as Prolog. For example, such languages do not sup- port schema and higher-order predicates in an inte- grated framework but rely on a separate language to specify the schema information and on evaluable pred- icatea for expressing higher-order information. Prolog on the other hand while providing powerful features does so in only a procedural settiag. Caught between a rock and hard place we ask whether a Horn clause language can be designed which provides most if not all of the power of Prolog in a declarative framework. In this paper we start with a simple logic programming language in which the central notion is that of an ob- ject and an expression. We build upon these simple constructs and show that the resulting language has the power of DataIog and a bottom-up semantics. We then successively increase t6e expressive power of the language to subsume LDL in the sense that we can support sets, stratified negation, and updates to base relations. Finally, we show that our language can sup- port meta, schema and higher-order constructs in an integrated, consistent and clean framework.