In this paper we study the need for multidimensional separation of concerns in architecture representations, including architecture-centered software development. We present a case study of a simple video surveillance system, describe its software architecture using an ADL called Wright, and we discuss the pragmatics and problems in the use of ADLs in general, compared to a concern-based approach to software architecture description. Our position is that current ADLs provide architectural abstractions that need to be extended to achieve the major goals of software architecture. Furthermore, in order to cover all concerns of importance in a software architecture description, software architects must be able to separate various dimensions of concern and consider the system from multiple perspectives simultaneously.