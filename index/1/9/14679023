We present a cache-oblivious algorithm for computing single-source shortest paths in undirected graphs with non-negative edge lengths. The algorithm incurs O(√(<i>nm</i> log <i>w</i>)/B+(<i>m</i>/B) log <i>n</i> +MST (<i>n, m</i>)) memory transfers on a graph with <i>n</i> vertices, <i>m</i> edges, and real edge lengths between 1 and <i>W</i>; <i>B</i> denotes the cache block size, and MST(<i>n, m</i>) denotes the number of memory transfers required to compute a minimum spanning tree of a graph with <i>n</i> vertices and <i>m</i> edges. Our algorithm is the first cache-oblivious shortest-path algorithm incurring less than one memory transfer per vertex if the graph is sparse (<i>m</i> = <i>O</i>(<i>n</i>)) and <i>W</i> = 2°<sup>(<i>B</i>)</sup>.