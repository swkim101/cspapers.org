In order to maximize system performance in environments with fluctuating memory contention, memory-intensive algorithms such as hash join must gracefully adapt to variations in available memory. Mixed workloads, creating fluctuations of erratic frequency and magnitude, make responsiveness to memory contention particularly important. Previous studies on adaptable hash joins have focused on lowering I/O costs by reducing the I/O volume, as measured in the number of pages, by spilling partitions from memory to disk and then restoring them into memory if more memory becomes available. In this paper, we present memory-contention responsive hash joins that (i) reduce the amount of time spent on I/O by using large I/O buffers, or clusters, (ii) dynamically vary the cluster size in response to fluctuations in memory availability, and (iii) employ earlier techniques of dynamic destaging and restoration. Our simulation results demonstrate that these combined techniques provide better performance than previous algorithms, particularly in environments with medium to high memory contention or with very frequent changes in memory availability.