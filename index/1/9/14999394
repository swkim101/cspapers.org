The current database research trend 1s towards systems whrch can deal with advanced data apphcatrons that go beyond the standard “enterprise” or “office” database apphcatron This trend 1s reflected m the research on extension architectures [5,18,21] and obJect-oriented databases [2,3,12,21] Along wrth thus trend, the need for better and easier-to-use database end-user Interfaces has been stressed [18,21] Therefore, we propose a graph-based data model, which shares many features wrth exrstmg data models, but which better facrhtates the rigorous study of graphical database end-user interfaces Graphs have been an integral part of the database design process ever since the mtroductron of semantic data models [11,12] Therr usage m data mampulatron languages, however, IS far more sparse To deal wrth data mampulatron, typically, schemes m semantrc data models are transformed mto a conceptual data model such as the relatronal model [19] The required database language features then become those of the conceptual model CbJectoriented data models, on the other hand, often offer computational complete, non-graphical data languages, usually m the style of object-oriented programmmg languages such as Smalltalk Due to their expressrveness, however, these language do not lend themselves easily as high-level data languages [2,21] The first graphical database end-user interfaces were developed for the relational model (for example Zloof’s Query-By-Example (QBE) [22])