1. Introduction Kildall [1] has recently developed lattice theoretic techniques for solving many data flow analysis problems. It is the purpose of this paper to demonstrate that many of the loop optimization such as 'code motion' and induction variables detection can be done efficiently and in great generality by essentially the same lattice theoretic techniques. We shall use the usual model for a program being subjected to code improvement , the flow graph G = (N,E, no) , where N is a set of nodes, E is a set of edqes and no c N is the initial ~. There is a path from n ~ to each node in N. The nodes represent straight line blocks of code. There is an edge from nl to n2 if '2 can immediately follow n 1 in a possible execution of the program. The notion of a loop in a flow graph may be modeled by a reqion R = (N1,E1,nl) which is a set of nodes N , and edges E 1 1 with a header node nl having the property that every path from the initial node to a node in R passes through nl. Various loop optimization techniques such as " code motion " or induction variables (see [2,3,7] e.g.) make use of functions relating ififor-mation at the entry of a region to the information at the nodes of the region. This idea can be generalized to lattices as developed by Kildall.. We shall use the following formulation of Kildall's ideas. Definition: A data flow analysis frame-—— work is a pair D = (L,F) where (i) L is a semilattice with meet A and zero element Q, satisfying the bounded-ness condition (Vx8L)(Hk) (xl <x2<... <x =x implies n<k) n where y<z is shorthand for yA z = y and y<z means y~z and y#z. (ii) F is a set of functions from L to L (morphisms) on L) closed under composition and meet, having an identity (denoted by e) and satisfying the distributivity condition (Vf CF)(Vx,ye L)(f(x Ay) = f(X) A f(y)). (iii) For each xc L, there exists f E F such that x = f(~). Intuitively, the lattice elements .,. represent information which might be known about data at entrance to some block of a flow graph, and F represents the set of transformations on this information that could be effected by portions of a program (basic …