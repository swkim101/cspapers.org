This paper presents a methodology for the design and verification of a class of real-time systems frequently encountered in applications of digital control. These methodologies are described in the form of a design and informal verification of a system used for navigation control of airborne vehicles. The high reliability standards required for such tasks suggest the use of fault-tolerant hardware and software. A design is presented for both an abstract version of the system running in an ideal environment and for a version running in a non-ideal fault-prone one. A specification language for real-time systems is developed as an extension of the programming language PASCAL, that provides for concise and clear system descriptions while preserving the degree of efficiency and portability needed to qualify as a practical high-level system implementation language. An informal verification of both designs is given.