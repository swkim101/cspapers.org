This paper presents pipeline iteration, an approach that uses output from later stages of a pipeline to constrain earlier stages of the same pipeline. We demonstrate signiﬁcant improvements in a state-of-the-art PCFG parsing pipeline using base-phrase constraints, derived either from later stages of the parsing pipeline or from a ﬁnite-state shallow parser. The best performance is achieved by reranking the union of un-constrained parses and relatively heavily-constrained parses