Kenneth L. Clarkson Stanford University §1 I n t r o d u c t i o n We present algorithms for solving the geometric minimum spanning tree problem: Given a set of n points hi d-dimensional space, find a minimum spraining tree for the complete weighted graph G dcfined by these points. The graph G has n vertices, each vertex identified with a point, with the weight of an edge given by the distance between the two points deffining tha t edge. This problem has many applications, including wire routing, statistical pa t tern classification, and heuristics for the traveling salesman problem. It is in fact a ftunily of problems, depending on the dimension and on the distance measure used to determine the edge weights. Three khlds of algorithms will be described: *For the planar case (d = 2), with the Ll (Manhattan} metric used for the distance between points, an algorithm will bc described having nearly linear expected time, for independently indcntically distr ibuted random points with an (unknown) underlying distribution from an extremely broad class. The "nearly linear" time mentioned above mcans that the algorithm requires linear expected tinm for all stcps except the last. That step requlrcs that disjoint sets be maintained [Tar], with n unions ea, d m = O(n) Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. © 1984 ACM 0-89791-133-4184/004/0342 $00.75 thxds, requiring O(n~(m, n)} time in the worst case, where a (m, n) grows extremely slowly. ,For the Li distance measure, a class of approximation algorithms will be presented having a runifing time of O (n(c~(m, n)--I-load1 (1/£) log e)), where w$ = O(n), to find a spanning tree with weight less than 1 + e of the minimum spanning tree weight. Herc 6 is the ratio of the distance between the faxthest pair of input points to the distance between the closest pair. The space required is OCn(logC1/e ) + log6)}. The constant factor in the bound depends on d. ,A class of approximation algorithms will be described for d = 3 and the L2, or Euclidean, distance. These algorithms require O(n(log n+(1/e) log 6)) time, with a space bound of O (n log 6). For the plazmx Manhat tan case, algorithms requiring O(nlogn) time in the worst case have been known for some time [SH][LWl. These Mgorithms require t h e construction of the Voronoi diagrasn for the Ll metric, arid do not generalize to fast algorithms for d > 2. Yao [Yao] has described a reduction from the geometric minimum spazming tree problem to the geographic neighbor problem, and Guibas mid Stolfi [GS] have recently found an O(nlogn) algorithm for the Li pla. nar case, using this reduction. The algorithms we will describe use neither of these approaches, nor the "spiral search" teclmique described by Bentley, Weide, and Yao [BWY] that has an O(nloglogn) expectedtime bound mtdcr much more restrictive conditions. (This bound was recently improved to the nc'axly linear time O(nlog* n), with the general mildmunt spanning tree algorithm of Fredman said Taxjan [FT], and to O(no~(rn, n)) expected time, using a bucket sorting algorithm [C2].) The complexity bounds given assume that thc floor, logarithm, and bitwisc exclusiveor fmlctions axe available at unit cost. For the general L1 case, quite recently Bentley, Gabow, said Tarjmt [BGT] have found algorithms requiring