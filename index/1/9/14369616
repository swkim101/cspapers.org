Software engineering education and practice are currently undergoing extensive re-evaluation and analysis in the light of new object-oriented software development techniques as the complexity of software development is rapidly increasing. There is a growing recognition that software reuse can contribute to increased productivity, and the programming paradigm that best supports software reuse is the object-oriented paradigm. Component-based software engineering is currently best facilitated by the object-oriented approach through reuse of available class libraries and application frameworks. We present a comparative analysis of the procedural and object-oriented paradigm from a pedagogic perspective, and show that object-oriented techniques are a logical progression of the well tested structured methodologies. We show that the object-oriented methodology better addresses the fundamental concepts and processes defined in the ACM/IEEE Computing Curricula '91.