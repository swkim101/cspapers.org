Two-phase commit techniques to achieve atomicity of transactions in distributed database systems have been widely presented in the past. Less attention in comparison with this technique has been payed to the problem of "cold restart". To this problem we present a solution which has as its main properties:- low communication overhead and only partial cooperation between transaction managers during normal operation of the distributed system are required when making provisions to cope with cold restart,- a globally uniform total order of local checkpoints is continuously constructed and always present, thus speeding up situations of cold restart,- certain nodes of the network have an a priori chance to decide, whether they need to be restarted and in some cases may be relieved from parsing their logs during restart.This all together leads to a solution for the problem of cold restart which essentially differs from so far presented approaches.