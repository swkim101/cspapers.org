We pose a query problem about the behavior of a consultation system <italic>S</italic>: given a constraint formula <italic>q</italic> and a potential conclusion <italic>c</italic> for <italic>S</italic>, determine if there is a user input binding that satisfies <italic>q</italic> and causes <italic>S</italic> to conclude <italic>c</italic>. Existing rule-based expert systems, both forward and backward chaining[3], implement a consultation mechanism <italic>S</italic>, but are not designed for these queries <italic>about S</italic>. For general production systems, the queries are undecidable. Here we solve the problem for useful sublanguages of acyclic production systems.
We implement a query tool in a Datalog + constraints framework, and optimize for “embedded decision trees” in the rule system. Our data complexity is &THgr;(<italic>n</italic>·ƒ(<italic>n</italic>)) in the size of the embedded trees, versus &THgr;(<italic>n</italic>·ƒ(<italic>n</italic>) + <italic>n</italic><supscrpt><italic>2</italic></supscrpt>) for existing datalog evaluation algorithms, where ƒ(<italic>n</italic>) is the cost of destructively conjoining a constraint of unit size into a conjunction of <italic>n</italic> constraints.