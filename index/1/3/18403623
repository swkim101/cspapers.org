This paper presents two queueing network models which correspond to different implementations of the lock management algorithm for concurrent transaction processing in a database system. These models are developed to investigate the effects of varying the granularity of locks and the degree of multiprogramming on the performance of a database system. A numerical example is presented for a set of apparently realistic parameters and its results are discussed. In addition to other conclusions, these results also confirm the result of Ries and Stonebraker, using a simulation model [9], that a relatively coarse granularity is sufficient to allow enough parallelism for efficient resource utilization. In contrast with simulation models, the queueing network models presented in this paper allow us to examine more closely the cause-effect relationships of concurrent transaction processing in a database system at less cost.