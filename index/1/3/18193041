We show that we can maintain up to polylogarithmic edge connectivity for a fully-dynamic graph in <italic>\tilde O(\sqrt{n})</italic> time per edge insertion or deletion. Within logarithmic factors, this matches the best time bound for 1-edge connectivity. Previously, no <italic>o(n)</italic> bound was known for edge connectivity above <italic>3</italic>, and even for <italic>3</italic>-edge connectivity, the best update time was <italic>O(n^{2/3})</italic>, dating back to FOCS'92.
Our algorithm maintains a concrete min-cut in terms of a pointer to a tree spanning one side of the cut plus ability to list the cut edges in <italic>O(\log n)</italic> time per edge.
By dealing with polylogarithmic edge connectivity, we immediately get a sampling based expected factor <italic>(1+o(1))</italic> approximation to general edge connectivity in <italic>\tilde O(\sqrt{n})</italic> time per edge insertion or deletion. This algorithm also maintains a pointer to one side of a min-cut, but if we want to list the cut edges in <italic>O(\log n)</italic> time per edge, the update time increases to <italic>\tilde O(\sqrt{m})</italic>.