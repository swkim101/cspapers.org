In this paper we investigate extensions of dynamic logic tailored towards handling concurrent programs, with or without communication. The basic version of concurrent dynamic logic, CDL, is a natural extension of regular DL, and is shown to possess most desirable properties of DL. We further explore its relationships with the Î¼-calculus, DL with recursive procedures and PTIME, strengthening natural connections between concurrency, recursion and alternation.
Communication is introduced into the program schemes of CDL by means of channels and shared variables. The effects of these mechanisms on issues of expressiveness and decidability are investigated. In general, we find that both respects are dominated by the extent to which the capabilities of synchronization and (unbounded) counting are enabled in the system. Connections with actual concurrent languages such as CSP are discussed on the first-order level.