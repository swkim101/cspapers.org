Gone are the days that implementing a programming language meant writing a batch compiler and possibly a debugger. Many programmers now expect that a language is supported in an IDE with a large set of IDE services such as semantic highlighting, content assist, graphical debugging, and refactoring. Fortunately, modern IDEs are open and provide APIs so that rich IDE services can be implemented for arbitrary languages. Unfortunately, even with these open APIs, very few language implementers actually know how to implement these IDE services. As a result, many language implementers either ignore IDEs completely, hack in rudimentary IDE support, or build more polished IDE services through the very expensive process of trial and error. This situation ensures that only the most popular and established languages are fully supported in IDEs, which discourages language diversity and experimentation. The WIDE workshop will bring together practitioners and researchers who are active in or have experience in IDE language support. By sharing and discussing techniques in this field, we can improve our own efforts by (a) not independently repeating each othersâ€™ mistakes and (b) learning what others have already discovered. Hopefully, our discussion will help to transform the black-art of crafting IDE language support into a more established engineering that is well documented and eventually taught in compiler courses. At the very least, we can make contacts and form a small community around this very important field.