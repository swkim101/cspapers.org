We obtain a new fully dynamic algorithm for maintaining the transitive closure of a directed graph. Our algorithm maintains the transitive closure matrix in a total running time of <i>O</i>(<i>mn</i>+ (<i>ins</i> + <i>del</i>)Â·<i>n</i><sup>2</sup>), where <i>ins</i> (<i>del</i>) is thenumber of insert (delete) operations performed. Here <i>n</i> is the number of vertices in the graph and <i>m</i> is the <i>initial</i> number of edges in the graph. Obviously, reachability queries canbe answered in constant time. The space required by the algorithm is <i>O</i>(<i>n</i><sup>2</sup>). Our algorithm can also support path queries. If <i>v</i> is reachable from <i>u</i>, the algorithm can produce a path from <i>u</i> to <i>v</i> in time proportional to the length of the path. The best previously known algorithm for the problem is due to Demetrescu and Italiano [3]. Their algorithm has total running time of <i>O</i>(<i>n</i><sup>3</sup> + (<i>ins</i> + <i>del</i>).<i>n</i><sup>2</sup>). The query time is also constant. We also present an algorithm for directed acyclic graphs (DAGs) with a total running time of <i>O</i>(<i>mn</i> + <i>ins</i>.<i>n</i><sup>2</sup> + <i>del</i>). Our algorithms are obtained by combining somenew ideas with techniques of Italiano [7], King [8], King and Thorup [10] and Frigioni <i>et al</i>. [4]. We also note that ouralgorithms are extremely simple and can be easily implemented.