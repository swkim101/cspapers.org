We consider the problem of maintaining an (approximately) minimum vertex cover in an n-node graph G = (V,E) that is getting updated dynamically via a sequence of edge insertions/deletions. We show how to maintain a (2 + ǫ)-approximate minimum vertex cover, deterministically, in this setting in O(1/ǫ) amortized update time. Prior to our work, the best known deterministic algorithm for maintaining a (2 + ǫ)-approximate minimum vertex cover was due to Bhattacharya, Henzinger and Italiano [SODA 2015]. Their algorithm has an update time of O(log n/ǫ). Recently, Bhattacharya, Chakrabarty, Henzinger [IPCO 2017] and Gupta, Krishnaswamy, Kumar, Panigrahi [STOC 2017] showed how to maintain an O(1)-approximation in O(1)-amortized update time for the same problem. Our result gives an exponential improvement over the update time of Bhattacharya et al. [SODA 2015], and nearly matches the performance of the randomized algorithm of Solomon [FOCS 2016] who gets an approximation ratio of 2 and an expected amortized update time of O(1). We derive our result by analyzing, via a novel technique, a variant of the algorithm by Bhattacharya et al. We consider an idealized setting where the update time of an algorithm can take any arbitrary fractional value, and use insights from this setting to come up with an appropriate potential function. Conceptually, this framework mimics the idea of an LP-relaxation for an optimization problem. The difference is that instead of relaxing an integral objective function, we relax the update time of an algorithm itself. We believe that this technique will find further applications in the analysis of dynamic algorithms. University of Warwick, Coventry, UK. Email: S.Bhattacharya@warwick.ac.uk Microsoft Research, Redmond, USA. Email: janardhan.kulkarni@gmail.com