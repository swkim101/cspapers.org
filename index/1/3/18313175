The Interactive Data Base Designer (IDBD) assumes as input a conceptual description of data to be stored in the data base (in terms of a binary data model) and an expected workload in terms of navigations in the conceptual model. Extensive checking of input is performed. The designer has the possibility to restrict the solution space of the design algorithm by prescribing implementation strategies for parts of the binary model. 1. Chalmers University of Technology, S41296 Gothenburg, Sweden 2. University of Stockholm, S-10691 Stockholm, Sweden 8. This work has been supported by the National Swedish Board for Technical Development Proceedings of the Eighth International Conference on Very Large Data Bases Before we can design a data base schema, compatible with some existing Data Base Management System, we have to determine what kind of data it should contain and what kind of work-load, in terms of queries, updates, inserts and deletes it must be able to handle. In order to permit examination of alternative solutions the requirements must be stated in as implementation independent terms as possible. By 'implementation independent' we mean that there have been made no decisions on how to group data items in records, which access techniques to use and how to navigate in a structure of records and sets. Designing a data base is thus only a (relatively small) part of a systems development process. It is preceded by a number of activities the purpose of which is to analyze corporate information needs and to specify the requirements of an information system to be developed. The Interactive Data Base Designer (IDBD) presented in this paper has been developed to be compatible with two kinds of system design (philosophies) approaches. The first kind, the analytical approach, proceeds through development phases like goal and problem analysis activity analysis etc. and arrives at a comprehensive set of requirements specifications. This set also includes a conceptual information model of relevant parts of the enterprise and a set of information requirements [Bub-801. The conceptual information rode1 (CIM) describes and defines relevant phenomena (entities, relations, events, assumptions, inference rules etc.) of the Universe of Discourse (UoD). The CIM models the UoD in an extended time 108 Mexico City, September, 1982 perspective in order to capture dynamic rules and constraints. The next step in this approach is to 'restrict' the CIM (from a time perspective point of view) and to decide what information to store in the data base and how to conceptually navigate in this set of information in order to satisfy stated information requirements (see Gus-82 for a comprehensive exposition of this problem). If the information to be stored in the data base is defined in terms of a binary data model and the conceptual navigations are specified assuming such a model then this is the required input to IDBD. The other approach to data base design is the experimental one. In this case we assume that a 'fast prototype' is developed by the use of the CS4 system [Ber-77A]. CS4 employs a binary data model and is thus compatible with IDBD. Experimental use of the prototype system can provide us with statistics of navigation types and frequencies. It is, of course, also advantageous to use the experimental approach as a complement to the purely analytical one in order to avoid guesswork concerning the requirements and the work-load. The DBTG-schema design algorithm of IDBD has the binary data model and a set of implementation strategies in common with design-aids developed at the University of Michigan [Mit-75, Ber-77B, Pur-791. It differs, however, from them in several important respects the tool is interactive which gives the designer a possibility to monitor the design process comprehensive checking of the consistency of input data is performed (we have empirically found that it is difficult to supply a tool of this kind with correct input the first time; a waste of time and computer resources is the result of optimizing incorrect input) the designer has a possibility to prescribe certain implementation alternatives for parts of the model (or the whole model). This has the following advantages the designer can test his/hers own solution alternatives which may be 'natural' or which have other, preferred, non-quantifyable properties unnormal or *non-sensesolutions can be avoided Proceedings of the Eighth International Conference on Very Large Data Bases + + the tool can be used to augment an existing DB-schema the solution space can be drastically reduced thereby making IDBD a realistic tool also for design of large, complex data base schemata the description of the work-load is practically realistic as navigation in the conceptual binary model can be defined. This paper describes and explains IDBD in terms of running a small sample case. Section 2 describes the input to IDBD the conceptual binary data model and how to describe the work-load in terms of navigating in the model. User interaction, checking of input and how to supply IDBD with design directives is presented in section 3. The design algorithm and the results of performing a design run are given in section 4.