A new method, called behavior sampling, is proposed for automated retrieval of reusable components from software libraries. Unlike other retrieval methods, behavior sampling exploits the property that distinguishes software from other forms of text - its executability. Basic behavior-sampling identifies relevant routines by executing library routines on a searcher-supplied sample of operational inputs and comparing the routines' output to output provided by the searcher. The probabilistic basis for behavior sampling is described, and experimental results are reported that suggest basic behavior-sampling exhibits high precision (percentage of retrieved components that are relevant). Extensions to basic behavior-sampling are proposed to improve its recall (percentage of relevant components retrieved) and to make behavior sampling applicable to the retrieval of abstract data types.