A large volume of facts are available on the Web and manually extracting these facts is time consuming and often impractical. Example extraction tasks include compiling a list of scientists, a list of a company’s acquisitions, etc. Unless such lists have already been compiled and made available on the Web, one has to query a search engine, examine the pages returned, and extract a handful of instances from each page. Consider the case of extracting researchers; many bona fide names are not referred to as researchers. Instead, they are often coined as scientists, experts, professors, etc. If only the term “researchers” is used in the query, many qualified instances will not be extracted. We demonstrate DeWild, a domain independent system for searching and data extraction on the Web. A search in DeWild is expressed using a simple query with some wild cards, and the result of a query is a ranked list of rows that match the wilds cards. For instance, given the query “Oracle acquired %”, the output is expected to be a ranked list of companies that were purchased by Oracle, preferably the real Oracle acquisitions ranked the highest. One type of wild card in DeWild is an extractor. An extractor is used to indicate a probable position of desired data that needs to be extracted. Another type of wild card, used for query relaxation, can indicate terms that are semantically similar to the given one should also be considered. For instance, the wild card can specify that words similar to “researchers” (e.g. scientists) should be part of the search. Building a unified query interface for a large number of extraction tasks is challenging. A problem with phrase queries, especially long ones, is that they can retrieve very few or no matches. Query relaxation techniques (e.g. [2]) are not generally applicable to phrase queries. DeWild uses an online