GSAT is a randomized local search procedure for solving propositional satisfiability problems. GSAT can solve hard, randomly generated problems that are an order of magnitude larger than those that can be handled by more traditional approaches, such as the DavisPutnam procedure. This paper presents the results of numerous experiments we have performed with GSAT in order to improve our understanding of its capabilities and limitations. 
 
We first characterize the space traversed by GSAT. We will see that for nearly all problem classes we have encountered, the space consists of a steep descent followed by broad flat plateaus. We then compare GSAT with simulated annealing, and show how GSAT can be viewed as an efficient method for executing the lowtemperature tail of an annealing schedule. Finally, we report on extensions to the basic GSAT procedure. We discuss two general, domain-independent extensions that dramatically improve GSAT's performance on structured problems: the use of clause weights, and a way to average in near-solutions when initializing lhe procedure before each try.