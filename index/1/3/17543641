Many different robotic frameworks exist, each with its own advantages, disadvantages, peer groups and communities. In many cases, interoperability of different robotic runtime architectures is desired, but due to the complexity of converting between data-types and working with multiple buildsystems, interoperability is hindered. This work aims to identify important design principles that – when satisfied – can enable a seamless integration of frameworks with little effort. The approach is validated in a number of real-world experiments that require data exchange between the two robotic frameworks ROS and FINROC.