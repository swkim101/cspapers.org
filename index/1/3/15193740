Let NIA(d) be the family of languages accepted within <underline>linear time</underline> by nondeterministic d-dimensional iterative arrays. (On-line deterministic multidimensional iterative arrays have been studied by Cole [2].) It has been observed [8] that every language accepted by a one-dimensional single-head Turing machine simultaneously within time n<supscrpt>2</supscrpt> and space n is in NIA(2). Our main result (Theorem 2) generalizes this observation to NTIME(n<supscrpt>d</supscrpt>) @@@@ NIA(d), where NTIME(T(n)) is the family of languages accepted within time T(n) by nondeterministic one-dimensional multihead Turing machines.
 Conversely, we show that NIA(d) @@@@ NTIME(n<supscrpt>d+l</supscrpt>) (Theorem 3). The two facts together show [equation]NIA(d) = [equation]NTIME(n<supscrpt>d</supscrpt>), which is the same as Karp's class NP [6]. We also use both facts in a proof that NIA(d) @@@@ NIA(d+2).
 Let NTM(d) be the family of languages accepted within linear time by nondeterministic d-dimensional multihead Turing machines. A real-time simulation of Turing machines by iterative arrays gives NTM(d) @@@@ NIA(d) (Theorem 1), but a less direct simulation (using Theorem 2) gives the stronger result [equation] NTM(d) @@@@ NIA(2). Thus, in the nondeterministic case, <underline>two</underline>-dimensional iterative arrays outperform all <underline>multi</underline>-dimensional multihead Turing machines.
 Finally, in section 7, we examine related deterministic questions and summarize.