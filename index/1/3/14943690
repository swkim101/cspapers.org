In a digraph with distinguished vertex a, for any vertex v # a let A(u) equal the value of a maximum flow from a to u. A perfect packing of a-arborescences contains each vertex in A(v) arborescences and contains some fixed vertex in every arborescence. Determining if an arbitrary graph has a perfect packing is NP-complete. We present the most general known condition that guarantees the existence of a perfect packing: each vertex u # a is separated from a by a set that has in-degree X(v) and out-degree no greater. This result is based on other useful properties of such graphs, e.g., they always have a pair of edges that can be “split off’ preserving A values. We show a perfect packing can be found in O(nm2) time, where n (m) is the number of vertices (edges). If the graph has a capacity function the time is the same as computing O(n2) maximum network flows. We also show a preflow mincut graph has a fractional perfect packing using only m + n 2 distinct arborescences.