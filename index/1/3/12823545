Let <i>f</i> be a function on a set of variables <i>V</i>. For each <i>x</i> ε <i>V</i>, let c(x) be the cost of reading the value of <i>x</i>. An algorithm for evaluating <i>f</i> is a strategy for adaptively identifying and reading a set of variables <i>U ⊆ V</i> whose values uniquely determine the value of <i>f</i>. We are interested in finding algorithms which minimize the cost incurred to evaluate <i>f</i> in the above sense. Competitive analysis is employed to measure the performance of the algorithms. We study two variants of the above problem. First we consider the classical setting in which one assumes that the algorithm knows the cost c(<i>x</i>), for each <i>x</i> ε <i>V</i>. For the case where <i>f</i> is a monotone boolean function which is representable by a threshold tree, we provide a <i>polynomial time</i> algorithm with the best possible competitive ratio γ<sup><i>f</i></sup><inf><i>c</i></inf> for each fixed cost function c(·). Remarkably, the best known result for the same class of functions is a <i>pseudo-polynomial</i> algorithm with competitiveness 2γ<sup><i>f</i></sup><inf><i>c</i></inf>. For the class of game tree functions our <i>polynomial time</i> algorithm attains, for each fixed cost function, the same competitiveness as the best known algorithm for the same class of functions, which instead runs in <i>pseudo-polynomial time</i>.In the second part of the paper, we study a novel variant of the problem. Here, we assume that the cost function is not known in advance and some <i>preemption</i> is allowed in the reading operations. This model has applications, e.g., when reading a variable coincides with obtaining the output of a job on a CPU and the cost is the CPU time. In such a case, it is reasonable to assume that no exact knowledge of the cost is available. We define a new algorithm for this problem based on the solution of a Linear Program. We show the optimality of our algorithm for the class of monotone boolean functions representable by AND-OR-trees. We also show a sub-optimal implementation for general monotone boolean functions.