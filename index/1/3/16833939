The inertia of a real symmetr ic matr ix M is the triple (p, z, n), where p, z, and n are the number of positive, zero, and negative eigenvalues of M, respectively. We give an algorithm tha t computes the inert ia of a symmetric integer matr ix exactly. The algori thm couples a floating-point eigenvalue subroutine (such as the QR algorithm) to an integer conditioning step. The algorithm requires at most about log sp read (M) / log (1 /e ) conditioning steps, where e is the precision of floating point and the spread of M, spread(M), is the ratio of the maximum magnitude of any eigenvalue to the minimum magnitude of any nonzero eigenvalue. If M is an n x n matr ix, each conditioning step requires a floating-point eigenvalue evaluation of an n x n matrix, and two multiplies of integer n x n matrices of norm about [[M[[. In the worst case spread(M) ~ [IM[[ n, and the number of conditioning steps is about n log I lMl l / l og (1/e).