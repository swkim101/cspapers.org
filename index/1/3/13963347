Many safety-critical embedded systems are subject to certification requirements. However, only a subset of the functionality of the system may be safety-critical and hence subject to certification; the rest of the functionality is non safety-critical and does not need to be certified. Certification requirements in such mixed-criticality systems give rise to some interesting scheduling problems, that cannot be satisfactorily addressed using techniques from conventional scheduling theory. In prior work, we have proposed a priority-based algorithm for scheduling such mixed-criticality systems on preemptive uniprocessor platforms. In this paper, we derive a sufficient schedulability condition for efficiently determining whether a given mixed-criticality system can be successfully scheduled by this algorithm. We show that this algorithm (and the associated schedulability test) is strictly superior to prior algorithms that have been used for scheduling mixed-criticality systems needing certification.