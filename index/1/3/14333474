We present an undirected all-pairs shortest paths (APSP) algorithm which runs on a pointer machine in time <i>O</i>(<i>mn</i>α(<i>m,n</i>)) while making <i>O</i>(<i>mn</i>log α(<i>m, n</i>)) comparisons and additions, where <i>m</i> and <i>n</i> are the number of edges and vertices, respectively, and α(<i>m, n</i>) is Tarjan's inverse-Ackermann function. This improves upon all previous comparison & addition-based APSP algorithms when the graph is sparse, i.e., when <i>m</i> = <i>o</i>(<i>n</i> log <i>n</i>).At the heart of our APSP algorithm is a new single-source shortest paths algorithm which runs in time <i>O</i>(<i>m</i>α(<i>m, n</i>) + <i>n</i> log log <i>r</i>) on a pointer machine, where <i>r</i> is the ratio of the maximum-to-minimum edge length. So long as <i>r</i> < 2<sup><i>n</i><sup><i>o</i>(1)</sup></sup> this algorithm is faster than <i>any</i> implementation of Dijkstra's classical algorithm in the comparison-addition model.For <i>directed</i> graphs we give an <i>O</i>(<i>m + n</i> log <i>r</i>)-time comparison & addition-based SSSP algorithm on a pointer machine. Similar algorithms assuming integer weights or the RAM model were given earlier.