This paper presents a new coarse-grained thread pipelining execution model for exploiting coarse-grained parallelism from general-purpose application programs in shared-memory multiprocessor systems. Based on the fine-grained thread pipelining model proposed for the superthreaded architecture [7], this new model allows concurrent execution of loop iterations with run-time data dependence checking and control speculation. These features allow the parallelization of a variety of program constructs that cannot be paral-lelized with existing run-time schemes. The pipelined execution of loop iterations results in lower parallelization overhead than in other existing techniques. The performance of this coarse-grained thread pipelining model was evaluated using some real applications and a synthetic benchmark. With a sufficiently large grain size compared to the parallelization overhead, significant speedups are possible. The synthetic benchmark provides a means for estimating the performance of application programs that will be paral-lelized with this model.