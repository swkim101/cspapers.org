Datalog is extended to incorporate single-valued “data functions”, which correspond to attributes in semantic models, and which may be base (user-specified) or derived (computed). Both conventional and stratified datalog are considered. Under the extension, a datalog program may not be consistent, because a derived function symbol may evaluate to something which is not a function. Consistency is shown to be undecidable, and is decidable in a number of restricted cases. A syntactic restriction, panwise consistency, is shown to guarantee consistency. The framework developed here can also be used to incorporate single-valued data functions into the Complex Object Language (COL), which supports deductive capabilities, complex database objects, and set-valued data functions.
There is a natural correspondence between the extended datalog introduced here, and the usual datalog with functional dependencies. For families &PHgr; and Γ of dependencies and a family of datalog programs Λ, the &PHgr;-Γ implication problem for Λ asks, given sets F ⊆ &PHgr; and G ⊆ Γ and a program P in Λ, whether for all inputs I, I @@@@ F implies P(I) @@@@ G. The FD-FD implication problem is undecidable for datalog, and the TGD-EGD implication problem is decidable for stratified datalog. Also, the Ø-MVD problem is undecidable (and hence also the MVD-preservation problem).