We demonstrate how to handle equality in the inverse method using equality elimination. In the equality elimination method, proofs consist of two parts. In the rst part we try to solve equations obtaining so called solution clauses. In the second part, we perform the usual sequent proof search by the inverse method. Our method is called equality elimination because we eliminate all occurrences of equality in the rst part of the proof. Solution clauses are obtained by using a very strong strategy | basic superposition. Unlike the previous approach proposed by Maslov, we prove completeness of our method with most general substitutions and with ordering restrictions. We also note that these technique can be adapted to extension procedures, like the connection method. Unlike other approaches, we do not require the use of rigid or mixed E-uni cation. Section 1 The inverse method The inverse method of theorem proving in sequent calculi has been proposed by Maslov in the 1960s. The method is based on the bottom-up search in sequent calculi. The inverse method is completely local [MM 83, DV 94b] and can be e ciently implemented both for classical and non-classical logics [Vor 92]. The inverse method can be characterized as a bottom-up search in sequent calculi. In terms of e ciency, it is competitive with resolution. The inverse method does not require the use of any normal forms which can be an advantage for interactive provers. It is also applicable to non-classical logics. The introduction of equality in the inverse method has not yet received proper attention. In this paper we consider the inverse method with equality based on equality elimination. The structure of this paper is the following. In this section we brie y discuss introduction of equality in the inverse method in general. In Section 2 we introduce main de nitions and notation. In Section 3 we de ne the equality elimination method and give several examples. The equality elimination method for Horn clauses with equality and for semantic tableaux has been considered in [DV 94a, DV 94b]. In Section 4 we show how one can generalize our technique to the connection method. Appendix A contains proofs of main theorems. The rst natural generalization of the inverse method to include equality has been made by Maslov [Mas 71]. It was based on theorems proved by Kanger [Kan 63] and Lifschitz [Lif 68] about the specialization of proofs in the sequent calculus with equality (but without free variables!). According to these theorems, all equality reasoning steps can be moved on top of the proof so that they precede all other steps. This gives the characterization of the inverse method with equality which in fact coincides with hyperresolution (on classical logic), but with a di erent initial set of clauses (closed collections in Maslov's terminology). While in the inverse method without equality the initial sequents correspond to axioms of the sequent calculus, in the equality case initial sequents are those derivable from axioms exclusively by equality rules. Kanger [Kan 63] called such sequents \directly demonstratable". In later terminology these sequents have been called (saturated) equational mated sets [Gal 92] or E-complementary matings [Pet 93]. We call their analog solution clauses. Let us come back to results on the specialization of sequent proofs. Is it possible to generalize these results on proofs with free variables (metavariables in Maslov's terminology)? In this case equality rules become paramodulation rules. Direct lifting from the ground case is now impossible without functional re exivity axioms. As we shall show, the use of free variables is possible both for the traditional formulation of the inverse method and for the formulation proposed in our paper. In the original presentation of the inverse method by Maslov, uni cation has been made by 1 using arbitrary (not only most general) substitutions which made lifting from the ground case unnecessary1. Even in the paper [MM 83] evaluated in [Lif 89] as a \very clean explanation of the inverse method" it was only noted that \likewise the de nition of a most general uni er, at each step one could select minimal substitutions". However the proof of completeness in the [MM 83] reformulation of the inverse method is made using unrestricted substitutions given by an arbitrary saturation of the Herbrand universe. Arbitrary substitutions are also used in [Lif 89] where the most general uni ers are only used for factoring. An alternative approach would be to take into attention that theorems of [Kan 63] and [Lif 68] on the specialization of sequent proofs also allow one to restrict to simultaneous paramodulations only. \Simultaneous" means that in the application of the equality rules from the conclusion to the premise all occurrences of the \into-term" are replaced by the \from-term". As it has been shown in [Ben 90], for simultaneous paramodulation lifting is possible without the functional re exivity axioms. We do not, however, use simultaneous paramodulation here. Instead, we use most re ned strategies of dealing with equality | ordering strategies and based on them basic superposition. It happens that these severe restrictions on the equality part of the proof is enough to preserve completeness using most general uni ers. Our method is also directly applicable to so called \extension procedures" [Pra 60], including tableaux methods [Fit 90, DV 94b], mating or connection methods [And 86, Bib 87] and their generalization | consolution [Ede 91]. We shall illustrate such an application of our method in Section 4. The major di erence of our treatment of equality reasoning for connection methods is that instead of checking paths through an extension of the input formula for E-complementarity (i.e. for the existence of a rigid E-uni er) we rst generate a set of E-complementary paths using ordinary uni cation, and then look for an appropriate extension. In [Pet 93] it is noted that the problem of combining paramodulation-based equality handling and extension procedure is non-trivial. What we do is to split equality reasoning and extension procedures into two separate procedures and connect them via solution clauses generated by the equality reasoning part. This allows one to use strong sides of both equality reasoning methods known so far and extension procedures. 1In terms of resolution, such a treatment of uni cation gives unrestricted resolution [Llo 87] | a calculus with too high non-determinism. 2 Section 2 Preliminaries We present here a brief overview of notions and preliminary de nitions necessary for the paper. We assume the basic knowledge of substitutions and uni cation. Let be a signature, and X a set of variables. T ( ;X) will denote the set of all terms in the signature with variables from X. The set of all ground terms in the signature will be denoted by T ( ). A literal is either an atomic formula or a negation of an atomic formula. We shall always write s 6= t for the literal :(s = t). A clause is a set of literals, denoted L1; : : : ; Ln. If L is a literal, C a clause, L;C will denote the clause fLgSC. An equation is an expression s = t, where s; t are terms in T ( ;X). By a ground expression (i.e. term, equation, clause etc.) we mean an expression containing no variables. We write A[s] to indicate that an expression A contains s as a subexpression and ambiguously denote by A[t] the result of replacing particular occurrences of s in A by t. By A we denote the result of applying the substitution to A. We shall sometimes denote tuples of equations s1 = t1; : : : ; sn = tn by s = t. The overbar notation t can also be used to denote sequences of terms. Substitutions with the domain x1; : : : ; xn will be denoted by [x1=x1 ; : : : ; xn=xn ]. Let be a partial ordering on T ( ;X). It is called a reduction ordering i 1. is well-founded; 2. if s t then u[s ] u[t ], for all terms s; t; u and substitutions . We shall always assume that reduction orderings are total on the set T ( ). Following [BGLS 92] we distinguish terms occurring in the original formula from terms introduced by substitution by using closures, i.e. pairs C , where C is a clause, a substitution. The closure C is a representation of the clause C . The application of a substitution to such a closure is de ned by (C ) = C . The clause C will often be identi ed with the closure C ", where " is the empty substitution. The set Var(C ) is de ned as the set of all variables of C . Two closures C1 1 and C2 2 have disjoint variables i Var(C1SC1 1)TVar(C2SC2 2) = ;. An instance of the closure C is any closure C . The instance is ground i Var(C ) = ;. Two closures are variants i both are instances of each other. When we use notation j= or `, they state for truth and provability in classical rst order logic. A formula is in skolemized negation normal form i it is constructed from literals using connectives ^;_ and the quanti er 9. There is a structure-preserving translation of formulas without equivalences into formulas in skolemized negation normal form with the same number of occurrences of atoms. 3 Section 3 The equality elimination method For the rest of this section we assume that is a closed formula in skolemized negation normal form to be proved (the \goal"). We assume that all di erent occurrences of quanti ers in bind di erent variables. For example, cannot have the form 9xA _ 9xB. All formulas in this section are assumed to be subformulas of . We shall identify subformulas of with their occurrences in . For example, in the formula of the form A ^ (A _B) the boldfaced A is considered as a subformula of (A _B), but the ordinary A is not a subformula of (A _B). A subformula ' of is called conjunctive i it is an occurrence in a subformula ' ^ or in ^ '. A conjunctive superformula of ' is a superformula of ' that is conjunctive. The least conjunctive superformula of ' is the conjunctive superformula of ' such that any other conjunctive super