Programmable logic controller (PLC) software is a critical component of a large number and wide variety of automated machines and plants. In spite of its industrial relevance, its current development practice presents heavy drawbacks that result in poor quality, low reuse rate and other problems. The paper is aimed at presenting a design and development methodology, and the underlying model, that have been specifically studied to improve the process. The methodology supports preliminary and improvement design phases, produces a complete and homogeneous representation of structural and behavioural aspects, favours early correctness and consistency verification, guides disciplined software coding and testing, and remains independent of the programming language. Although adopting basic principles of the object-oriented paradigm, the model introduces proper primitives to capture the peculiarities of PLC software and achieve a higher degree of modularity. Besides, it replaces methods with invariants and transition conditions to express more knowledge in declarative form. The proposed approach bas been tested on complex real cases.