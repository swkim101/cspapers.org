This paper describes a new way of representing LISP lists in a LISP-oriented architecture. List structures are regarded as trees occurring in a logical space. Information-containing nodes of the logical trees are then mapped into a compact tabulax representation in physical memory. This tabular representation is coupled with an architecture that includes a small associative table cache and performs primitive LISP operations directly on the tabular list structure representation. This architecture permits rapid access to list items and streaming of sequences of desired elements. Performance can be enhanced fur ther for certain recursive LISP algorithms that can be transformed into faster iterative versions or into simple table lookup operations. This system has the potential to achieve far more efficient execution of LISP programs.