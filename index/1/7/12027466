Motivation. Software maintenance is a significant part of the software life-cycle cost. Current research focuses on the maintenance of application software. Despite increased focus on systems integration, there is limited research on maintaining integrated systems. Before progressing with informing software integration practice, researchers therefore need to better understand the actual work of maintaining integrated systems. Research. To this end, a study of maintaining an integrated system in practice has been conducted. The study is conducted in the context of a community of volunteer software integrators. The research combines field studies with document analysis, asking: RQ1: How is knowledge of software failures developed during geographically distributed software maintenance? RQ2: How do software developers build knowledge of how to replace a businesscritical software system? RQ3: What are the characteristics of large-scale software maintenance work in a geographically distributed community of volunteers? Contributions. The main empirical contribution offered by this thesis is insight into the social and technical processes of maintaining an integrated system in a distributed community of volunteer software integrators. It offers a view of software maintenance where multiple stakeholders with different interests continuously negotiate over problems and their solutions. Focusing upon scarcity of resources and contradictory interests brings out the inherently political aspects of software maintenance. C1: Knowledge of software failures is developed through a process of negotiating over possible interpretations of available data, a process that is contingent upon situational issues such as workload, priorities, and responsibilities C2: A collective understanding of the scope, stakeholders, and sequence of activities for rewriting software evolves in response to new problems emerging from the rewrite efforts themselves as well as environmental changes C3: Maintaining an integrated system in a community of volunteers is characterized by scarcity of resources, an emphasis on coalition building, and volatility of stakeholders Two contributions to software maintenance practice are offered: C4: Recommendations for a lenient approach to coping with variability during corrective maintenance C5: Recommendations for an opportunity-driven approach to systems replacement