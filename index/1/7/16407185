During an experiment a biologist will usually perform a series of computational analyses on their data. To do this a biologist will typically decompose the experiment into a number of data-processing components that produce and consume experimental data. These independently developed components are made accessible via a number of different interfaces, e.g., web-based and command-line. They are manually bound together at run-time by the biologist into a chain. A chain will start with a particular data-processing component and the biologist will interact with it which will result in some form of data output. At this stage of chain composition the biologist is faced with a large number of choices as to which component to next pass the generated data to. The decision is based on a number of factors such as the biologists on-going interpretation of the data and the scientific hypothesis under investigation. These factors make it necessary to have run-time specification of component bindings. Currently, to drive the experimental process, the biologist is burdened with simultaneously managing four different problems: the ad-hoc discovery of suitable components; the translation of component generated data to ensure compatibility with the down-stream component; the manual transport of that data between components; and the need to man-