This paper describes a concurrent programming interface based on the use of semaphores. Using this environment students can gain practical experience in designing and implementing concurrent programs using processes and semaphores. The environment, which is based on Unix* System-V system calls, is designed to correspond closely to semaphore programming examples found in typical operating systems textbooks. It is implemented as a library of subroutines which is accessible from of varie~ of programming languages. An example programming exercise is presented.