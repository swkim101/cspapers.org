Preliminary results from the development of Rational Rose, a large (> 100 KLOC) program written in C++, suggest that high product quality can be achieved during a telescoped development schedule through the use of an iterative-development methodology. Data on defect density and discovery rate gathered on one phase of Rose development implies a low error rate in code delivered for functional test and supports 80-20 defect clustering, 80-20 distribution of noncritical versus critical defects, an association of defects detected during functional test with depth in the subsystem hierarchy, and the utility of data on rates of defect discovery for C++ programs.