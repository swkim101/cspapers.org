We examine an extended relational database system which supports database procedures as full fledged objects. In particular, we focus on the problems of query processing and efficient support for database procedures. First, a variation to the original INGRES decomposition algorithm is presented. Then, we examine the idea of storing results of previously processed procedures in secondary storage (caching). Using a cache, the cost of processing a query can be reduced by preventing multiple evaluations of the same procedure. Problems associated with cache organizations, such as replacement policies and validation schemes are examined. Another means for reducing the execution cost of queries is indexing. A new indexing scheme for cached results, Partial Indexing, is proposed and analyzed.