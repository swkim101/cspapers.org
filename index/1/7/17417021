From the point of view of the application designer, user interface services work by factoring some domain common to a range of applications, and implementing this separately. Existing services, such as window managers, UIMSs, or toolkits, either lack generality, or are limited in their separability. A new interface paradigm, here called surface interaction, separates application and interface by factoring presentation and its manipulation, rather than dialogue or functionality. The surface is thus a medium which can be controlled equally by the user or by the application. This paper outlines Presenter, an implementation of a model for surface interaction.