This paper introduces a domain-specific language for programming mobile robots that is based on hierarchical state machines. Following Brooks, we refer to states as behaviors. A novelty of this language is that behaviors are treated as first class objects in the language and thus they can be passed as arguments to other parameterized behaviors. The language has template behaviors which allow generalized behaviors to be customized and instantiated. This makes the language quite flexible in terms of programming styles. An example of its flexibility are presented, followed by a description of the challenges in the language design.