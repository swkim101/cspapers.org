paper is concerned with ways of specifying situations and evaluating them efficiently. The techniques described in this paper were developed as part of the HiPAC (High Performance Active) DBMS. a prototype active DBMS (DAYA88a. DAYA88b. CHAK89], parts of which have been implemented. However. the algebra and transformations described in this paper can be applied more generally. The situation evaluation mechanism can either be a component integrated tightly with a DBMS. or coupled with a heterogeneous array of applications or databases that signal it when specified events occur. We present a basis for efficiently evaluating the situation (event and condition) portion of situation/action rules. either in an active database or in a standalone situation monitor. A common framework handles situations involving both database changes and nondatabase situations. We introduce ARelations to represent net changes to a stored or derived relation. We define an operator that computes ARelations for derived relations. Evaluation of expressions involving changes is optimized by defining incremental forms of relational operators and by providing a chain rule that extends incremental computation to data derived by arbitrary expressions.