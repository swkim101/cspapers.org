Software design patterns are reusable solutions to commonly occurring problems in software development. Growing complexity of robotics software increases the importance of applying proper software engineering principles and methods such as design patterns to robotics. Concurrency design patterns are particularly interesting to robotics because robots often have many components that can operate in parallel. However, there has not yet been any established set of reusable concurrency design patterns for robotics. For this purpose, we choose six known concurrency patterns - Future, Periodic timer, Invoke later, Active object, Cooperative cancellation, and Guarded suspension. We demonstrate how these patterns could be used for solving common robotic coordination tasks. We also discuss advantages and disadvantages of the patterns and how existing robotics programming frameworks can support them.