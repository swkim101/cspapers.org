The support for modular software and the ability to perform type checking across module boundaries are becoming the mainstay of recent high level language design. This is well illustrated by languages such as MESA and the US Department of Defence's new standard language ADA. At Bell-Northern Research, PROTEL, one of the first modular typed languages, has been used since 1975 to implement a substantial software system. The experience accumulated in building this system has given us a unique perspective. It has shown that the confidence of language designers in modular typed languages is well founded. It has also revealed some pitfalls which others will undoubtedly encounter. The purpose of this paper is to share our experience by outlining the nature of the problems and our solutions to them.