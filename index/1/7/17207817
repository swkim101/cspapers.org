There exist many problems in which substantial parallelism is available but where the parallelism cannot be exploited using doall or doacross loops [lo] [4]. doall loops do not impose any ordering on loop iterations while doacross loops impose a partial execution order in the sense that some of the iterations are forced to wait for the partial or complete execution of some previous iterations. We propose a new type of loop, i.e., doconsider. The doconsiderloop allows loop iterations to be ordered in new ways that preserve dependency relations and increase concurrency. Often, these sorts of index reorderings can be done at very low cost and can have substantial benefits.