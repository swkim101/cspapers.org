Much work has been performed in the database community in order to define and to develop active database systems (ADBMS) [CH+96][WC96]. Some ADBMS prototypes are presently operating [BB+93][CC+94][GH+96][GJ+92], but several questions concerning the "adequacy" of these systems for potential applications are still only being partially answered or not answered at all. Are these systems really responding to application requirements? How difficult is it (for the application programmer) to use active rules? A large spectrum of execution models for ECA rules has been proposed, which of them are relevant to what kind of application/task ? Questions are not only on the active system designers side. Some people are working on design and methodological aspects to try to assist the application programmers during the design and development of advanced database applications [CF97][FRO95][TP+94]. Important questions are: how to take advantage of the new system functionalities (e.g. active rules) ? Are existing methods well suited to express the behaviour of advanced applications ? How to admpt existing methodologies to those new applications and systems ? As pointed out in [SK95] [WC96], there is insufficient methodological support in analysis and design of active DB applications. The work presented here is a contribution to better understanding application requirements. It is concerned with the study of several real life applications with the purpose of identifying their active characteristics. We have synthesized these characteristics and identified different types of behaviour common in most applications. This work has two goals. On the one hand, it is concerned with the modeling aspects: we aim to propose a way to reuse the same expression of a behavioral situation in different application contexts. On the other hand, concerning the implementation,