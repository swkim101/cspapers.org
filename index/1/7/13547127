Suppose we have obtained a partial factorization of an integer m, say m = ml1722 . . . mj. Can we efficiently “refine” this factorization of m to a more complete factorization m= rI n2ien, I<i<k -where all the ni 2 2 are pairwise relatively prime, and k 2 2? A procedure to find such refinements can be used to convert a method for splitting integers into one that produces complete factorizations, to combine independently generated factorizations of a composite number, and to parallelize the generalized Chinese remainder algorithm. We apply Sleator and Tarjan’s formulation of amortized analysis to prove the surprising fact that our factor refinement algorithm takes O((logm)2) bit operations, the same as required for a single gtd. This is our main result, and appears to be the first application of amortized techniques to the analysis of a numbertheoretic algorithm. We also characterize the output of our factor refinement algorithm, showing that the result of factor refinement is actually a natural generalization of the greatest common divisor. Finally, we also show how similar results can be obtained for polynomials. As an application, we give +Research supported by NSF grants DCR-8504485 and DCR8552596. ++Research supported by NSF grant CCR-8809573 and a Walter Burke award. +++Research supported by NSF grant CCR-8817400, the Wisconsin Alumni Research Foundation, and a Walter Burke award. *Department of Computer Science, Dartmouth College, Hanover, NH 03755. #Computer Sciences Department, University of Wisconsin, 1210 W. Dayton, Madison, WI 53706. algorithms to produce relatively torizations and normal bases. prime squarefree fac