The notion that a definition of a variable is <italic>dead</italic> is used by optimizing compilers to delete code whose execution is useless. We extend the notion of <italic>deadness</italic> to that of <italic>partial deadness</italic>, and define a transformation, the <italic>revival transformation</italic>, which eliminates useless executions of a (partially dead) definition by tightening its execution conditions without changing the set of uses which it reaches or the conditions under which it reaches each of them.