We consider <italic>monotone input/output automata</italic>, which model a usefully large class of dataflow networks of indeterminate (or nonfunctional) processes. We obtain a characterization of the relations computable by these automata, which states that a relation <italic>R</italic> : <italic>X</italic> → 2<supscrpt><italic>Y</italic></supscrpt> (viewed as a “nondeterministic function”) is the input/output relation of an automaton iff there exists a certain kind of Scott domain <italic>D</italic>, a continuous function <italic>F</italic> : <italic>X</italic> → [<italic>D</italic> → <italic>Y</italic>] and a continuous function <italic>G</italic> : <italic>X</italic> → <italic>P</italic>(<italic>D</italic>), such that <italic>R</italic>(æ) = <italic>F</italic>(æ)<supscrpt>†</supscrpt>(<italic>G</italic>(æ)) for all inputs æ ε <italic>X</italic>. Here <italic>P</italic> denotes a certain powerdomain operator, and † denotes the pointwise extension to the powerdomain of a function on the underlying domain. An attractive feature of this result is that it specializes to two subclasses of automata, <italic>determinate</italic> automata, for which <italic>G</italic> is single-valued, and <italic>semi-determinate</italic> automata, for which <italic>G</italic> is a constant function. A corollary of the latter result is the impossibility of implementing “angelic merge” by a network of determinate processes and “infinity-fair merge” processes.