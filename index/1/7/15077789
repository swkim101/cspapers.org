In contemporary model-based specifications, we typically find a naive combination of models of the externally visible behavior of a system (typically expressed as scenarios or use cases) and of the internal system behavior (partially represented in explicit state models and partially expressed as data). However, a systematic combination and integration of the two behavior aspects has not yet been investigated. In this paper, I sketch a systematic approach for modeling both external and internal behavior of a system with statecharts in an integrated, non-redundant way. The main idea is to start with statecharts that model external behavior in the form of use cases or type scenarios and then add statecharts that model internal behavior only where the scenario/use case statecharts do not suffice for expressing the behavior of the system.