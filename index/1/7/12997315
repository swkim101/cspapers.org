We relate standard techniques for solving recursive domain equations to previous models with types interpreted as partial equivalence relations (per's) over a Dm lambda model. This motivates a particular choice of type functions, which leads to an extension of, such models to higher-order polymorphism. The resulting models provide natural interpretations for function spaces, records, recursively defined types, higher-order type functions, and bounded polymor-phic types Y-X <: Y. A where the bound may be of a higher kind. In particular, we may combine recursion and polymorphism in a way that allows the bound Y in VX <: Y. A to be recursive y defined. The model may also be used to interpret so-called " F-bounded polymorphism. " Together, these features allolv us to represent several forms of type and type functions that seem to arise naturally in typed object-oriented programming. 1 Introduction In type systems aimed towards object-oriented programming , several typing ideas naturally arise. The most basic are subtyping, the fact that values of one type may be treated as values of another, polymor-phism, and recursively defined types. the Powell Foundation. t s~lpported in part by an NSF PYI Award, matching funds from Digital Equipment Corporation, the Powell Foundation, and Xerox Corporation NSF grant CCR-881 4921 and the Wal-lace F. and Lucille M. Davis Faculty Scholarship. Pennksion to copy without fee all or part of this material is granted provided that tie copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of tbe publication and its date appear, and notice is given that copying is by permission of tbe Association for Computing Machinery. To copy otherwise , or to republish, requires a fee sad/or specific permission. the existing, implemented type systems for object-oriented languages have notable errors (see, [CO089]), it is important to prove the soundness of these type systems. The primary technique for doing so is by constructing a selmantic model. A class of semantic models for languages with subtyp-ing, polymorphism and recursion are developed in [Cop85, Ama91, Car89, AP90]. These models all interpret types as partial equivalence relations (per's) over suitable Dm structures obtained by the so-called " inverse limit') construction. The main contributions of this paper are to provide a general framework for understanding type recursion in these models and to extend per models to higher-order type functions and additional forms of polymorphism. Since the use of per's over â€¦