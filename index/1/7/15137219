We introduce and illustrate a <italic>specification method</italic> combining rule-based inductive definitions, well-founded induction principles, fixed-point theory and abstract interpretation for general use in computer science. Finite as well as infinite objects can be specified, at various levels of details related by abstraction. General proof principles are applicable to prove properties of the specified objects.
The specification method is illustrated by introducing G<supscrpt><inline-equation> <f> ∞ </f> </inline-equation></supscrpt>SOS, a structured operational semantics generalizing Plotkin's [28] structured operational semantics (SOS) so as to describe the finite, as well as the infinite behaviors of programs in a uniform way and by constructively deriving inductive presentations of the other (relational, denotational, predicate  transformers, …) semantics from G<supscrpt><inline-equation> <f> ∞ </f> </inline-equation></supscrpt>SOS by abstract interpretation.