While there are suitable type-systems for aggregation that allow the exchange of objects and classes, the configuration of systems, and dynamic binding, there are no type-systems for inheritance relationships. Thus, maintenance of class libraries becomes difficult or even impossible because changes in a class library can cause changes in the inheriting classes in an application program. Modeling inheritance with explicit and parametrical bindings introduces a typed interface for inheritance which allows type-safe changes in class libraries. Furthermore the approach opens new possibilities for composition and makes programming easier.