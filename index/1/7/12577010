In the heyday of structured programming, many educators debated the sequencing of topics in introductory courses, particularly the introduction of functions and procedures. As object-oriented programming gains a foothold, particularly via the languages C++ and Java, the debate moves from the introduction of functions to the introduction of classes. To keep the discussion in the form of a debate, this seminar will focus on the issue:Resolved: classes should be used early in the introductory sequence of courses.Classes should be used early in introductory programming courses when a program or application warrants their use, not because classes are intrinsically a good thing. Rather than demanding that students use a class to convert a Fahrenheit temperature to Celsius, we must show students examples that use classes; examples that leverage the power of classes into programs that would be more difficult to do without the use of classes.In many cases, classes can be used as units or modules have been used with structured languages. Students and educators can become accustomed to the syntax of C++ and the concepts of object-based and object-oriented programming by using classes for fundamental language constructs such as strings and vectors, and for application-specific programs as well. Classes are used first, then modified, and finally (if ever) written from scratch. With this approach students learn about good coding and design from experience. For this approach to using classes to be effective, a library of well-designed and useful classes must be available to instructors and students.