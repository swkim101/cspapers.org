We explore several problems associated with persistent data structures, deriving our moti­ vation from problems left open by Driscoll, Sarnak, Sleator and Tarjan in [15]. We exhibit simple methods to completely eliminate amortization from one of the data structures of Driscoll et. at.. We show new methods for making some data structures, including disjoint­ set union-find, partially persistent in optimal time and space. We discuss some motivations for eliminating amortization from data structures in general, and explore a family of "pebble" games associated with eliminating amortization from data structures in general and from persistent data structures in particular. One relevant version of this pebble game shows that randomization may be a useful tool for elimination of amortization. The University of Rochester Computer Science Department supported this work. •A preliminary version ofthis paper was presentedat the 2nd Annual ACM.SIAM Symposium on Discrete Algorithms (SODA), San Francisco, USA, Jan. 1991. tDept. of CS, University of Rochester, Rochester, NY 14627. This work is supported by NSF grant CCR-8909667. lDept. of CS, University of Rochester, Rochester, NY 14627.