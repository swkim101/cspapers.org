Software documentation should be useful to the programmer trying to understand a program. The key in that sentence was the word should: by and large documentation has a very bad reputation. We have been working on trying to improve documentation, in order that it may realize its potential. In this case study, we examine a programmer's use of documentation constructed along some specific guidelines. These guidelines, developed from our previous studies of documentation, are intended to help programmers draw causal connections between non-contiguous portions of programming plans in the program. This documentation appears to be helpful to a particular class of programmers, i.e., those who come to a program without the requisite background knowledge.