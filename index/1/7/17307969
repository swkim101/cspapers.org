Many safety-critical embedded systems are subject to certification requirements. However, only a subset of the functionality of the system may be safety-critical and hence subject to certification, the rest of the functionality is non safety-critical and does not need to be certified. Certification requirements in such "mixed-criticality" systems give rise to some interesting scheduling problems, that cannot be satisfactorily addressed using techniques from conventional scheduling theory. In prior work, we have studied the scheduling and analysis of mixed criticality systems that are specified as finite collections of jobs executing on a single shared preemptive processor. In this paper, we consider mixed criticality systems that are comprised of finite collections of recurrent tasks, specified using a mixed-criticality generalization of the widely-used sporadic tasks model. We design a priority-based algorithm for scheduling such systems, derive an algorithm for computing priorities, and obtain a sufficient schedulability condition for efficiently determining whether a given mixed-criticality system can be successfully scheduled by this algorithm.