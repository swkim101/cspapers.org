In this paper are presented the results of a study in which several production software systems are analyzed using ten software metrics. The ten metrics include both measures of code details, measures of structure, and combinations of these two. Historical data recording the number of errors and the coding time of each component are used as objective measures of resource expenditure of each component. The metrics are validated by showing: (1) the metrics singly and in combination are useful indicators of those components which require the most resources, (2) clear patterns between the metrics and the resources expended are visible when both resources are accounted for, (3) measures of structure are as valuable in examining software systems as measures of code details, and (4) the choice of which, or how many, software metrics to employ in practice is suggested by measures of “yield” and “coverage”.