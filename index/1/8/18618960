A user-centered approach to interactive system development requires a way to represent the behavior of a user interacting with an interface. While a number of behavioral representation techniques exist, not all provide the capabilities necessary to support the interaction development process. Based on observations of existing representation techniques and comments from users of the User Action Notation (UAN), a userand task-centered behavioral representation technique, we have developed a taxonomical model of behavioral representation techniques. Our model is an epistemological framework for discussing, analyzing, extending, and comparing existing behavioral representation techniques, as well as being a springboard for developing and evaluating new techniques. We present the model and results of our evaluation demonstrating the model’s reliability y and utility within the context of behavioral representation techniques. PROBLEM STATEMENT AND CONTEXT It has been shown repeatedly that traditional software engineering methods do not necessarily lead to high usability when applied to the development of user interfaces (e.g. 1,2, 3). This is reasonable since the focus of these methods is the software, not the user. To achieve high usability, the interface development process should be user-centered; i.e., it should focus on the user’s tasks, needs, and behavior while interacting with the system. This view, referred to as the behavioral view (4), has led to a variety of techniques for representing the design of a user interface in terms of the behavior of the user, independently of user interface software and hardware considerations. One such technique, the User Action Notation (UAN) (4, 5), is a userand task-oriented notation that describes the behavior of a user and an interface during their cooperative performance of a task. Other behavioral representation Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, raquires a fee and/or specific permission. CH194-4/94 Boston, Massachusetts USA a 1994 ACM 0-89791 -650 -619410159 . ..$3.50 techniques include GOMS (6), Command Language Grammar (CLG) (7), keystroke-level model (8), Task Action Grammar (TAG) (9), Reisner Action Language (10), work by Kieras and Poison (1 1), scenarios or story-boarding, and Task Artifact Framework (12). The primary abstraction of the UAN is a user task — a user action or group of temporally related user actions performed to achieve a work goal. A user interface is represented as a quasi-hierarchical structure of tasks that are asynchronous — the sequencing within each task is independent of that in other tasks. User actions, corresponding interface feedback, and state information are presented at the lowest level. Levels of abstraction are used to hide the details of lower level tasks by combining these tasks under a single task name. At all levels, user actions and user tasks are ordered and combined using temporal relations such as sequencing, interleaving, and concurrency. Since textual notations are not always convenient for specifying all components of an interface, UAN descriptions may include screen pictures (scenarios), and can be supplemented with state transition diagrams to indicate precisely how the user interacts with the interface. The UAN has progressed from its inception as a research project to a practical approach that has been used extensively in real world development environments. Over the past 3 years, we have observed use of the UAN in a substantial portion of the more than 50 industrial and government sites that are using the UAN for user interface development. We have interacted with these users of the UAN to obtain their feedback for improving and extending the UAN. However, as we began making extensions to the UAN based on data from its users, we found that there was no structured method for determining whether our changes were actually improving the notation. This lack of either a practical or a theoretical yardstick for determining improvement in the UAN led us to develop and evaluate a taxonomical model of behavioral representation techniques. The model is an epistemological framework for discussing, analyzing, extending, and comparing existing behavioral representation techniques, as well as being a springboard for developing and evaluating new techniques. This paper reports on the development and evaluation of the model.