As modern software applications are becoming increasingly distributed and mobile, their design and implementation are characterized by distributed software architectures, possibility of faults, and the need for energy awareness. Thus, software developers should be able to simultaneously reason about and handle the concerns of distribution, fault-tolerance, and energy efficiency. Being closely intertwined, these concerns can introduce significant complexity into the design and implementation of modern software. Thus, to develop reliable and energy efficient applications, software developers must understand how distribution, fault-tolerance, and energy efficiency interplay with each other and how to implement these concerns while keeping the complexity in check. This paper studies these concerns and their interaction; it also develops novel approaches, techniques, and tools that effectively fuse and separate these concerns as required by particular software development scenarios.