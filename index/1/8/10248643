A hierarchical and functional software process model HFSP is introduced which satisfies the basic requirements for process description and enaction. In HFSP, software process is described as a collection of activities which are characterized by their input and output relationship and defined as mathematical functions. When the relationship is not simple enough, activities are decomposed into subactivities together with the definitions of their input and output. HFSP allows clear and highly understandable process descriptions due to its static and declarative description style. HFSP realizes flexibility and dynamism needed for software process model by introducing reflection, that is, by treating its execution status as the basic data it can handle and process enaction mechanism. Principle of HFSP and its features such as objectbase access, tool invocation, concurrency and backtracking control, and process enaction mechanism are discussed.