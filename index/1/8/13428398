In this paper we introduce a general model for version management expressed by the concept of version environments. A version environment offers two mechanisms for structuring the version sets of objects: graphs and partitions. By the use of views, constraints and transactions the version environment may be tailored to specific user requirements. The embedding of application tools into the version environment provides the users with their specific application environment which consists of the objects, their version structures and the tools operating on them. The proposed concept is more general and more powerful than the concepts published so far; it is shown, how well known version concepts can be implemented by means of version environments.