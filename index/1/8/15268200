We analyze the space required by linear lists in a single-processor system when the sequences of insertions and deletions of items (list elements) are described by Poisson processes. The list is stored in a linear array of cells numbered 1,2,3,..., with at most one item per cell. The storage policy is first-fit, i.e., an item is inserted in the lowest numbered empty cell at the arrival time of the request to add the item to the list. As items come and go, wasted space can build up in the form of unused cells in the interior of the list. We study this wasted space under first-in-firstout (FIFO) deletion sequences, which defines a basic data structure common to many computer algorithms [8]. The model is also applicable to computer scheduling problems; for this reason, we also analyze wasted space under processor-sharing (PS), i.e. the limiting round-robin rule of time-sharing systems. An exact analysis of wasted space seems to # AT&T Bell Laboratories, Murray Hill, NJ 07974 ## MIT, Cambridge, MA 02139 be very difficult, so we turn to asymptotic estimates expressed in terms of a problem-size parameter defined as the expected number of stored items in statistical equilibrium. The results have implications for practical dynamic list allocation. In particular, the estimates show that, with very high probability for large problem instances, wasted space is a negligible fraction of the total space spanned by the list. This in turn means that for large problem instances timeconsuming compaction (garbage collection) schemes can have very little effect on storage utilization. In the scheduling context, another useful result is that FIFO wastes less space (stochastically) than does PS.