Despite their prominent role in some of the more appliedareasofcomputerscience, incentiveshaverarelybeenanim-portant consideration in traditional algorithm design where,typically, users are assumed either to be cooperative (i.e., tofollow the prescribed algorithm) or to be adversaries who“play against” each other. In contrast, the selﬁsh users ingame theory are neither cooperative nor adversarial. Al-though one cannot assume that selﬁsh users will follow theprescribed algorithm, one can assume that they will respondto incentives. Thus, one need not design algorithms thatachieve correct results in the face of byzantine behavior onthe part of some users, but one does need algorithms thatwork correctly in the presence of predictably selﬁsh behav-ior. This type of “correctness” is a primary goal of economicmechanism design, but standard notions of algorithmic eﬃ-ciency are not.In short, the economics literature traditionally stressedincentives and downplayed computational complexity, andthe theoretical computer science literature traditionally didthe opposite. The emergence of the Internet as a standardplatform for distributed computation has changed this stateof aﬀairs. In particular, the work of Nisan and Ronen [4]inspired the design of algorithms for a range of problems,including scheduling, load balancing, shortest paths, andcombinatorialauctions, thatsatisfyboththetraditionaleco-nomic deﬁnitions of incentive compatibility and the tradi-∗The full paper has been submitted for journal publicationand is available in preprint form [1].†Supported in part by ONR grants N00014-01-1-0795 andN00014-01-1-0447 and NSF grant CCR-0105337.‡Supported in part by NSF Career grant CCR-9985304.§Supported in part by NSF Career grant CCR-9702980 andONR grant N00014-01-1-0795.¶Supported in part by NSF grant ANI-9730162.