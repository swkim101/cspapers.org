(MATH) In this paper we develop an optimal cache-oblivious priority queue data structure, supporting insertion, deletion, and deletemin operations in <i>O</i>(<sup>1</sup> \over <sub>B</sub> log<i><sup>M/B</sup></i><i><sup>N</sup></i> \over <i><sub>B</sub></i>) amortized memory transfers, where <i>M</i> and <i>B</i> are the memory and block transfer sizes of any two consecutive levels of a multilevel memory hierarchy. In a cache-oblivious data structure, <i>M</i> and <i>B</i> are not used in the description of the structure. The bounds match the bounds of several previously developed external-memory (cache-aware) priority queue data structures, which all rely crucially on knowledge about <i>M</i> and <i>B</i>. Priority queues are a critical component in many of the best known external- memory graph algorithms, and using our cache-oblivious priority queue we develop several cache- oblivious graph algorithms.