The elapsed time for external mergesort is normally dominated by I/O time. This paper is focused on reducing I/O time during the merge phase. Three new buffering and readahead strategies are proposed, called equal buffering, extended forecasting and clustering. They exploit the fact that virtually all modern disks perform caching and sequential readahead. The latter two also collect information during run formation (the last key of each run block) which is then used to preplan reading. For random input data, extended forecasting and clustering were found to reduce merge time by 30% compared with traditional double buffering. Clustering exploits any temporal skew in input runs to further reduce the number of seeks. Authorsâ€™ current address: Microsoft, One Microsoft Way, Redmond, WA 98052-6399, U.S.A.