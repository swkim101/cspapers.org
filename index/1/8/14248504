Web services have been widely promoted as the next major WWW innovation. Web services basically provide a remote procedure call mechanism, but unlike earlier approaches are implemented using simple open standards such as XML that allow them to be used across platforms, programming languages and object models. Web services were originally designed to develop distributed web-based applications and to integrate heterogeneous legacy applications. We, however, are proposing to use the web service model to create a parallel computing framework based around cycle donation. Our framework is identical to web services in respect to both the programming model exposed to application programmers and the underlying communication mechanisms used. Compared to other parallel programming frameworks our framework is designed to be simple and lightweight. For application programmers, exploiting the additional computation power provided by a dynamically changing set of volunteer machines is no more complex that exploiting a simple web service. By hosting volunteer components in a web browser, volunteers are able to donate cycles with a minimum of pain - absolutely no special software needs to be pre-installed on the volunteer machines. The use of open standards such as SOAP and HTTP means that components created on different platforms, such as .NET or the JVM, can be freely substituted.