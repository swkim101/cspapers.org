Heuristic algorithms manipulating finite groups often work under the assumption that certain operations lead to “random” elements of the group. While polynomial time methods to construct uniform random elements of permutation groups have been known for over two decades, no such methods have previously been known for more general cases such as matrix groups over finite fields. We present a Monte Carlo algorithm which constructs an efficient nearly uniform random generator for finite groups G in a very general setting. The algorithm presumes a priori knowledge of an upper bound n on log |G|. The random generator is constructed and works in time, polynomial in this upper bound n. The process admits high degree of parallelization: after a preprocessing of length O(n logn) with O(n) processors, the construction of each random element costs O(logn) time with O(n) processors. We use the computational model of “black box groups”: group elements are encoded as (0, 1)-strings of uniform length; and an oracle performs group operations at unit cost. The group G is given by a list of generators. The random generator will produce each group element with probability (1/|G|)(1 ± ) where can be prescribed to be an arbitrary exponentially small function of n. ∗Research supported in part by NSF Grant CCR-8710078.