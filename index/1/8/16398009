To overcome the limitations of trace-driven simulation, we have developed an alternative approach in which memory simulators run in an active operating system kernel. This method, called kernel-based memory simulation, allows us to account for all system activity, including multiple process and kernel interactions. Further, by using privileged machine operations to cause traps into the simulator only when a miss in a simulated memory structure occurs, a kernel-based simulator is able to process hits at the full speed of the underlying host hardware.