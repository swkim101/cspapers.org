Independent of the method used, projects that need to test their product must use a concept that describes its intended usage. Object-oriented methods like Objectory, OOA, RDD, and OOD describe the usage through use cases, threads of execution, scenarios, and mechanisms. The workshop's goal was to discuss the experiences of using such concepts and ways to represent them. All the 8 accepted position papers were presented by the authors. After each presentation, each attendee identified issues that were collected and listed per presentation. The last hour of the day was spent classifying the identified issues. The categories are: solved, grey, research, Solved represents issues that the participants could resolve. Grey represents issues were the participants couldn't agree on the category. Research refers to issues that the participants found difficult, The workshop report is divided in two main parts. The first comprises the summaries of the workshop participants' contributions. The second comprises the identified and classified issues. Further, one participant, Ivar Jacobson, identified the need for a " manifesto " paper about usage modelling of object-oriented systems. That is, a paper that defines mandatory, optional, and research issues for the subject. Writing such a paper is an open challenge left to the reader. Especially those that attended the workshop. 1. Summary of position papers 1.1. Bennet, D. " Evaluating Behavior Allocation in Use Cases " Summing up, D. Bennet focuses on evaluating the behavior allocation decisions made during the internal design. To evaluate the behavior allocation, he collects the complete interface (both incoming and outgoing messages) of each object into a separate diagram. He calls the diagram the " interface view " of the object. By studying this diagram, a designer can evaluate an object's cohesiveness and consistency. For example, if an object sends most of its messages to the same receiver, the designer could consider joining the two objects. Bennet also uses four different object types to evaluate the stability of the behavior allocation. For each type, Bennet has a set of rules that prescribes how it should interact with other types. The goal of these rules is to ensure that the system is stable against changes. In the evaluation process, when an object fails to conform to its type's rule, the designer should consider joining or splitting the object. As a technique for encouraging a good allocation in the first attempt, he arranges the objects by type in the â€¦