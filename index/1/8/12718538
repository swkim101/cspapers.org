It is evident from the recent discussions about computational thinking and the number of papers, panels and birds-of-a-feather sessions at the 2010 SIGCSE Symposium that there is not only a deep connection between computer science and many other disciplines, especially in the sciences, but also a desire to think of computation as an equal partner with experimentation and theory in the solution of science problems. As David Hemmendinger said in a thought piece that appeared recently in ACM Inroads: “Teaching computational thinking [to students in disciplines other than computer science] ... is to teach them how to think like an economist, a physicist, an artist, and to understand how to use computation to solve their problems, to create, and to discover new questions that can be fruitfully explored.” [1].