SchemaSQL is a recently proposed extension to SQL for enabling multi-database interoperability. Several recently identi(cid:12)ed applications for SchemaSQL, however, mainly rely on its ability to treat data and schema labels in a uniform manner, and call for an e(cid:14)cient implementation of it on a single RDBMS. We (cid:12)rst develop a logical algebra for SchemaSQL by combining classical relational algebra with four restructuring operators { unfold, fold, split, and unite { originally introduced in the context of the tabular data model by Gyssens et al. [GLS96], and suitably adapted to (cid:12)t the needs of SchemaSQL. We give an algorithm for translating SchemaSQL queries/views involving restructuring, into the logical algebra above. We also provide physical algebraic operators which are useful for query optimization. Using the various operators as a vehicle, we give several alternate implementation strategies for SchemaSQL queries/views. All the proposed strategies can be implemented non-intrusively on top of existing relational DBMS, in that they do not require any additions to the existing set of plan operators. We conducted a series of performance experiments based on TPC-D benchmark data, us-ing the IBM DB2 DBMS running on Windows/NT. In addition to showing the relative tradeo(cid:11)s between various alternate strategies, our experiments show the feasibility of implementing SchemaSQL on top of