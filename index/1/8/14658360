One of the biggest problems in AT programming is the difficulty of specifying control. Meta-level architecture is a knowledge engineering approach to coping with this difficulty. The key feature of the architecture is a declarative control language that allows one to write partial specifications of program behavior. This flexibility facilitates incremental system development and the integration of disparate architectures like demons, object-oriented programming, and controlled deduction. This paper presents the language, describes an appropriate, and discusses the issues of compiling. It illustrates the architecture with a variety of examples and reports some experience in using the architecture in building expert systems.