Domain-specific languages (DSLs) assist an end-user in writing a software program using idioms that are closer to the abstractions found in a specific problem domain. Language tool support for DSLs is lacking when compared to the capabilities provided for standard object-oriented general purpose languages (GPLs). For example, support for debugging and testing a program written in a DSL is often nonexistent. This poster abstract introduces an investigation into a grammar-driven technique to build a framework to generate DSL testing tools (e.g., debugger and test engine). This research demonstrates the feasibility and applicability of using information derived from DSL grammars and existing software components to support end-user debugging and testing in a domain friendly environment.