Reconsider the competitiveness ofon-line strategies using k servers versus the optimal off-line strategy using h S k servers for the paging, weighted cache, and k-server problems. We show that when h < k the competitiveness of the marking algorithm, arandomized paging strategy, is no more than 2(ln ~ –lnln ~+~) when & > e, and at most 2 otherwise. We show this is roughly within a factor of two of optimal. Intuitively, we say a paging strategy is loosely Competitive if, for any sequence, at most cache sizes the fault rate of the pa ing strategy is at most an insignificant 7 amount above C(k times the fault rate of the optimal strategy. We show that LRU, FWF, and FIFO are loosely C'(k)-competitive provided C(k)/ in k ~ co and that the marking algorithm is loosely C(k)-competitive provided C(k) –21nlnk~ co. We formulate the off-line version of the k-server problem as a linear program and examine the dual to derive a lower bound on the performance of the optimal algorithm. We use this bound to show that for the weighted cache prc~blem the balance algorithm is-competitive. 1 Introduction In the most general version of the k-server lproblem, one is given a directed graph with edge lengths and k servers. Initially, the servers are positioned on nodes of the graph. A sequence rl, rz,.. .. r~ of requests for service at nodes is given and after each request al server must be moved to the node if a server is not already present. The goal is to minimize the total length travelled by the servers. In the standard version of the problem, the edge weights d(i, j) satisfy d(i, j) = d(j, i), d(i, i) = O, and d(i, j) < d(i, k) + d(k, j). A special case of the k-server problem is the weighted cache problem. In this case the nodes of the graph have non-negative weights, and the cost to service a request to a node with no server is taken to be the weight of the node. A special case of the weighted cache problem is the paging problem. In this case, all of the nodes have weight one. For this problem, we adopt traditional terminology: nodes are referred to as pages, servecl nodes are Size Varies said to be in the cache, and a request to an unserved node is a fault. If all of the …