Message Passing Interface (MPI) messages are centered around transmitting instances of MPI data types. The data types represented in MPI terms are usually modeled after data types native to the application. If a user does not want to transmit a field from the native data type, the user will sometimes align the MPI data type such that there is a gap in the displacement where the omitted field would be. With the resulting MPI data type now being non-contiguous, cycles are spent making the data contiguous for transmission and then expanding the data back out on the receiving side. We show that by performing data type fission (the process of segregating the transmitted fields from the non-transmitted fields) and aligning the MPI data type accordingly, we can completely eliminate the need to copy data during the packing and unpacking process, which can significantly improve the performance of communication-heavy Single Program Multiple Data applications.