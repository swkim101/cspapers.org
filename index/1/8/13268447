The Relational Production Language (RPL) solves the paradigm mismatch between expert systems and database systems by relying on the relational data model as the underlying formalism for an expert system. The result is a formally-defined production system language with immediate access to conventional databases. Working memory is modeled as a relational database and rules consist of a relational query on the left hand side (LHS) and database updates on the right hand side (RHS). This paper reports on the design of the RPL 1 0 prototype. The prototype directly executes RPL programs and capitalizes on the inherent advantages of the relational approach, particularly for intra-rule and inter-rule parallelism. By using a self-describing approach for representing the interpreter data structures, the interpreter is a self-controlling system that allows conflict resolution, error handling and a wide spectrum of software metrics to be explicitly specified using RPL meta-rules.