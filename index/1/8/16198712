A principal problem with dynamic validation of transactions with respect to a set of integrity assertions is the cost associated with the evaluation of such assertions. Although several methods of dynamic validation of transactions have been proposed there has been little attempt to analyze and to compare the performance of different validation methods. In this paper we evaluate compile time, run time, postexecution time, and mixed (run time --- postexecution time) validation methods for two semantic integrity subsystem designs. In one case we assume that the arguments of all integrity assertions are stored in secondary slow access memory and in the second we assume that the database is partitioned so that some data used for transaction validation are stored in fast access form.