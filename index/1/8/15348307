A distributed consensus algorithm allows n processes to reach acommon decision value starting from individual inputs. Wait-free consensus, in which a process always terminates within a finite number of its own steps, is impossible in anasynchronous shared-memory system. However, consensus becomes solvable using randomization when a process only has to terminatewith probability 1. Randomized consensus algorithms are typically evaluated by their total step complexity, which is the expected total number of steps taken by all processes.
 This work proves that the total step complexity of randomized consensus is Î˜(n2) in an asynchronous shared memory systemusing multi-writer multi-reader registers. The bound is achieved by improving both the lower and the upper bounds for this problem.
 In addition to improving upon the best previously known result bya factor of log2 n, the lower bound features agreatly streamlined proof. Both goals are achieved through restricting attention to a set of layered executions andusing an isoperimetric inequality for analyzing their behavior.
 The matching algorithm decreases the expected total step complexity by a log n factor, by leveraging themulti-writing capability of the shared registers. Its correctness proof is facilitated by viewing each execution of the algorithmas a stochastic process and applying Kolmogorov's inequality.