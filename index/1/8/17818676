Specifying interaction between users and smart environments is an important topic in pervasive computing. Both imperative and declarative languages have been investigated in this context. Declarative approaches require more abstract thinking and higher modeling effort but enable greater flexibility. A survey of related work suggests, however, that the high modeling effort of declarative approaches is prohibitive to their practical application. In contrast, imperative approaches lead to static control-flow and over-specification. Still, they are used, mainly due to their simplicity. Our approach supports a systematic transformation process from imperative models to declarative ones. Our method comprises an imperative, workflow-based language that we extended with novel declarative constructs and an algorithm for converting imperative models into declarative ones. Our approach requires only a modest level of declarative specification literacy for reaching a degree of flexibility that formerly only expert designers could achieve with hand-crafted declarative models.