Consider the problem of exploring a large state-space for a goal state. Although many such states may exist, finding anyone state satisfying the requirements is sufficient. All methods known until now for conducting such search in parallel fail to provide consistent linear speedups over sequential execution. The speedups vary between sublinear to superlinear and from run to run. Further, adding processors may sometimes lead to a slow-down rather than speedup, giving rise to speedup anomalies. We present prioritizing strategies which yield consistent linear speedups and requires substantially smaller memory over other methods. The performance of these strategies is demonstrated on a multiprocessor.