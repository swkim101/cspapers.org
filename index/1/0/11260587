Consider a queueing system in which customers (or jobs) arrive to one of Q separate queues to await service from one of S identical servers (Figure 1). Once a job enters a queue it does not leave that queue until it has been selected for service. Any server can serve any job from any queue. A job selected for service cannot be preempted. In this paper we consider jobs to be in a single class; for the multiple class result see [AFSH81a]. We assume once a queue has been selected, job scheduling from that queue is fair. In particular, our results hold for first come first serve as well as random selection [SPIR79] and, for that matter, any fair nonpreemptive scheduling policy within a queue. We assume that arrivals to each queue follow a Poisson process with the mean arrival rate to queue q being λq. The S identical exponential servers are each processing work at a mean rate of μ.
 This system is general enough to be adaptable for modeling many different applications. By choosing the policy employed for queue selection by the servers, we can model multiplexers, channels, remote job entry stations, certain types of communication processors embedded in communication networks, and sets of shared buses. In this paper we will use the latter application to discuss a realistic situation. The elements (“jobs”) in the queues are messages to be sent from modules connected to the shared bus of the system. The servers are the buses; their service times are equal to the message transmission times. The queues are in the interface modules connected to and sharing the buses.