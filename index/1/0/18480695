How does a programmer decide which of two different algorithms to use to solve a problem? This is a particularly difficult question because one finds that often one part of the solution of a problem “dominates” the running time of the solution, i.e. uses a large fraction of the execution time. Further, this special part of the solution requires the programmer to choose an algorithm for its solution from a large number of alternatives. This tutorial describes one approach used in computer science to measure the complexity of a program by modeling programs with mathematical functions that describe their execution time. We break the solution of this problem into three parts. We first discuss the notion of how two functions are compared. We then show how algorithms can have their execution time modeled by functions. Finally, we see how to compare algorithms by comparing the functions that describe them.