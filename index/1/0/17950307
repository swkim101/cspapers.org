Binding-time analysis has received increased att ention in the literature recently due to its importance in partial evaluation. This mimics the growth in int crest over the last decade in strictness analysis, due to its implications for code quality of compiled lazy functional languages. In this paper we eXamine both analyses in a common framework, and demonstrate that they are equivalent. As a pract ical consequence of the equivalence, we show how Hughesâ€™ work on polymorphic strictness analysis carries over to binding-time analysis.