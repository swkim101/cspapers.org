[GGM] prove that if there is a Pseudo-random number generator, then there is a pseudo-random function generator. We prove here that if there is a pseudo-random function generator, then there is a pseudo-random permutation generator. We also prove that if two permutation generators which are "slightly secure" are cryptographically composed, the result is more secure than either one alone. 1. I n t r o d u c t i o n 1 . I M o t i v a t i o n The field of cryptography has changed dramatically over the past few years. In the old age, cryptography was an art more than a science. Cryptosystem design was based on clever ad hoe ideas. The security of the cryptosystem rested solely on the cleverness of the designer; a cryptosystem was deemed secure until it was broken (in many cases the cryptographer only knew it was broken long after the breaker). Certain design rules, such as cryptographic composition, were recognized as playing a crucial role in improving security. Eventually, the apparent increase in security obtained by using these design rules became part of the folklore, although there were no formal proofs that security was increased. The foundations of cryptography were not yet established, there was no established formal framework for talking about a cryptographic protocol, security, etc. Thus, there was no formal way to either confirm or dispute the folklore. More recently, researchers have formalized the Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. Â© 1986 A C M 0-89791-193-8/86/0500/0356 $00.75 notions of cryptographic protocols and security until today cryptography is an integral part of computational complexity. Many cryptosystems whose security is based on mathematical assumptions have come out of this research. However, the security of cryptosystems typically used in practice is still based on the old folklore. This paper is an attempt to use the new cryptographic rigor to formalize and analyze some of the previously unexamined folklore. One of the unexpected fruits of this work is that we show how to construct a pseudo-random permutation generator from a pseudo-random number generator. This result, besides the nice theoretical implications, has a very practical implication: One can generate a secure and relatively efficient block private key system from a pseudo-random number generator. One can also view this result as a partial justification of the design of the Data Encryption Standard (DES): we use some of the DES design features in the construction. As mentioned above, part of the cryptographic folklore is that cryptographic composition increases security. We formalize the notions of cryptographic composition and partial security in this paper. We then prove that indeed the folklore is correct, i.e. the cryptographic composition of two partially secure permutation generators yields a more secure permutation generator. 1.2 T h e D a t a E n c r y p t l o n S t a n d a r d The Data Encryption Standard (DES) is a private key cryptosystem developed by I.B.M. for the U.S. National Bureau of Standards, with an undisclosed amount of highly classified kibbitzing by the supersecret National Security Agency. The reader can consult [De] for more information about DES and [Ba] for more information about the National Security Agency and its rble in the development of DES. DES has features which make it very practical to use. However, one of the properties that DES does not have (as far as we know) is that it is provably secure