Point location is the problem of preprocessing a planar polygonal subdivision <i>S</i> into a data structure in order to determine efficiently the cell of the subdivision that contains a given query point. Given the probabilities <i>p<subscrpt>z</subscrpt></i> that the query point lies within each cell <i>z</i> âˆˆ <i>S</i>, a natural question is how to design such a structure so as to minimize the expected-case query time. The entropy <i>H</i> of the probability distribution is the dominant term in the lower bound on the expected-case search time. Clearly the number of edges <i>n</i> of the subdivision is a lower bound on the space required. There is no known approach that simultaneously achieves the goals of <i>H</i> + <i>&Ogr;</i>(<i>H</i>) query time and <i>&Ogr;</i>(<i>n</i>) space. In this paper we introduce entropy-preserving cuttings and show how to use them to achieve query time <i>H</i> + <i>&Ogr;</i>(<i>H</i>), using only <i>&Ogr;</i>(<i>n</i> log* <i>n</i>) space.