Random testing of programs is usually (but not always) viewed as a worst case of program testing. Test case generation that takes into account the program structure is usually preferred. Path testing is an often proposed ideal for structural testing. Path testing is treated here as an instance of partition testing. (Partition testing is any testing scheme which forces execution of at least one test case from each subset of a partition of the input domain.) Simulation results are presented which treat path and partition testing in a reasonably favorable way, and yet still suggest that random testing may often be more cost effective. Results of actual random testing experiments are presented which tend to confirm the viability of random testing as a useful validation tool.