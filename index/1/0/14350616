Keyword-based searches on the World Wide Web are often of limited use, because they return too many uninteresting matches. We propose here a novel mechanism that permits the user to specify directory sets to restrict the space of documents searched, and, at the same time, increase the speed of the search. We view the Web as a single, huge hierarchy, reeected in the structure of the URLs. We refer to each sub-tree in this hierarchy as a directory, and group semantically related documents from multiple directories into a directory set. Starting from a collection of pre-deened directory sets, a user can dynamically generate new directory sets by using operators in a directory set algebra, and focus keyword-based searches to documents that belong to a (pre-deened or dynamically generated) directory set. We design algorithms for eeciently evaluating expressions in the directory set algebra, and describe a technique for tightly integrating directory sets into keyword-based search engines. Finally, we validate our ideas using a realistic case study for a sig-niicant fragment of the AT&T intranet, and 211 pre-deened directory sets. 1 Motivation The World Wide Web is a very large and rapidly growing repository of documents. The utility of the Web is considerably enhanced by the presence of search services (e.g., Alta Vista 1 , Yahoo 2) that locate documents matching user queries, and the explosion of search services (see, e.g., the search services listed under the \Internet Search" feature provided by Netscape Navigator and other Web browsers) is testimony to the increasing importance of the problem of searching for documents on the Web. There are two main approaches that have been used with considerable success on the Web: search engines and web guides. Search engines such as Alta Vista essentially use text indexing techniques to index a large fraction of the documents on the Web. Queries to these search engines are typically speciied by providing keywords, and the query answers are pointers (URLs) to matching documents. There are many advantages of this approach: several search engines do an eeective job of nding many possible matching documents, the index can be kept (reasonably) up-to-date in an automatic fashion, and the approach is scalable. The eeective-ness of these search engines is, however, limited by the fact that searching by keywords alone returns many matches that may not be of interest to the user, and the large number of matches makes it diicult to â€¦