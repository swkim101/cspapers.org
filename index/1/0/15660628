In this paper, we evaluate the effects of applying programming language subsets to the programming environment used by novice (CS1) students in a closed-laboratory setting, as well as reducing the complexity of the user interface for the environment. Our goal in this effort was to assess if such interface and application-level changes adversely impact the student or hinder the later migration to a traditional professional-strength programming environment.We focus on the comparison of the quantitative data captured from the closed-laboratory sessions (assignment grades, number of syntax / semantic errors, and the number of compilation / execution attempts) involving subjects that used a new programming environment featuring a less complex interface in two forms: one lacking support of language subsets, and one supporting the application of language subsets.We found that while using the environment supporting the application of language subsets, there was no difference in the compilation-attempt rate, the number of errors did not increase, and student grades were equivalent between the experiment groups. Additionally, following a migration to the professional environment from the simplified environment, student grades were equivalent to those that had used the professional environment throughout the experiment. Student reaction to the experimental environment was very positive, especially related to the removal of unused tools and project management features.