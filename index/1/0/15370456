As agent technology practitioners, some time ago we determined to develop an extension to UML 2.0 that addressed our specific needs, such as modeling autonomicity, proactivity and role-based behavior. We called this extension the Agent Modeling Language (AML) and have recently published the metamodel and specification for public use. In a recent project, we realized that AML could also be applied to the domain of autonomic computing and so decided to publish some of our findings in this paper. AML can be directly used by designers of autonomous and autonomic computing systems to visually model their architectures and behaviors. Herein we provide an overview of the scope, approach taken, the specific language structure and optional extensibility. The core modeling constructs of AML are explained using a series of didactic examples describing the IBM Unity architecture, an well-grounded exemplar of an autonomic system. We thus focus on the features of AML that differentiate it from UML 2.0 with a specific focus on those aspects that support the autonomic principles of self-healing and survivability.