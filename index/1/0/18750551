In this paper, I introduce a new formal system, ACCL, based on Curien's <italic>Categorical Combinators</italic> [Cur86a]. I show that ACCL has properties not possessed by Curien's original combinators that make it particularly appropriate as the basis for implementation and analysis of a wide range of reduction schemes using shared environments, closures, or λ-terms. As an example of the practical utility of this formalism, I use it to specify a simple lazy interpreter for the λ-calculus, whose correctness follows trivially from the properties of ACCL.
I then describe a <italic>labeled</italic> variant of ACCL, ACCL<supscrpt>L</supscrpt>, which can be used as a tool to determine the degree of “laziness” possessed by various λ-reduction schemes. In particular, ACCL<supscrpt>L</supscrpt> is applied to the problem of <italic>optimal</italic> reduction in the λ-calculus. A reduction scheme for the λ-calculus is optimal if the number of redex contractions that must be performed in the course of reducing any λ-term to a normal form (if one exists) is guaranteed to be minimal. Results of Lévy [Lév78,Lév80] showed that for a natural class of reduction strategies allowing <italic>shared</italic> redexes, optimal reductions were, at least in principle, possible. He conjectured that an optimal reduction strategy might be realized in practice using shared closures and environments as well as shared λ-terms. I show, however, using ACCL<supscrpt>L</supscrpt>, a practical optimal reduction scheme for arbitrary λ-terms using only shared environments, closures, or terms is unlikely to exist.