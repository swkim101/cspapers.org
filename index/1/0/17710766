Fault-tolerant programs contain redundancy to provide tolerance for residual program errors and hardware faults during task execution. The concept of parallel execution of fault-tolerant programs, i.e., overlapping main-stream computation with redundant computation related to validation and recovery, was developed in [8]. A memory scheme, referred to as “duplex memory”, was also designed to realize the full potential of parallel execution. Although the duplex memory sketched in [8] is valid, it suffers from high storage and time overhead. This paper presents an improved version of duplex memory and shows its optimality in terms of storage overhead for parallel execution. A scheme for mapping logical addresses of variables to physical memory locations is also discussed.