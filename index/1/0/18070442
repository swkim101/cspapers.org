We present an extension, TeleoR, of Nilsson's Teleo-Reactive (TR) rule based robotic agent programming language[22]. For both languages programs essentially comprise sequences of Guard ~>Action rules grouped into parameterised procedures. The Guard is a deductive query to a set of rapidly changing percept facts generated from the most recent sensor values. For TR, the Action is either a tuple of primitive robotic actions, to be executed in parallel, or a single call to a program procedure, which can be a recursive call, or a BeliefStoreupdate. TeleoR has extra forms of action. The procedures encode goal (teleo) directed reactive task and sub-task behaviours of robotic agents. TR/TeleoR programs are robust and opportunity grabbing, and so are well suited to human/robot or robot/robot co-operative tasks requiring flexible behaviour. TeleoR, extends TR in having: types and higher order features; extra forms of action rules that temporarily inhibit other rules in the same procedure; repeatable sequences of time capped actions; wait/repeat re-start of failed actions; belief store update and message send actions linked with any rule; a flexibly typed higher order LP/FP programming language for BeliefStore inference; support for the high level programming of multi-tasking agents that interleave the use of subsets of a set of independent robotic resources. All the extensions were driven by application needs. The use of QuLog enables us to guarantee by compiler analysis that all guarded rule actions will be fully instantiated and correctly typed when sent to a robot, perhaps via a ROS interface. The focus of this paper is on the extensions for single task communicating robotic agents. Our goal was to extend TR without losing the elegance and simplicity of Nilsson's language. We also wanted to be able to give the extended language a formally defined operational semantics, building upon one we had given for TR. The extensions, their semantics, and their implementation were developed in parallel. A methodology we can recommend.