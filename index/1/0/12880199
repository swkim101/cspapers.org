The purpose of many computer science courses is to enhance the programming skills of the student, including the ability to design and implement appropriate algorithms. In such courses, examinations should therefore contain problems which test for algorithmic skills. In particular, there should be problems which require the student to write small sections of code, usually in the form of a subprogram. Students often perceive these questions as “programming” problems; however, it is more accurate to state that these are algorithmic problems, since such questions primarily measure algorithmic skills. In addition, since such exam problems address topics which are a part of the course content (e.g. stacks, queues, and tables in a data structures class), the student's knowledge of these topics is also tested and reinforced.
This paper discusses how examination questions which test algorithmic skills have been implemented in a data structures course at Northeast Louisiana University. Arguments both for and against using such test questions are discussed, as well as the proper format and amount of this type of problem. The results of a survey of data structures students at Northeast concerning this topic is also presented.
There has been relatively little discussion on the topic of computer science examinations in the literature. It is hoped that the publication and presentation of this paper will stimulate dialogue in this area among academicians.