Let <italic>H</italic> be an <italic>n</italic> x <italic>n</italic> mesh-connected array of processors. Each processor is assumed to fail (independently) with probability <italic>p</italic>. Raghavan [5] gave an algorithm that with high probability routes packets in this mesh with <italic>O</italic>(log <italic>n</italic>) dilation and <italic>O</italic>(log<supscrpt>2</supscrpt><italic>n</italic>) load so long as <italic>p</italic> ≤ 0.29. KKLMRRTT [3] improve the load to <italic>O</italic>(1) for “small” <italic>p</italic> while keeping the <italic>O</italic>(log <italic>n</italic>) bound for dilation and showing an <italic>o</italic>(1) bound for congestion. In this paper we show these bounds hold for <italic>p</italic> as high as *** 0.4. We also consider the  problem where links rather than processors fail and shows these same bounds hold for <italic>q</italic> < 1/2. In both cases these bounds are tight: for greater probabilities of failure the above embedding bounds cannot be achieved. This short cutoff follows from a zero-one result of percolation theory.