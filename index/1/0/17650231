Pattern databases (PDBs) store heuristic estimates that are used to improve the performance of heuristic search algorithms. They are key to the success of heuristic search in many application domains. While it is known [12] that the effectiveness of PDBs critically depends on their size, current implementations use only small PDBs because they require random access to main memory.
 We present two MapReduce implementations that do not require random memory access and therefore enable larger PDBs than were previously possible. The first one, named MR-BFFS, is a parallel breadth-first frontier search. It is used for generating arbitrarily large PDBs out-of-core. The second one, MR-IDA*, uses out-of-core PDBs to perform a breadth-first iterative-deepening A* search. Both scale perfectly on massively parallel systems and they make use of all available resources like CPUs, distributed memories, and disks.
 We demonstrate the performance of our algorithms and provide, as a byproduct of this research, the first complete evaluation of dual additive PDBs for the 8-puzzle. We also provide data on larger problem spaces and discuss the effectiveness of PDBs for improving the search.