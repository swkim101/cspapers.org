This demonstration will present Panini, a new programming language designed with an objective to help programmers with concurrent programming. Current abstractions for concurrency fall into two categories: explicit abstractions for concurrency such as threads, and implicit abstractions for concurrency such as actors.Explicit concurrency abstractions are hard to use, reason about, and error prone. Implicit abstractions like actors help solve these problems, but they require programmers to adapt to the asynchronous style of programming. Many programmers find this adaptation hard. We will demonstrate the notion of capsules in Panini. A capsule is an implicit abstraction for concurrency that has many properties of actors, but provides a logically synchronous programming model to programmers. Main technical challenge in realizing capsules was to maximize concurrency while minimizing overhead and abstracting away all the details of concurrency from the Panini programmer. We will also demonstrate scalability benefits of Panini programs without writing a single line of explicitly parallel code, and compile-time checking of concurrency-related properties such as confinement violation, and sequential consistency.