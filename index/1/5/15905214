Although most people agree that understanding an application domain is a critical prerequisite to developing software within that domain [3], there is not yet a generai consensus on the proper representation of that application knowledge. We define an application domain model as a formal representation of the knowledge necessary to support specific operational goals. These goals include eliciting, verifying, and formalizing software requirements and specifications, generating code from a system specification, identifying the semantics of existing code, testing program functionality, training users, and so on. In general, an application domain model contains explicit information about an application domain that would otherwise only be implicitly captured in source code, text documents, or other artifacts. Even formal specification languages fail to capture information about application domains. As Jackson and Zave [5] point OUL “some things can not be said directly in [a formal specification] language and must be obscurely encoded.” The process of modeling application domain knowledge is one of formalizing the information which is typically found only in the text annotations of formal languages or implicitly embedded in the actual source code of programs written within a particular application area. WhaL then, is contained within a domain model? And how is that information represented? In order to answer these two questions, we must examine the reasons that any particular domain model is constructed. Operational goals are always implicit in the construction of a domain model and are essential to determining the form and content of that model. Since models are abstractions, modeling strategies inevitably differ depending upon the nature of the material to be abstracted, the perspective of the modeler, and the future use of the abstraction. For the last 25 years, Amarel [1] and others have pointed out that representations are designed to achieve particular purposes, and these purposes—the operational goals—inherently bias any particular solution and dictate the final form and function of the model. This panel will present several applications of domain modeling from the perspective of different researchers. For a summary of the panel write the author at the address listed below.l