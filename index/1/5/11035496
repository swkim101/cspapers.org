The goal of design automation for VLSI is to provide tools which permit rapid, correct, and economical design of custom circuits subject to constraints of area, time, or power. This design process can be seen as the transformation of a given input specification (e.g. a formal representation of an algorithm) through a succession of representations (architecture, functional elements, gates, circuits, layout) until a mask specification is obtained which can then be interpreted by a fabrication process to yield correctly working physical circuits. The major problems faced, then, are the selection of these representations together with the means to create, modify and transform them. Hovering over these needs is the growing cloud of complexity, which demands organized systems design such that the resulting specification can be easily understood, changed, and extended along with other designs to form still larger circuits. One term that ties all of these requirements together is productivity, and IC design is currently facing all the problems encountered in software system design. Just as programmers produce very few debugged instructions per day, today's IC designers usually produce less than ten “debugged transistors” per day when creating new logic circuits.