Extensions of the traditional atomic transaction model are needed to support the development of multi system applications or work ows that ac cess heterogeneous databases and legacy applica tion systems Most extended transaction model s use conditions involving events or dependencies between transactions Intertask dependencies can serve as a uniform framework for de ning extend ed transaction models In this paper we introduce event attributes needed to determine whether a dependency is enforceable and to properly sched ule events in extended transaction models Using these attributes and a formalizationof a dependen cy into the temporal logic CTL we can automat ically synthesize an automaton that captures the computations that satisfy the given dependency We show how a set of such automata can be com bined into a scheduler that produces global com putations satisfying all relevant dependencies We show how dependencies required to implement re laxed transactions such as Sagas can be enforced and discuss brie y the issues of concurrency con trol safety and recoverability