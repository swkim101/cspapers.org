Extended Abstract For many years, fluid-limit techniques have provided useful asymptotics for evaluating the performance of computer and communication systems. As a tool for the stability analysis of queueing networks, the fluid limit approach was introduced several years ago by Rybko and Stolyar [8], and further developed by Dai [6], Stolyar [9], Dai and Meyn [7]. Within the last couple of years, the present authors demonstrated the potential of this approach in the stochastic analysis of algorithms [5]. This short note gives a rough sketch of fluid limits and their application to the analysis of bin packing algorithms; the main intent is to show the power of the fluid-limit approach and the promise it holds as a novel tool for the probabilistic analysis of algorithms. New performance results for classical packing algorithms come as a by-product. A fluid-limit process approximates a given stochastic process on a large scale in both time and space. After scaling the latter down, the resulting process is often deterministic in the limit, as the scale parameter increases. For example, let (F(t), t 2 0) be a rate-X Poisson arrival (counting) process and consider the fluid-limit scaling (iF(nt), t > 0). By the strong law of large numbers, the fluid limit n + 00 of the scaled process is simply a straight line with slope X and a position determined by a given initial condition. As illustrated below, stability of a stochastic process can be inferred from a corresponding property of its fluid limit; the power of the approach then lies in the fact that arguments based on fluid liits are typically much simpler. To illustrate this tool in action, consider the following discrete-time model of bm packing that arises in multimedia communication systems, computer storage allocation, and transmission along slotted communication channels [5]. Items with sizes in (0, I] arrive randomly at integer times and join a queue waiting to be packed into unit-capacity bins. At each integer time, a set of items summing to no more than 1 is drawn from the queue and packed in the next empty bin according to a given algorithm. At the end of the unit interval devoted to packing a bin, new item arrivals, if any, are admitted to the queue. For simplicity, we discretize item sizes so that each falls in the set {l/k,.. . , (k-1)/k} for some given k > 1. Let Xi, 1 5 â€¦