Given a graph G = (V, E) with non-negative edge lengths, a subset R ⊂ V, a Steiner tree for R in G is an acyclic subgraph of G interconnecting all vertices in R and a terminal Steiner tree is defined to be a Steiner tree in G with all the vertices of R as its leaves. A bottleneck edge of a Steiner tree is an edge with the largest length in the Steiner tree. The bottleneck Steiner tree problem (BSTP) (respectively, the bottleneck terminal Steiner tree problem (BTSTP)) is to find a Steiner tree (respectively, a terminal Steiner tree) for R in G with minimum length of a bottleneck edge. For any arbitrary tree T, lenb(T) denotes the length of a bottleneck edge in T. Let Topt(G, BSTP) and Topt(G, BTSTP) denote the optimal solutions for the BSTP and the BTSTP in G, respectively. Given a graph G = (V, E) with non-negative edge lengths, a subset E0 ⊂ E, a number h = |E \E0|, and a subset R ⊂ V, the incremental bottleneck Steiner tree problem (respectively, the incremental bottleneck terminal Steiner tree problem) is to find a sequence of edge sets {E0 ⊂ E1 ⊂ E2 ⊂ … ⊂ Eh = E} with |Ei\Ei-1| = 1 such that Σh i=1 lenb(Topt(Gi, BSTP)) (respectively, Σh i=1 lenb(Topt(Gi, BTSTP))) is minimized, where Gi = (V, Ei). In this paper, we prove that the incremental bottleneck Steiner tree problem is NP-hard. Then we show that there is no polynomial time approximation algorithm achieving a performance ratio of (1-ε) × ln |R|, 0