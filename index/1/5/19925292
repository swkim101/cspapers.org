Micro-programming has been defined as an orderly approach to the design of a control section of a computer using control signals arranged in fixed-length words. The control section is the part of a computer which controls the activities of the memories, the central processing unit, the arithmetic unit and the peripheral units. The most elementary operation is called a micro-operation. Such an operation could be a comparison of two registers or a register to register transfer. Some micro-operations have implicit operands which always are used. Others use operands which are expressed explicitly within the control word. Each control word, or micro-instruction, contains one or more micro-operations which are performed in a fixed time interval. The set of micro-instructions required to execute one machine language instruction is called a micro-program.
 Since many micro-operations can be executed simultaneously, encoded control also allows faster execution of the same algorithms. There are various ways of controlling the sequence of micro-instruction.
 There are four ways in which a micro-program simulator can assist in developing a read only control memory. First, micro-programs can be debugged before they are manufactured. Secondly, simulation can aid in the resolution of several alternative designs. A third use is in the verification of fault test procedures. Finally, the simulator produces a tested data base which can be used to provide block diagram documentation and to produce input to a machine which manufactures the read only memory.