Two conflicting goals play a crucial role in the design of routing schemes for communication networks. A routing scheme should use as short as possible paths for routing messages in the network, while keeping the routing information stored in the processors' local memory as succinct as possible. The efficiency of a routing scheme is measured in terms of its <italic>stretch factor</italic> - the maximum ratio between the length of a route computed by the scheme and that of a shortest path connecting the same pair of vertices.
Most previous work has concentrated on finding good routing schemes (with a small fixed stretch factor) for special classes of network topologies. In this work we study the problem for general networks, and look at the entire range of possible stretch factors. The results exhibit a tradeoff between the efficiency of a routing scheme and its space requirements. We present almost tight upper and lower bounds for this tradeoff. Specifically, we prove that any routing scheme for general <italic>n</italic>-vertex networks that achieves a stretch factor <italic>k</italic> ≥ 1 must use a total of &OHgr;(<italic>n</italic><supscrpt>1+1/2<italic>k</italic>+4</supscrpt>) bits of routing information in the networks. This lower bound is complemented by a family <italic>H</italic>(<italic>k</italic>) of <italic>hierarchical</italic> routing schemes (for every fixed <italic>k</italic> ≥ 1), which guarantee a stretch factor of <italic>&Ogr;</italic>(<italic>k</italic>), require storing a total of <italic>&Ogr;</italic>(<italic>n</italic><supscrpt>1+1/<italic>k</italic></supscrpt>) bits of routing information in the network and name the vertices with <italic>&Ogr;</italic>(log<supscrpt>2</supscrpt> <italic>n</italic>)-bit names.