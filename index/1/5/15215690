A (software) development method has at least the following components: A language core for representing systems and their components, An (informal) procedure for guiding the development , (Informal) criteria for measuring progress and a “decision procedure” for terminating the development process. We see an abundance of notions and notations in the 00 paradigm: multiple 00 programming languages and multiple “formalisms” for 00 analysis and design. Procedures for guiding the development process are sparse. The sequence in which notational apparatus is presented in the literature is often the default process. In Rumbaugh et al, we find (only) a check list of development activities. The literature gives us some guidance with respect to major activities of the development process. The waterfall, spiral and fountain model all agree upon distinctions such as: requirements capture, analysis, design, implementation, testing, maintenance. They also agree in that they do not provide a finer granularity of the inside activities of analysis and design. We postulate that this omission is a key inhibitor to a more widespread acceptance of the 00 paradigm by project managers. They do not know how to plan a non-trivial 00 software development project. The purpose of this panel is to take the first steps towards developing such process models. More specifically the panelists have been asked to address the following questions: