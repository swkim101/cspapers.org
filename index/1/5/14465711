Shared window systems enable existing applications to be shared in the context of a real-time teleconference. The development and successful use of several such systems, albeit within limited user communities, testifies to the merits of the basic idea. However, experience to date has suggested a number of areas that have not been adequately addressed, namely: spontaneous interactions, shared workspace management, floor control, and annotation and telepointing. This paper focuses on the ramifications, for the software designer, of various user requirements in these areas. While the recommendations that result are motivated by the desire to enable continued use of collaboration-transparent applications, addressing them involves the development of systems software that is distinctly collaboration-aware.