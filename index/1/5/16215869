We address the problem of recovery in object-oriented data-bases from considerations of the semantics of committed transactions and the efficiency of recovery procedures. The recovery strategy used is update-in-place. We show that efficient recovery procedures should allow transactions to abort independently of one another by executing inverse operations. We refer to these requirements collectively as the recovery isolation property. We present a formal definition of recovery isolation and prove that schedules possessing this property do not suffer from rollback dependencies. Recovery isolation is useful in constructing concurrency control protocols that go beyond commutativity, and in parallel and high performance database systems. We define the notion of strict schedules for object-oriented databases as an extension of the analogous definition for read and write operations. We show that strict schedules possess the recovery isolation property.