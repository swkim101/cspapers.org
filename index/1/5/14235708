An important strategy to enhance both the reliability and performance of high-level program execution is to have computer architecture provided with the mechanisms, such as i) to address information in a unified manner regardless of the structure and/or of the size of information objects, and ii) to dynamically check the eligibility of information accesses. This paper firstly gives the foundation for such abstraction mechanisms through examining the semantic structure of information objects. Information is hereby formalized as a set of relations between an access and the entity that is accessed. The relations are hierarchically classified into four categories, each of which associates to the corresponding level of abstraction. Object-oriented architecture which reflects this hierarchical classification directly in its storage organization is then proposed. This architecture is called the abstract storage architecture. Issues in designing the abstract storage architecture are described. The effectiveness of such architecture is concluded from the view points of both the implementation of existing high-level languages and the design of future high-level languages.