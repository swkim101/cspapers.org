A logic programming language offers several kinds of parallelism for its execution. Among these, this paper concentrates on OR-parallelism which is an alternative to the backtracking mechanism of a serial interpreter, and proposes an abstract model for OR-parallel interpretation. It consists of tokens and five kinds of function units mutually connected as a process graph. The overall processing is done by the flows of tokens among these units. We also present a mechanism for token labeling, which makes this process graph reentrant. A simulation result is given to show how efficiently the model works in terms of parallelism.