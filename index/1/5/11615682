This paper presents a constraint-solving method that obeys the principle of object encapsulation. Under this method, constraints are translated into procedures for achieving constraint satisfaction. Neither the constraints nor their procedural translations refer directly to an objectâ€™s implementation; all object references are through the interfaces provided by classes. Translation is performed using definite-clause backward chaining, a technique borrowed from logic programming. Because object classes guide the translation process, the method is applicable to objects of all data types.