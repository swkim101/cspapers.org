Given a subproblem, S, of a constraint satisfaction problem, we can decompose the problem into a set of disjoint subproblems one of which will be S. This decomposition permits exploitation of problem-specific metaknowledge, a priori or acquired knowledge, about S. If we know that S is unsolvable, for example, the decomposition permits us to extract and then discard S, restricting the search for a solution to the remaining subproblems. A variety of potential uses for the decomposition method are discussed. A specific method that dynamically discards failed subproblems during forward checking search is described, and its utility demonstrated experimentally. 1 Introduction 1.1 Overview Constraint satisfaction problems (CSPs) involve finding values for problem variables subject to restrictions (constraints) on what combinations of values are allowed. They have wide application in artificial intelligence, in areas ranging from planning to machine vision. Fig. la shows a sample CSP. The problem is to assign a color to each vertex of the graph satisfying the restrictions that vertices joined by an edge cannot be assigned the same color. Coloring problems are useful for illustration purposes (and actually have applications, e.g. to scheduling). They are in general NP-complete, though obviously the example here is a trivial one. The CSP variables in this coloring problem are the vertices of the graph. The domain of values for each variable is the set of colors available for the vertex; in this case colors a, b, c (aquamarine, black and coral) are available at each ver-tex. The constraints are the "not same color" (i.e. "not equal") restrictions corresponding to each edge. Call any choice of a value for each variable, e.g. a for X, b for Y, a for Z, a possibility. A possibility that satisfies all the constraints is a solution. At times we may have special knowledge of a CSP subproblem and wish to extract it from the CSP, to decompose the CSP in a manner that permits us to consider the subproblem and the remainder of the CSP separately. This paper provides a mechanism for doing so for a large class of subproblems. For example, Fig lb shows a subproblem of the coloring problem. This is an example of what we call here a subdomain subproblem, essentially one in which the domains of some variables have been reduced. This particular subproblem obviously has no solution. It represents a special case of the easily inferred conclusion that a â€¦