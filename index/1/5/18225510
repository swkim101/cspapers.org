Multidisciplinary concurrent engineering needs to model and manage different views of complex designs. Previous attempts to address the problem of creating views of complex objects in object oriented database systems focus on the structure of complex objects; little attention is paid to how complex object behavior is effected when creating views. We believe that designing functionally correct behavior for a complex object should be a major consideration when defining a view to guarantee correctness of the derived classes.
In this paper, we study the problem for designing functionally correct views of complex objects in concurrent engineering. View behavioral modeling requirements are presented. A behavior model that satisfies these requirements is presented. This model is demonstrated on an example complex object that represents process management.