Many object-oriented programming language implementations have been extended to support persistence, distribution or atomicity by integrating the necessary additional support with the language''s runtime library. We argue that a better approach is to provide a Generic Runtime library (the GRT) which implements that part of the support which is independent of any language. The GRT should be designed to interface to a language''s existing runtime in such a way that the language''s local object reference format and invocation mechanism can be retained. Hence existing compilers do not necessarily have to be modified, and a range of different object-oriented languages can be supported simultaneously. This approach has significant merits including: the ease with which a language can be extended; the sophistication of the underlying support immediately available to a language implementer; and the ability to support fine-grained language interworking.