String matching is rich with a variety of algorithmic tools. In contrast, multidimensional matching has a rather sparse set of techniques. This paper presents a new algorithmic technique for two-dimensional matching, that of <italic>periodicity analysis</italic>.
Periodicity in strings has been used to solve string matching problems. The success of these algorithms suggests that periodicity can be as important a tool in multidimensional matching. However, multidimensional periodicity is not as simple as it is in strings and was not formally studied or used in pattern matching.
This paper's main contribution is defining and analysing two-dimensional periodicity in rectangular arrays. In addition, we introduce a new pattern matching paradigm - <italic>Compressed  Matching</italic>. A text array <italic>T</italic> and a pattern array <italic>P</italic> are given in compressed forms <italic>c(T)</italic> and <italic>c(P)</italic>. We seek all appearances of <italic>P</italic> in <italic>T</italic>, <italic>without decompressing T</italic>. By using periodicity analysis, we show that for the two-dimensional run-length compression there is a <italic>O(|c(T)|log|P|+|P|)</italic>, or <italic>almost optimal</italic> algorithm that can achieve a search time that is sublinear in the size of the text <italic>|T|</italic>.