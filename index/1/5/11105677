We consider the problem of generating code for a program so that the number of unconditional branch instructions, or “jumps”, in the object code is minimized. Figure 1 shows an example of a program and the machine code that is normally produced for it; all six jumps therein can be eliminated by reordering the blocks of machine code.*) In this paper, we present an algorithm that finds an ordering of the basic blocks of a program that is optimal with respect to the number of jumps, provided the program is constructed using only the “structured” control structures if–then-else, loop, and exit. (The prob—— — — lem for arbitrary, “unstructured” programs is NP-complete.) The running time of the algorithm is quadratic in the size of the program, provided the maximum number of loops exited by any exit statement is bounded by a constant. We confine ourselves to techniques that preserve the flowgraph of the program exactly; techniques such as code duplication are outside the scope of this paper.