In this paper, we present a novel approach that enables students in graduate compiler courses to examine and experiment with a real compiler without becoming overwhelmed by complexity. The key to the idea is the use of a debugger directly on a compiler during the compilation process. By providing instructions on breakpoints and variables of interest, the student is only shown the relevant portions of the compiler; the rest is hidden. We describe our strategy of using exercise sessions targeted toward illustration of core compiler concepts such as lexical analysis, parsing and code generation.