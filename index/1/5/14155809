An implementation technique for functional languages that has rcceived recent attention is graph reduction, which offers opportuniqt for the exploitation of parallelism by multiple processors. While several proposals for parallel graph reduction machines have been made, differing terminology and approaches make these proposals dimcuk to compare. This paper presents a systematic approach to the study of parallel graph reduction machines, and proposes an abstract architecture for such a machine that is independent of the base language and communication network chosen for an actual implementation. The abstract architecture, in addition to serving as a foundation for the design of real machines, highlights the necessary features of all parallel graph reduction machines. 1. Introduct ion One of the many implementation techniques for functional languages that have received recent attention is graph reduction. In graph reduction machines, the program is represented as a directed graph of operators and data, and is executed by the repeated application of identities, or reduclion rules, that simplify portions of the graph until the original graph is transformed into the final result. Graph reduction approaches offer opportunities for parallel evaluation since several portions of the program graph may bc reduced l 2 simultaneously; Keller el. aL, Darlington and Reeve, and Sleep and Burton 3 have each made proposals for parallel graph reduction machines. The proposed graph reduction machines use different reduction languages, different communication networks, and different mechanisms for coordinating parallel execution, making it difficult to compare the machines to determine what aspects represent necessary features of all graph reduction machines and what aspects are features of the individual machines. To facilitate a more systematic evaluation of parallel graph reduction machines, the design issues are separated into a hierarchy of layers as shown in Figure 1-1. In the innermost layer is the base language; that is, the set of legal graphs, the set of rules for transforming a graph into a printable answer, and an algorithm for their systematic application. Since the design of a sequential reduction machine such as the G-machine 4 encounters these issues alone, the issues in this layer can be called the sequential-semantic issues. One layer out are the issues related to the "parallelization" of the reduction process. The employment of many individual processing elements (PEs) in the concurrent reduction of a single graph introduces problems of where to place the graph in relation to the PEs, of what information must be transferred between PEs, and of what work must be done by each PE over and above thc application of rcduction rules. These can be called parallel-semantic issues, Finally, in the outermost layer, is the structure of the Topological Layer Structure of Communication Network