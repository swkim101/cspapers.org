A number of automatic code generation systems have been proposed for stencil computations on modern parallel computers. However, codes they generate are rather inefficient. Typically they achieve < 10% of the peak performance of the platforms. The primary cause for this inefficiency is that the generated codes contain several layers of array indices for array accesses. This layers of indices prevent the compiler from generating efficient assembly codes. In this paper we propose a new approach for the automatic code generation in which the generated code is "compiler-friendly", in the sense that the compilers can generate highly optimized assembly codes than typical automatically generated codes. We demonstrate the effectiveness of our approach with a simple example of diffusion equation on a small grid. The measured efficiency can reach 85% of the theoretical peak.