For many years now, the annual SIGCSE Symposium has been the primary coming-out party for new software systems aimed at computer science education. Many nice systems have been developed and refined over the years that use interaction and animation to engage students in learning. In spite of their evident utility, most of these systems have languished, being used only at their home institutions and a few others. The reason can be stated succinctly: platform dependence. Pick your platform. There were systems that ran only with X-windows, some that worked only on Sun stations, others that required Microsoft Windows 95, several that demanded a Macintosh, and so on. Not only did this hinder the use of these systems in formal classroom settings, but it also made it virtually impossible for all students in a course to have off-campus access to the systems, a desirable capability for learning. A good (but incomplete) review of visualization software for education is found in [4]. Then came the World Wide Web and increasingly sophisticated browsers. Our mouths watered at the thought of what these new technologies promised for enhanced computer science education. The turning point, though, was the introduction of the Java Virtual Machine, which allowed educational software to be developed in the platform independent fashion of the Web. Very suddenly, the rules of the game changed, and the paradigm shifted [ 11. The problem of platform dependence vanished (. . .well, pretty much, anyway) overnight. The learning curve for students adjusting to a new software system dropped dramatically, as nearly all students