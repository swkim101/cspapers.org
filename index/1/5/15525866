Stochastic computing (SC) uses standard logic to process pseudo-random bit-streams denoting probabilities. It implements arithmetic operations by extremely simple and low-power hardware. Despite major new applications, SC's theory and design requirements are poorly understood. We observe that the Boolean functions used in SC take the form f(X) = f(XV;XC), where XV and XC are inputs with variable and constant probabilities, respectively. Different functions can be equivalent in the sense of implying the same stochastic behavior. We define stochastic equivalence classes (SECs), and investigate their properties and applications. Suitably interpreted, SECs describe all realizable arithmetic functions of interest. While conventional synthesis focuses on finding the best circuit to implement a known function, stochastic circuit optimization first requires finding the best function. We present an SEC-based approach to this problem, which demonstrates the computational richness of SC and leads to significant cost reductions compared to prior designs.