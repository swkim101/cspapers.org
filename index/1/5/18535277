The Distributed Version Storage Server (DVSS) provides an underlying storage mechsniim for a CAD-oriented data model. DVSS supports such project management features as version histories. alternate data versions, and multi-reader multi-writer access control in a heterogeneous network of workstations and fileservers. Each design object is managed as a rooted directed acyclic graph @AG) of versions. At any time, one path in an objectâ€™s DAG is designated as its principal path; the current version in the principal path is the current version of the object. Other paths contain alternate versions of the object. Updates to any version path must be seriali&le. but derivation of alternate versions is not subject to this constraint. Clients interact with DVSS using the checkoutlcheckin paradigm. Each object has a primary site, which synchroniis actions on the object Group operations requiring multiple locks follow a deadlock avoidance scheme. DVSS is robust in that it supports multi-reader and multi-writer data access in the presence of failures. Traditional data replication supports continued read access. Write-write conflicts resulting from continued write access during network partition are resolved at recovery time by creation of altemate versions. The cost of resolution is minimized by employing a unilaterally computable algoritiun at each site.