In this paper, we consider the problem of restructuring or transforming algorithms to efficiently use a single-stage interconnection network. All algorithms contain some freedom in the way they are mapped to a machine. We use this freedom to show that superior interconnection efficiency can be obtained by implementing the interconnections required by the algorithm within the context of the algorithm rather than attempting to implement each request individually. The interconnection considered is the bidirectional shuffle-shift. It is shown that two algorithm transformations are useful for implementing several lower triangular and tridiagonal system algorithms on the shuffle-shift network. Of the 14 algorithms considered, 85% could be implemented on this network. The transformations developed to produce these results are described. They are general-purpose in nature and can be applied to a much larger class of algorithms.