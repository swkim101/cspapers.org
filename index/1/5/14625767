This paper describes a general abstraction mechanism called a constraint pattern, with which an object oriented language can be built. In such a language, constraint patterns play the roles of code and data abstractions, and subsume classes, instance variables, methods and control structures. Constraint patterns, a conceptual blend and extension of BETA’s patterns and Bertrand’s augmented term rewriting rules, use equation solving for constraint satisfaction, method generation, and compilation. Basing a language on this abstraction makes simple equational constraints available as a fundamental language feature, integrated with the semantics.