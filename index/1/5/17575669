This paper describes the basic concept and the system architecture currently under development for GRACIA, a software environment for graphical specification, automatic configuration and animation of parallel programs. GRACIA is aimed at supporting the programming of distributed systems. The main idea is to support all phases of the software development cycle, where the integration of different techniques into one environment was one of the main emphases of the project. 1 Introduction The motivation to use graphics in the development of distributed programs is straightforward. Graph structures are usually drawn by the programmer as an aid in visualizing the topology and communication scheme of the distributed algorithm. From here, the programmer traditionally describes his layout textually in a parallel programming language. This coding process is error prone and not necessary at all. Large distributed algorithms have the problem of the potential complexity of the interactions among a number of distributed processes. This raises the observation problem, which can only be solveci by visualizing the dynamic behavior. The objective of the GRACIA project is to realize an integrated programming environment for different distributed systems. It supports all phases of the software development cycle, from software design to hardware configuration, monitoring and program animation. The program design with GRACIA is based on an abstract machine. This abstract machine offers static processes and communication channels.