Work:flow m.negement systems (WFMSs) have been used to support the modeling, execution, and monitoring of business processes. Business processes consist of multiple activities, and their enactment is carried out by human agents and software systems. "Dypically, business processes and the activities constituting them have deadlines. When an activity misses its deadline, special actions may be triggered, ~efermd to as escalation. E~c.I.Hnns ~d~ect business processes, and they may even lead to the abortion of some of them. Consequently, escalafion~ may entail a high cost to an orgAnlg~tlnU. II1 th~ paper, we present on-going research addressing wod~ow escalations. Our goal is twofold: (a) minimize the rtumbet of escalations during process execution and (b) reduce the cost associated with escalations when they cannot be avoided. 1 I n t r o d u c t i o n Workflow mmn.~ement systems (WFMSs) are increasingly used by orgfmiT~tiOll~ to S _ffem~lin~ alltomato.+ 8nd m~nm~e their business processes. These systemg provide tools to support the modeling of business processes at a conceptual level, coordinate the execution of component activities according to the model, monitor the progress of business processes, and report "important statistiCS" of both the business processes and the systems involved in the execution of them [GHS95, KS95]. WFMSs are based on the concept of a workflow, which is an abstraction of a business process. A workflow consists of activities, which correspond to Process steps, and agents that execute these f i c t i v i t i ~ . The worldiow specification desaibes the activities constituting the wotkflow and the (partial) order in which these activities mnst be executed. Activities may have dcmtline8 that d~t~minc the msxJmum allowable execution time for each of them. When an activity misses its deadline, the workflow model may specify that a special activity, referred to as escalation, be triggered Pc~rmimim m mmk~ digi~Wlmrd c~'h= °f ~U ~ Pm °f this nmm'/d fro" l~mml ~. ~room m m ~ ~i~t~ fm p~x,v/ded tlm ~ oopia m~e not made er diatn'buted fcr l ~ t or w,m,a'ci.I advanlage, the oopynot m,ica, the title of the ~bfic,tioa ,ad ~ d,te apmu', mxt mtice is 0vm em ~ s h t i. by pm.i~im e~the ACM. ~ . To oopy otK~i~., to mlmbi/sh, m po.t oa m'vm or to mlim'a, ut~ to ibm, requirm specific pamia~oa mdior fm DAM" "~6 Rodh~//e MD, USA CC4~p~ght 1997/ACM 0-89791-948-3/96/I l ..$3.50 autonmfically. The effects of an escalation may depend on the sem~mdcs of the activity that missed its dean|he and, often, btmmn intervention is required to proceed. In general, the effects of an esc~letion may be one of the following." (a) the activity that triggered the esc~lmtion is restarted, (b) a new acti~ty is ¢tecuted and the activity that triggered the escalation resumes execution, (c) a new activity replaces the one that Iriggeted the ¢scahtion, or (d) the business process is affected, and it is either aborted as a whole or some of the executed activities are compensated. In all cases, invoking esr~lAfion results in an increased cost for a l~ incss process due to the additional activities t ~ t bare to be executed, or be~-~e completed work is rolled badr. or because intervention of highly-paid workers is required. Therefore, it is desirable to reduce the nnmher of workflow executions that result in ~-~l~t/ons. In thig paper, we address the problem of reducing both the number of worktlow executions that result in ~c~l.Hons and the cost associated with escalations. The main observation behind our technique4g is thmt as long as we guarantee that activities are givtm at least as much time as originally assigned by the l~$iness AnAlyst, we can delay the invocation of escalations for some of them by giving them more time to complete nornmlly. To achieve this, we note mat deadlines 8ire usually assigned to 8ctivifie8 based on the e$fimmod execution times of these activities and on the need to meet the overall _ ~ l i n e of the business process. On the other hand, the actual time required for a partiodar activity to complete varies from one instance to the next due to variations of load, work conditions, etc. Consequently, if an activity in a giveil wofkflow ezC~.ltlon finighe$ faster dum its estimated execution fime~ the rest of the activities can be given extra time before escalation is invoked. This can be accom#ished by extending their deadlines using the available slack time. Although our work ghAlr~s similar goals with research efforts in real-time systems (n~an~ly, that of reduc:ing the number of ~ that miss their de~'Uines), the focus of our work is completely differenL Real-time. systems ~ttempt to minimiTe the number o f mbtsed _dPm'llinc8 by optimizing schoOnling of m.~kg SO that each t~gk better etiliT~ its allowable execution time, which is ass,nned to be fixed. Our work, on the Other hand, attesnpt~ to millimizc the missed