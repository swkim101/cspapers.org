State trees are a technique for specifying the control of an interactive system by organizing states into trees to define shared structure and behavior. The tree structure permits inheritance of state information, event traps, and entry and exit actions from states to substates, thereby sharing information and reducing the amount of code to be written. An interface can be restructured by moving entire subtrees as modules. State trees separate the recognition of commands from their implementation, allowing either to be modified independently. State trees structure flow of control within an implementation without imposing an identical structure on the interface itself, which need not be hierarchical. State trees have been implemented in an object-oriented language and used to write interactive applications.