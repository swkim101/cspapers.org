The problem of comparing two sequences S and T to determine their similarity is an extensively studied topic. Algorithms for the problem have numerous applications in the fields of molecular biology, handwriting and speech recognition, file comparison, error control and information retrieval. In this paper we introduce a new problem in sequence comparison: Given a set of strings $1, $2. . . Sc. and a target string T. Si -BiY Fi. Namely, Y is the subsequence common to all of strings Si. The goal is to compute similarity of all strings Si with T, wi thout computing the part of Y again and again. (We know where the common subsequence Y starts and ends in each source sequence Si. The part of the target T with which Y will align, however, will vary according to each Bi and Fi combination). We show how to reduce the O(n~) runtime work for the common subsequence Y in each string to O(n), at the cost of only O(n 2 + nl) work at preprocessing time, where n is target size and Â£ is the size of Y. This problem, which we call the Shared Substring Alignment Problem, arises in applications where the data is viewed as a set of many competing source sequences to be compared to a common target. Very often, the competing source strings are variations of a similar signal, or different combinations of a common set of subcomponents. In such applications, various filtration methods are often employed to reduce the expense of matching all potential source strings against