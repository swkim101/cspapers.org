We consider Edmonds's model (1999) extended by precedence constraints. In our setting, a scheduler has to schedule non-clairvoyantly jobs consisting in DAGs of tasks arriving over time, each task going through phases of different degrees of parallelism, unknown to the scheduler. As in the original model without precedence constraints, the scheduler is only informed of the arrival and the completion of each task, at the time of these events, and nothing more. Furthermore, it is not aware of the DAG structure of each job beforehand neither of the precise characteristics of the phases of the tasks that compose each job.
 We consider the preemptive strategy Equi○Equi, that divides the processors evenly among the alive jobs and then divides the processing power alloted to each job evenly among its alive tasks. We show that whatever how complex the precedences are, Equi○Equi is (2 + ε)-speed 0(κ/ε)-competitive for the flowtime metric, where κ is the maximum number of independent tasks in each job. That is to say, the flowtime of the schedule computed by EquioEqui is at a constant ratio of the optimal flowtime as soon as Equi is given slightly more than twice the resources as the optimum it is compared to. Interestingly, the extra speed needed to obtain a competitive algorithm, namely (2+ε), is the same in presence of precedence constraints, as in the original setting without precedences studied by Edmonds in 1999. This means that the maximum load that the system can handle without diverging, is the same with or without precedence constraints.
 Furthermore, we propose a simple scheme to analyze a special class of schedulers, namely Equi-schedulers, which allows to obtain upper and lower bounds on particular precedences structures, such as independent chains, IN-trees, OUT-trees and Serial-parallel DAGs.