If the field of Human Factors in Computer Systems is to be a success it must develop design principles that are useful, principles that apply across a wide range of technologies. In the first part of this paper I discuss some the properties that useful principles should have. While I am at it, I warn of the dangers of the tar pits and the sirens of technology. We cannot avoid these dangers entirely, for were we to do so, we would fail to cope with the real problems and hazards of the field.
 The second part of the paper is intended to illustrate the first part through the example of tradeoff analysis. Any single design technique is apt to have its virtues along one dimension compensated by deficiencies along another. Tradeoff analysis provides a quantitative method of assessing tradeoff relations for two attributes <italic>x<subscrpt>i</subscrpt></italic> and <italic>x<subscrpt>j</subscrpt></italic> by first determining the <italic>User Satisfaction</italic> function for each, <italic>U(x)</italic>, then showing how <italic>U</italic>(<italic>x</italic><subscrpt>i</subscrpt>) trades off against <italic>U</italic>(<italic>x</italic><subscrpt>j</subscrpt>). In general, the <italic>User Satisfaction</italic> for a system is given by the weighted sum of the <italic>User Satisfaction</italic> values for the attributes. The analysis is used to examine two different tradeoffs of information versus time and editor workspace versus menu size. Tradeoffs involving command languages versus menu-based systems, choices of names, and handheld computers versus workstations are examined briefly.