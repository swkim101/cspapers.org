In this paper, we take a dynamical systems perspective of real-time systems. In particular, we investigate the evolution of response times of periodic jobs and aim to show that oscillatory and chaotic behavior can be exhibited by standard scheduling algorithms. To this end, we present a simple periodic task specification that leads to oscillations of response times for a fixed priority scheduler. We then show three task specifications that lead to complex dynamic behavior under various scheduling algorithms: (a) round robin, (b) multiprocessor fixed-priority, and (c) priority inheritance protocol. As a practical validation of the results, we implemented the multiprocessor fixed-priority scheduler using POSIX threads and standard locking mechanisms. Finally, we discuss general observations and implications of the observed and proven phenomena.