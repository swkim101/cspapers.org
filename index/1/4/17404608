The computational complexity of a parallel algorithm can be measured by the time it takes and the work it does. The work done by a parallel algorithm is the product of the time required and the processors used. Often, if one is willing to accept a slower algorithm, the total work done can be reduced. Here we show that, given a directed graph G and a vertex s, it is possible to compute the shortest path (in edges) from s to every other vertex in O(n l-og2 ;/r) while doing only 0(nr2 log2 r) work. Thus, as T increases, the time required by the algorithm is reduced but the work done is increased. This tradeoff is valid for all @ < T < n.