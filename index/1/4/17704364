Delivering high quality software in an economic way requires advanced control over the software development process and the product in all stages of its life-cycle. The use of metrics as means of control and improvement plays an important role in software engineering. Interviews with industrial software engineers identified incompleteness of UML designs as a potential problem for subsequent stages of development. In this paper we propose a definition of completeness of a UML model and present a set of rules to assess model completeness. We report results from industrial case studies to assess the level of completeness in practice. The amount of completeness and consistency rule violations was very high. Different case studies showed large variations in conformance to and violations of rules.