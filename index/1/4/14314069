We describe a natural revision-based logical modelling for evolvable software. An evolvable component comprises two parts: a supervising process and its supervisee sub-component. The supervisor's role is to monitor and possibly evolve its supervisee, where evolutionary change may be determined purely internally from observations made by the supervisor of the supervisee's behaviour, or may be a response to external stimuli. We model these systems in a revision-based first-order logical framework in which the logic of the supervisor is a meta-logic to that of its supervisee. This enables evolutionary change of the supervisee to be induced by a supervisor's state revision at the meta-level. We introduce the basic ideas in a simple (single component) setting using the familiar Blocks World and then indicate how this account extends to full structural hierarchies of evolvable components with supervisor processes at any level of the hierarchy.