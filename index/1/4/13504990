In this paper, new results for two fundamental problems in the field of computational geometry are presented: orthogonal point enclosure query (OPEQ) in R3 and point location in orthogonal subdivisions in R3. All the results are in the pointer machine model of computation. 
 
(1) In an orthogonal point enclosure query a set S of n axes-parallel rectangles in R3 is to be preprocessed, so that given a query point q ∈ R3, one can efficiently report all the rectangles in S containing (or stabbed by) q. When rectangles are 3-sided (of the form (−∞, x] × (−∞, y] × (−∞, z]), there exists an optimal solution of Afshani (ESA'08) which uses O(n) space and answers the query in O(log n + k) time, where k is the number of rectangles reported. Unfortunately, when the rectangles are 4-sided (of the form [x1, x2] × (−∞, y] × (−∞, z]), the best result one can achieve using existing techniques is O(n) space and O(log2 n + k) query time. 
 
The key result of this work is an almost optimal solution for 4-sided rectangles. The first data structure uses O(n log* n) space and answers the query in O(log n + k) time. Here log* n is the iterated logarithm of n. The second data structure uses O(n) space and answers the query in O(log n · log(i) n + k) time, for any constant integer i ≥ 1. Here log(1) n = log n and log(i) n = log(log(i-1) n) when i > 1. 
 
To handle OPEQ for general 6-sided rectangles (of the form [x1, x2] × [y1, y2] × [z1, z2]), existing structures in the literature occupy Ω(n log n) space. This work presents the first known near-linear space data structure. It occupies O(n log* n) space and answer the query in O(log2 n · log log n + k) time. This is almost optimal, since Afshani, Arge and Larsen (SoCG'10 and SoCG'12) proved that with O(n) space, OPEQ on 6-sided rectangles takes Ω(log2 n + k) time. 
 
(2) In point location in orthogonal subdivisions, a set S of n non-overlapping axes-parallel rectangles in Rd(d ≥ 3) is to be preprocessed, so that given a query point q ∈ Rd, one can efficiently report the rectangle in S containing q. In a pointer machine model, the first known solution by Edelsbrunner, Haring and Hilbert in 1986 uses O(n) space and answers the query in O(logd−1 n) query time. After a long gap, Afshani, Arge and Larsen (SoCG'10) improved the query time to O(log n(log n/log log n)d−2). This work presents a data structure which occupies O(n) space and answers the query in O(logd-3/2 n) time, improving the previously best known query time by roughly a [EQUATION]log n factor.