Introduction. Modern Web IR systems have to manage collections of billions of documents. The indexes used to represent them are very large data structures, the form of which can have a big impact on the quality and the speed of IR algorithms. Traditionally, two main ways are used to model the documents available: the bag-of-words model, and the vector-space model. In the query-vector document model, documents are modeled with the list of queries they match, along with the rank they get for each. The query-vector representation of a document is built out of a query-log. A reference search engine is used in the building phase: for every query in the training set, the system stores the first 100 results along with their rank. This creates a matrix, with documents on columns and queries on rows, where each entry is the rank of a document for a given query. To be more precise, let Q be a query log containing queries q1, q2, . . . , qm. Let di1, di2, . . . , dini be the list of documents returned as results to query qi. Furthermore, let rij be the rank that document dj gets as result of query qi (0 if the document is not a match). A document dj is represented as an m-dimensional vector dj = [rij ] T , where rij âˆˆ [0, 1] is the normalizated value of rij : rij = rij/ P ij rij . The rij values form a contingency matrix R (proof in [4]), where we can perform the co-clustering algorithm by Dhillon et al. [3]. This approach creates, simultaneously, clusters of rows (queries) and columns (documents) out of an initial matrix, with the goal of minimizing the loss of information. The result of co-clustering is a matrix b P defined as: