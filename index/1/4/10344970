Object EngineeringR. Stonewall Ballard, Component Software Corporation
Converting an object-oriented design into class definitions inan object-oriented language often requires many engineeringdecisions. It is easy to make these decisions incorrectly forlanguages that give the programmer a lot of control over datarepresentation, such as C++. This tutorial covers low-level issuesin building extensible and evolvable programs, issues that areimportant if you want to build well-balanced abstractions. Itdescribes how to use multiple inheritance properly in spite of thecompiler, when to use forwarding instead of inheritance, how toencapsulate state, and when to use references instead of copyingobjects.
This tutorial teaches how to convert object-oriented designsinto code that is easy to extend and reuse. Many of the issues aremore interesting to C++ programmers than Smalltalk programmers, andC++ is the language used for examples, but most of the issues arelanguage independent.