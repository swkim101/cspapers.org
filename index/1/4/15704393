1 Introduction In this paper, we propose a new indexing structure, called the Time Index+, which extends the incremental structure techuique introduced in the Time Index [E1WK90, Kour94]. The Time Index performs well for data that often overlaps and has a non– uniform distribution. However, it requires huge amounts of storage aud suffers from degradation in update p erformauce. The Time Index+ overcomes the deficiencies of the Time Index by proposing au efficient new storage model for partitioning logical buckets and by suggesting a graceful new method for handling object versions with long and very long time intervals. We validate our claims for the efficiency of our new tectilques by analyzing and comparing four indexing structures: the Time Index+, the Time Index, the Packed R-Tree [RoLe85, KaFa93], and the Parametrized R–Tree. Our experiments identify impor-taut parameters, and show how they affect the performance of the four considered indexing structures. These include meau of version lifespan, block size, query time intervaf length, aud total number of versions. Our simulation results show that: (1) The Time Index+ pre vides au improvement in searck time of 10~o over the Time Index, of au order of magnitude over the Packed R–Tree, and of at least 100~0 over the Parametrized R–Tree and (2) The Time Iudex+ requires on average 60~0 less storage than the the Time Index but 51)~o more storage than the Packed R–Tree and the Parametrized R–Tree. Permission to co y without fee all or part of this material is F granted provided t at the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association of Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. Temporal databases support both valid tin e, which records a history of changes in the real world, rmd transaction time, wh,ch records a hktory of updates made to the database. This permits users to query over the complete history of a given Universe of Discourse. However, the incorporation of time in database models has a profound impact on every facet of database implementation. An important facet that requires a complete re–evaluation is indexing techniques aud search methods, which is the topic of this paper. Current trends suggest that database systems will need to manage ever–larger volumes …