We describe a course offered for six years as part of the Honors Collegium at UCLA. This small seminar introduced non-major honors students to concepts and current issues of computer science, culminating in a field study project applying computing to an area of the student’s interest. Background: The UCLA Honors Collegium offers a series of small seminar classes, designed to provide honors students with the opportunity for close interaction with distinguished faculty on interdisciplinary topics. Roughly a dozen courses per quarter are offered, with titles ranging from “The Geometry of Relativity” through “Mind, Brains, Humans, and Computers” and “Human Dimensions of Global Environmental Change” to “Gender and Race: Construction of Greek Political Thought.” Students with gradepoint averages of at least 3.0 out of 4.0 who have completed their English Composition requirements are eligible. Faculty from a wide range of disciplines teach in the Honors Collegium, their time reimbursed to their home departments. Course description: From 1986 through 1991, the author taught an Honors Collegium course called “Computers, Science, and Computer Science,” which was described in the catalog as follows: “This course will furnish students with an in-depth, fundamental understanding of computers and the nature of automatic computation, both in theory and in current practice: what information computers can represent and how they can process it; the distinctions between human thought and the computer’s processing; the social effects of computerization and reliance on computed rePermission to oopy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fae and/or specific permission. ACM-24thCSE-2/93 -lN,USA @ 1993 ACM 0-89791-566-6/93/0002/0141 . ..$l .50 suits; the capabilities and limitations of computer technology both today and in the future. Students will develop the foundation for making informed decisions relating to computing and the framework for developing further technical expertise.” The rationale behind this grandiose agenda is partly to help students appreciate some of the intellectual issues th~at underlie computer science. But there is also a more practical purpose: The students in this course do not plan to become computing professionals, but as university students they will probably manage computing professionals, make purchasing and other management decisions about computing, and influence public policy about computing. We want them to develop a framework for making these decisions in an informed way, given the constraints of a single one-quarter course and their non-technical backgrounds. One approach to courses like this is to cover programming and algorithms to some degree of mathematical formality. Indeed, an Honors Collegium course created recently does take this approach, using the text by Goldschlager and Lister[l]. We took the approach of de-emphasizing some of the more formal content—algorithm design and analysis, for example, and actual coding-because we felt there was hardly enough time to do those topics justice and still cover the larger issues, especially given that few of the students had the mathematical sophistication necessary to appreciate a formal treatment. In the most recent offering we used two texts, a general introduction by Biermann[z] and a biographical supplement by Slatert31. We supplement these with various readings, such as the Daedak issue on artificial intelligence (reprinted as [4]) and the Parnas article on SDI[51. The course met over a ten-week quarter once a week for three hours, during which discussion (and some lecture) was led by the instructor, usually accompanied by a gradw ate student TA. We provided electronic mail and Internet news access to the students and encouraged them to explore; beyond that, we required no hands-on computing. The course was graded on class participation, a field-studly term project (described below), and on individual half-hcur