In this paper, we consider partitioning a planar graph by removing either nodes or edges. In particular, we consider a cut to be either a set of nodes or edges whose removal divides the graph into two pieces.
We define <italic>the balance of a cut</italic> as the ratio of the weight of the smaller side of the cut to the total weight in the graph. Thus, the best possible balance is 1/2. We define <italic>the quotient cost</italic> of a cut as the ratio of the cost of the cut to the size of the smaller side of the cut. Thus, a costly cut with a high balance may have lower quotient cost than a less costly cut with a lower balance. Finally, we define the <italic>flux</italic> of a graph as the minimum quotient cost of any cut in the graph.
We are interested in  finding small cuts with high balance; either finding the cut that minimizes the quotient cost of the cut, or finding the smallest cut of some specified balance. (For balance 1/3, this problem has been called the minimum separator problem.)
We present a very simple algorithm for finding 1.5 times optimal quotient node or edge cuts in planar graphs in time <italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt> min (<italic>W, C</italic>)), where <italic>W</italic> is the total weight of the graph, and <italic>C</italic> is the total cost of the graph. In fact, these cuts are only nonoptimal when they have very good balance. Thus, the algorithms either find an optimal quotient cut or a nearly optimal quotient cut with very high balance.
We can greatly improve the  running time if we settle for finding 3.5 times optimal quotient node and edge cuts. We can accomplish this in <italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt>(log <italic>W</italic> + log <italic>C</italic>)) time. And, if we are willing to settle for <italic>O</italic>(<italic>k</italic>) times optimal solutions, we can make the running time quite fast; <italic>O</italic>(<italic>n</italic> <supscrpt>1+1/<italic>k</italic></supscrpt> log <italic>n</italic>(log <italic>W</italic> + log <italic>C</italic>)log <italic>C</italic>). If <italic>k</italic>=log <italic>m</italic>, and <italic>W</italic> and <italic>C</italic> are polynomial in <italic>n</italic>, this becomes <italic>O</italic>(<italic>n</italic> log<supscrpt>3</supscrpt><italic>n</italic>).
Finally, we  give approximation algorithms for finding nearly optimal <italic>balanced</italic> node or edge separators in planar graphs, based on the quotient cut algorithms.
These algorithms improve upon previous algorithms by being much faster, much much simpler, and by applying to node separation as well as edge separation.