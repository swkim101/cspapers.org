Almost every problem on digraphs requires computing <italic>strongly</italic> connected components and <italic>directed</italic> spanning trees in one form or another. It has long been an open problem whether polylog time and <italic>linear</italic> processors are enough to find the strongly connected components of a digraph and compute directed spanning trees for these components. This paper provides the first non-trivial partial solution to this open problem: For a planar digraph with <italic>n</italic> vertices, the strongly connected components can be computed in <italic>O</italic>(log<supscrpt>3</supscrpt><italic>n</italic>) time and <italic>O</italic>(<italic>n</italic>) processors. If the graph is strongly connected, a directed spanning tree can be built in <italic>O</italic>(log<supscrpt>2</supscrpt> <italic>n</italic>) time and <italic>O</italic>(<italic>n</italic>) processors. Both algorithms are deterministic and run on a parallel random access machine that allows concurrent reads and concurrent writes in its shared memory.