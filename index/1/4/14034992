We address the problem of Byzantine agreement, to bring processors to agreement on a bit in the presence of a strong adversary. This adversary has full information of the state of all processors, the ability to control message scheduling in an asynchronous model, and the ability to control the behavior of a constant fraction of processors which it may choose to corrupt adaptively. 
 
In 1983, Ben-Or proposed an algorithm for solving this problem with expected exponential amount of communication. In 2013, the algorithm was improved to expected polynomial communication time, but still an exponential amount of computation per individual processor was required. In this paper, we improve that result to require both expected polynomial computation and communication time. 
 
We use a novel technique for detecting malicious behavior via spectral analysis. In particular, our algorithm uses coin flips from individual processors to repeatedly try to generate a fair global coin. The corrupted processors can bias this global coin by generating biased individual coin flips. However, we can detect which processors generate biased coin flips by analyzing the top right singular vector of a matrix containing the sums of coin flips generated by each processor. Entries in this singular vector with high absolute value correspond to processors that are trying to bias the global coin, and this information can be used to blacklist malicious processors.