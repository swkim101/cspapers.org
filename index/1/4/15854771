This paper proposes a new graph-based algorithm of mostly incremental garbage collection for active object systems. Garbage collection is an automatic memory management that reclaims the memory no longer referenced by programs. The actor model is a framework for active objects, in which garbage collection is more complicated than the conventional object oriented environments. The garbage collection for active objects usually requires a longer pause time of the system. To reduce the pause time, we propose a new mostly incremental approach of garbage collection for active object systems. Our incremental garbage collection uses a weighted augmented actor reference (WAAR) graph of the active objects. In the WAAR graph, we augment the object reference graph with auxiliary edges, some of which are assigned with weights to support efficient garbage collection. The edges and weights in the WAAR graph are updated incrementally during execution of the program. When the system gets into the stop-the-world phase and all threads stop, our incremental garbage collector quickly marks all the non-garbage active objects with all the needed information available in the WAAR graph. Hence, the pause time of the system for garbage collection is reduced. In our experiment, our new garbage collection effectively reduces the pause time of the systems without sacrificing too much throughput. Compared with the incremental push-pull garbage collection, the pause time of the systems is reduced by 34.33% and the total run time is reduced by 35.3% with our garbage collection, in average.