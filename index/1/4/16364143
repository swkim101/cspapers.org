1 Abstract A distributed, Log N algorithm to configure computer resources interconnected by regular SW-banyans into logical SISD machines is presented. The algorithm is written for a general, dynamic computing environment in which requests for resources and the release of allocated resources occur spontaneously. A request is always satisfied assuming it is physically possible to do so. The circuit built is the cheapest realization of the request in terms of network connectivity. 2 Introduction This paper presents an algorithm for the formation of SISD computer architectures from processors and memories interconnected by a regular SW-banyan network [2]. The algorithm constructs tree circuits which couple one processor to one or more memoril~s with minimum destruction to network connectivity. The algorithm, if the functionality is distributed among th network nodes, has an execution time proportional to Log N where N is the number of processors and memories. Heurisfics for configuring SW-banyans were first proposed by [2]. An algorithm to map a known set of SISD configurations onto an empty SW-banyan was given by [6] and algorithms for creating specific logical architectures on an unallocated network were published in [1]. Our method extends the previous work in two ways: first, the banyan maybe in any state, it need not be empty; and second, requests may arrive dynamically without the algorithm's prior knowledge. Furthermore, the algorithm has the sound theoretical basis of minimizing the destruction to a network caused by establishing a given configuration. It is also simple to implement and fast in execution. It is thus a sound basis for practical application in resource allocation for configurable computer architectures. It is an early example of a hardware implementable parallel and distributed resource management algorithm. Configurable architectures are one significant approach to parallel computations. Configurable architectures which have been built include C.mmp [12], TRAC [8], PASM [9] and CHIP [10]. Other eonfigurable architectures have been proposed [4, 11]. Effective use of the flexibility of configurable architectures requires the ability to efficiently configure the resources of the system into the desired architectures. This is not always a problem of trivial difficulty. The algorithms which have been established to configure CHIP are of complexity N 2 for the general static case and may be even more complex for allocation on partially allocated networks. The algorithm given here establishes only SISD configurations and so is only a partial solution to the configuration problem. Establishment of circuits coupling â€¦