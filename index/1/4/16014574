As it is well known, robots are complex devices capable of performing very fast and precise movements. Developing robots and their controllers is a very challenge task due to the different technologies that are needed to be dealt with (access to peripherals, real-time operating systems, communications ...) and the amounts of programming work that is needed. Moreover, this work needs to be repeated in most cases when a new robot is developed. A new way is needed for developing the code implemented for controlling these robots that allows to reuse it in a safe way. In this paper, the Orocos (Open Robot Control Software) middleware has been chosen for the controller development. Orocos is a real-time middleware, focused on control systems, especially those related to robotics and automation. Its greatest advantage over the other solutions available is the capability to provide an off-the-shelf hard real-time operation. This is essential in most of the robotics applications, making this middleware in a very suitable piece of software. Since Orocos is a component-based middleware, several CBSD (component-based software development) techniques have been used to design and implement the control system. Thus, using a modular control structure, a number of advantages can be achieved such as code reusability, execution of the modules in a distributed way, ability to load or instantiate a module several times, easy following of flow execution and fewer programming errors. In addition, these components are configurable and reconfigurable in runtime.