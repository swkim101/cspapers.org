Specification mining is a dynamic analysis process aimed at automatically inferring suggested specifications of a program from its execution traces. We describe a method, a framework, and a tool, for mining inter-object scenario-based specifications in the form of a UML2-compliant variant of Damm and Harel's Live Sequence Charts (LSC), which extends the classical partial order semantics of sequence diagrams with temporal liveness and symbolic class level lifelines, in order to generate compact and expressive specifications. Moreover, we use previous research work and tools developed for LSC to visualize, analyze, manipulate, test, and thus evaluate the scenario-based specifications we mine. Our mining framework is supported by statistically sound metrics. Its effectiveness and the usefulness of the mined scenarios are further improved by an array of extensions to the basic mining algorithm, which include various user-guided filters and abstraction mechanisms. We demonstrate and evaluate our work using a case study.