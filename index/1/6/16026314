Though being the origin or predecessor of all process simulation modeling (PSM) approaches used in software engineering today, until recently, there did not exist a detailed and to software engineering needs adjusted simulation modeling methodology around the System Dynamics (SD) simulation modeling approach. The fact that existing process guidance for SD model development was only on informal and coarse grain level stimulated the development of a framework for SDM development, IMMoS (Integrated Measurement, Modeling, and Simulation) [11][12]. The IMMoS methodology supports managers to cope with the dynamic complexity of software development by providing guidance on constructing simulation models and using them as a source for learning and improvement. This was achieved by enhancing existing guidance for SD modeling with an additional component that enforces goal-orientation and with a refined process model that details description of activities, entry/exit criteria, input/output products, and roles involved. To smoothly close the gap to methods already established in empirical software engineering, IMMoS describes how to combine SD modeling with goal-oriented measurement and descriptive process modeling. IMMoS methodology consists of four phases and seventeen main activities distributed among the phases to guide the users in constructing an SD model. Unfortunately, software PSM is still considered a time-consuming and expensive task not yet widely accepted in software engineering. This is partly due to the specific nature of software development as compared to other engineering discipline where PSM is much more popular. Software development does not only combine methods, techniques and tools but it is a predominantly human activity. Software processes are sequences of (interrelated and partly iterative) actions that people take in order to achieve a result, i.e., a software product. Requirements on software development are low costs, fast development, accepted failure rate, and flexibility. Changes on requirements, process, and personnel are frequent. In summary, software development processes can be characterized as human-centered, change-prone, very flexible, and thus rather instable. Consequently, it is much more difficult to develop valid software process simulation models in time and in budget than in other engineering disciplines.