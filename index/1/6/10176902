Programs written inhigh-level parallel languages need profiling tools that provide performance data in terms of the semantics of the high-level language. But high-level performance data can be incomplete when the cause of a performance problem camot be explained in terms of the semantics of the language. We also need the ability to view the performance of the underlying mechanisms used by the language and correlate the underlying activity to the language source code. The key techniques for providing these performance views is the ability to map low-level performance data up to the language abstractions. We describe how we use this information to produce performance data at the higher levels, and how we present this data in terms of both the code and parallel data structures. We have developed an implementation of these mapping techniques for the data parallel CM Fortran language running on the TMC CM-5. We have augmented the Paradyn Parallel Performance TOOIS with these mapping and high-level language facilities and used them to study several real data parallel Fortran (CM Fortran) applications.