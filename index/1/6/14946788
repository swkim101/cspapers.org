In a conventional Network-on-Chip (NoC) system, a processing element (PE) is to serve only an application task in a fixed time interval. When an application task is allocated to a PE, the PE is thus blocked by the application, even though it is not used by the application all the time. This would lead to a waste of computing resources, which also becomes a bottleneck of performance enhancement. This work tries to solve the above issue by proposing a service-oriented architecture (SoA) design for virtualization in NoC. The proposed SoA design supports Partial Reconfigurable Region as a Service (PRRaaS) and Processing Element as a Service (PEaaS) for varying applications. According to the requirements of software applications, new PEs can be created on-demand by (re)configuring the logic resource of PRRs in the FPGA, while the configured PEs can also be virtualized to support multiple application tasks at the same time. Experimental results show that, although additional logic resources are required, the SoA design can reduce up to 47% of the total processing time required by using the conventional Hermes NoC design.