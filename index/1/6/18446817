There are many diierent ways of representing knowledge, and for each of these ways there are many diierent discovery algorithms. How can we compare diierent representations? How can we mix, match and merge representations and algorithms on new problems with their own unique requirements? This chapter introduces probabilistic modeling as a philosophy for addressing these questions and presents graphical models for representing probabilistic models. Probabilis-tic graphical models are a uniied qualitative and quantitative framework for representing and reasoning with probabilities and independencies. 4.1 Introduction Perhaps one common element of the discovery systems described in this and previous books on knowledge discovery is that they are all diierent. Since the class of discovery problems is a challenging one, we cannot write a single program to address all of knowledge discovery. The KEFIR discovery system applied to health care by Matheus, Piatetsky-Shapiro, and McNeill (1995), for instance, is carefully tailored for a particular class of situations and could not have been easily used on the SKICAT application (Fayyad, Djorgovski, and Weir 1995). I do not know of a universal learning or discovery algorithm (Buntine 1990), and a universal problem description for discovery is arguably too broad to be used as a program speciication. As a consequence, the power to perform in an application lies in the way knowledge about the application is obtained, used, represented and modiied. Unfortunately with