The paper describes MAGMA-Lisp, an extended Lisp system proposed as an implementation tool for A.I. languages exploiting nondeterministic techniques. The main idea informing MAGMA-Lisp is that a tree structure of conceptually indipendent computation environments (contex tree) is the supporting struc ture of any nondeterministic system. MAGMA-Lisp proposes this structure in a quite virginal form, so that the user can state his own techniques to prune, select and explore the available alternatives. In this sense, MAGMA-Lisp is to be viewed as a "machine language". 
 
The ideas of MAGMA-Lisp are contrasted w ith the systems that most influenced its design. The technique used in context implementation is described, showing how a very flexible context mechanism can be realized without an intolerable loss of efficien cy. In particular, in spite of the complexity of the system, garbage collection does not result much more time consuming than in standard Lisp systems.