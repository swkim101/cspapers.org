In our free open source project Catrobat, we are developing Pocket Code, an integrated development environment (IDE) for a visual, Lego-block style programming language that is inspired by MIT's Scratch. In contrast to Scratch and AppInventor, Pocket Code is designed to completely run on smartphones -- no PC whatsoever is needed to develop or execute the programs. Our motivation is to allow teenagers to intuitively create and easily share their own mobile apps. The large project includes more than 20 subprojects that complement Pocket Code in various ways, e.g., an image editor app that supports transparency and zooming up to pixel level. According to Ohloh, as of June 2014 more than 371 person years have been invested by 270 volunteer contributors from more than 20 countries into Catrobat. All development is done in an agile, extremely iterative and test-driven way, with a strong focus on maintainability, usability, and design. Subteams in parallel develop native versions of Catrobat interpreters that are integrated into corresponding Pocket Code IDEs for the Android, iOS, and Windows Phone platforms as well as for HTML5 capable mobile browsers, or smartphones supporting HTML5 directly. These native versions are implemented by us respectively in Java, ObjectiveC, C# ' C++, and HTML5/JavaScript. I will demonstrate Pocket Code and also will show how we use automatically checkable specification to ensure that programs behave identically on all platforms even though no cross-compilation tools or common implementation languages are used.