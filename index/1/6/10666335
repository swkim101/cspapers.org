An execution model that supports program reantrancy, recurslon, and automatic run-time loop unravelling is described. This execution model Is based on queue machines that execute acyclic data-flow graphs. The use of separate instruction and data token spaces allows program reentrancy. Execution environments called contexts execute acyclic data-flow graphs associated with high-level code blocks. Iteration and function activation are implemented by the dynamic creation of contexts and do not require the use of tagged tokens. A multiprocessor architecture that supports this execution model is proposed. T ~ system architecture is based on a partitioned ring in which each partition of the ring is a conventional processor/memory bus. The proposed architecture has bean simulated in software. A number of test programs have been developed and their execution on the proposed architecture has been evaluated. The performance of the proposed architecture with various numbers of processing elements is described. In addition, a number of task scheduling algorithms are presented and evaluated.