Current query languages for relational databases usually are fixed, i.e. they provide only a fixed set of data types and operations. It is usually not possible to extend this set by user defined data types or functions. This is a major drawback especially in advanced applications like engineering applications or office automation. In these areas special data types and special functions are needed quite frequently, e.g. a data type for matrices and a function for matrix multiplication. Since matrices and matrix multiplication are not provided in conventional query languages, the user has to model matrices by low level constructs as, for example, byte strings, and to write a rather cumbersome application program in a conventional programming language for interpreting these byte strings as matrices and for multiplying them. Another example of a missing function is even as simple as the square root function. Therefore, a mechanism is needed that allows the user to define his own data types and functions and add them somehow to the DBMS such that they can be used within the query language in the same way as a normal built-in function on basic data types. This paper describes an extension mechanism for data types and functions that has been implemented at the IBM Scientific Center in Heidelberg. The mechanism is based upon HDBL, an SQL based query language for complex objects. The functions themselves are Permission to copy without fee all or part of this material is granted ~ovided that the copies are not made or distrhted for direct commercial advantage, the VLDB copyright notice Md the title of the publication and its date appear. Imd notice is given chat copying is by permission of the Very Large Data Base Endowment. To copy otherwise. or to republish. raquires a fee and/or special permission from the Endowment.