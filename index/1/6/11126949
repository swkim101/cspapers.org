Dorai Sitaram* anld Matthias Felleisen* I)epartment of Computer Science Rice University Houston, TX 77251-1892 Traditional denotational models of languages with control operators rely on Strachey and Wadsworth’s continuation semantics. Such models represent the effects of control operations by tacking on an additional function argument, the continuation, to all denotations. In essence, a continuation semantics encodes a stack machine for the language where the continuation is a functional representation of the stack. As we have shown recently, a continuaticm model can accuratel y describe the behavior of a control language, provided the latter has a sufficiently strong control structure. In this paper we investigate a new class of models for control operators. These models do not rely on the continuation-passing technique but build the required information for control operations upon demand. In cent rast to the cent inuat ion framework, there is a pair of simple projection/injection functions between the direct model for the core language without control operators and the extended model for the full language. Like the continuation model, the new models provide accurate descriptions of languages with control operators and control delimiters. For the design of programming languages, our analysis points out that control operators need a cooperative exceptionhandling facility. “Supported in part by NSF and DARPA. Permission to copy without fee afl or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and ita date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. @ 1990 ACM 089791-419-81901001210183 $1,50 1 Modeling control without special effects Programming language operators for control manipulation provide expressive and efficient programming abstractions. These constructs grant access to (ftrstclass) abstractions of the control state in the form of control objects. Virtually all programming languages are equipped wit h some form of cent rol operators. Although the study of denotational models is useful for understanding and reasoning about languages, these analysis techniques have not been exploited for languages with control. The traditional semantics for control operators and control objects uses the Strachey and Wadsworth continuation model [25]. Our recent study of this model showed that it has the ability to restrict the reach of control operators. This capability is usually not available in modern languages. The language requires a control-delimiting operator to allow an accurate correspondence between model and language. However, the continuation model, while popular (indeed, the control objects provided by the language are often dubbed “continuations” ), differs radically from the basic direct model for languages without control. The denotations of language phrases demand an additional continuation argument, and it is difficult to relate them to the denotations in the direct model for the language without control [19, 21, 24]. In this work, we investigate the consequences of using the more uniform approach of having extensions of the basic direct semantics [8] as models for language extensions. Extending a direct model requires only an incremental alteration to the base model. In our specific case, languages wit h “continuations” have models without special continuation functions. Our study also shows that, like the continuation model, the extended direct model furnishes a perfect match with a language, provided the latter has a sufficiently expressive control structure.