The Web has become the host platform for interactive and collaborative applications that usually consist of multiple Web services. This transition is pushing the browsers to perform operating system like functionalities for better resource utilization. Unfortunately, there exists limited support for resource management on current Web platforms. This problem is further aggravated on mobile devices because of their limited resources. If current Web communication APIs were used as-is, mobile users would suffer from low responsiveness, battery drainage, and expensive charges.
 This paper describes the design and implementation of Mobile Ajax Broker (or MaJaB), a middleware layer that performs management and coordination of networking activities of multiple Web services residing in a Web page. MaJaB integrates a range of optimization techniques that were typically applied at the OS level including scheduling, multiplexing, piggybacking, and priority-switching. This work has been implemented as part of EasyMeet, a Web service that enables anytime, anywhere conference participation using any device. MaJaB is built using standard Web technologies to promote easy deployment across platforms.
 We have evaluated MaJaB over a real-world workload that we observed during our four-month pilot of EasyMeet. Our results show that MaJaB was successful in achieving its goal and, compared to a naive implementation, reduced the percentage of CPU busy periods by 99%, energy consumption by 21%, and network traffic by 25-81% for different participants. While all those improvements result in better user experience, the reduction in network traffic in particular can translate into over $800 saving in international roaming even for a two-user meeting that lasts only for an hour.