. Assuming that “OBVPL” means that the PL is OB and not just implemented that way, where are the objects? For example, assuming the language has nodes and arcs, are the objects the nodes or things that appear on the arcs? Assuming there is something like methods, are they the nodes? Do nodes represent objects with all their methods, some of their methods, one of their methods, the message itself, or what? Should OBVPLs be general purpose languages, or are the visual means at their best in the context of a more specialized language? Should we think of OBVPLs as complementing other programming tools, or as self-sufficient?