We address the problem of maintaining materialized XPath views in environments where the view maintenance system and the base data system are loosely-coupled. We show that the recently proposed XPath view maintenance techniques require tight coupling, and thus are not practical for loosely-coupled systems. Our solution adapts to loose-coupling by using information that is fully available through standard XPath interfaces. This information consists of the view definition, the update statement, and the current materialized view result. Under this model, incremental maintenance is not always possible; thus, maintaining the consistency of the views requires frequent view recomputations. Our goal is to reduce the frequency of view recomputation by detecting cases where a base update is irrelevant to a view, and cases where a view is self maintainable given a base update. We develop an approach that reduces the irrelevance and self maintainability tests, respectively, to checking the intersection and containment of XPath expressions. We present experimental results showing the effectiveness of the proposed approach in reducing view recomputations.