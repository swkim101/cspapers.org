A large number of data-parallel applications can be represented as computational graphs from the perspective of parallel computing. The nodes of these graphs represent tasks that can be executed concurrently, while the edges represent the interactions between them. Further, the computational graphs derived from many applications are such that the vertices correspond to multi-dimensional coordinates, and the interaction between computations is limited to vertices that are physically proximate. In this paper we show that graphs with these properties can be transformed into simple architecture-independent representations that encapsulate the locality in these graphs. This representation allows a fast mapping of the computational graph onto the underlying architecture at the time of execution. This is necessary for environments where available computational resources can fre determined only at the time of execution or that change during execution.