This paper introduces, as an optimistic concurrency control, a new certification method by means of intervals of timestamps, usable in a distributed database system. The main advantage of this method is that it allows a chronological validation order which differs from the serialization one (thus avoiding rejections or delays of transactions which occur in usual certification methods or in classical locking or timestamping ones). The use of the dependency graph permits both classifying this method among existing ones and proving it. 1. INl'RODUCTION Nunerous Concurrency Control Methods (CCMs) for Distributed Data Bases (DDBs) have been proposed so far [Bernstein 811 using either Two-Phase Locking (2PL) or Timestamp Ordering (TO). The main feature of these CCMs is that the serializability test is made for each action (Read or Prewrite) on an object of the base. For this reason, we call these CCMs continuous ones as opposed to certification (also called optimistic) ones, where the Permission to copy without fee all or part of this material iF granted provided that the copies are not made or distributed for direct commcrciot advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice is given that copying is by pe?mLrsion of the VW Large Data Base Endowment. To copy otherwise, or to republish, requires a fee and/or special permission from the Endowment. Proceedings of the Tenth International Conference on Very Large Data Bases. serializability test is only made at the end of the transaction. Usually, continuous CCMs and certification ones are described in totally different ways. Our study offers a unifying view for this classification. Certification methods [Kunq 811, [Haerder 823, [Lausen 821 have been studied mostly for centralized systems. The few proposals adapted to distributed systems [Badal 791, [Schlageter 811, [Bhargava 821 are not convincing due to lack of formal proofs for their desired behavior. We answer that problem by proving a certification method in a distributed system. Serialization relies on the setting among transactions. principles are used control used in CCMs of a serialization order In continuous CCMs two to construct this order. In 2PL methods [Traiger 821, it is dynamically constructed and corresponds to the order into which transactions reach their maximum locking point. The well known drawback of these methods is useless waiting sometimes imposed to transactions and deadlocks which may occur. Deadlock prevention may be applied [Rosenkrantz 783 at the cost of increasing the number of rejections. In basic or multiversions TO CCMs, the order is "static" and relies upon the giving of a unique timestamp to any transaction, thus defining the serialization order. One study [Bayer 821 refines this technique by introducing the notion of a "dynamic" timestamp which avoids useless rejection of a transaction when its first conflict arises, in a very particular CCM. Control by certification allows a dynamic construction of the serialization Singapore, August, 1984