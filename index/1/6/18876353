In this simple model, a decision tree algorithm must determine whether an unknown digraph on nodes {1, 2, …, n} has a given property by asking questions of the form “Is edge <i,j> in the graph?”. The complexity of a property is the number of questions which must be asked in the worst case.
Aanderaa and Rosenberg conjectured that any monotone, nontrivial, (isomorphism-invariant) n-node digraph property has complexity &OHgr;(<italic>n</italic><supscrpt>2</supscrpt>). This bound was proved by Rivest and Vuillemin and subsequently improved to <italic>n</italic><supscrpt>2</supscrpt>/4+<italic>&ogr;</italic>(<italic>n</italic><supscrpt>2</supscrpt>). In Part I, we give a bound of <italic>n</italic><supscrpt>2</supscrpt>/2+<italic>&ogr;</italic>(<italic>n</italic><supscrpt>2</supscrpt>). Whether these properties are evasive remains open.
In Part II, we investigate the power of randomness in recognizing these properties by considering randomized decision tree algorithms in which coins may be flipped to determine the next edge to be queried. Yao's lower bound on the randomized complexity of any monotone nontrivial graph property is improved from &OHgr;(<italic>n</italic>log<supscrpt>1/12</supscrpt><italic>n</italic>) to &OHgr;(<italic>n</italic><supscrpt>5/4</supscrpt>), and improved bounds for the complexity of monotone, nontrivial bipartite graph properties are shown.