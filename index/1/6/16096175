Global exceptions flow across different methods from the place where they are raised to the place where they are handled. As a consequence, modifications in the exception handling code may inadvertently affect other parts of a program, possibly introducing faults in the source code. For this reason, developers wishing to write robust programs must reason about exceptions globally. However, developers still deal with global exceptions in implementation and maintenance phases unaware of exception handling policies. The exception handling policy of a project is the set of design decisions that govern the global use of its exceptions. In fact, there is still no means to specify exception handling policies, let alone means to assist the programming of these policies in the source code. For this reason, most developers end up neglecting global exceptions. Even worse, they usually introduce severe and recurring exception handling faults related to improper handling of global exceptions. In this context, this work aims at supporting the implementation of global exception handling by leveraging on explicit specifications of exception handling policies. To assist the implementation of these policies in the source code, a set of recommender heuristics are proposed. The proposed solution is the first one to provide support for specifying exception handling policies and writing policy-compliant exception handling code.