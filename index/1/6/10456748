We introduce two succinct data structures to solve various string problems. One is for storing the information of <i>lcp,</i> the longest common prefix, between suffixes in the suffix array, and the other is an improvement in the compressed suffix array which supports linear time counting queries for any pattern. The former occupies only 2<i>n</i> + <i>o</i>(<i>n</i>) bits for a text of length <i>n</i> for computing <i>lcp</i> between adjacent suffixes in lexicographic order in constant time, and 6<i>n</i> + <i>o</i>(<i>n</i>) bits between any two suffixes. No data structure in the literature attained linear size. The latter has size proportional to the text size and it is applicable to texts on any alphabet Σ such that |Σ| = log<sup><i>O</i>(1)</sup> <i>n</i>. These space-economical data structures are useful in processing huge amounts of text data.