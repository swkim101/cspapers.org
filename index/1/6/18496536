We present a new algorithm for the on-line <italic>d</italic>-dimensional dictionary problem which has many applications including the management of geometrical objects and geometrical searching. The dictionary problem consists of executing on-line any sequence of the following operations: INSERT(<italic>p</italic>), DELETE(<italic>p</italic>) and MEMBERSHIP(<italic>p</italic>), where <italic>p</italic> is any point in <italic>d</italic>-space. We introduce a clean structure based on balanced binary search trees, which we call <italic>d</italic>-dimensional balanced binary search trees, to represent the set of points. We present algorithms for each of the above operations that take <italic>O(d + log n)</italic> time, where <italic>n</italic> is the current number of points in the  set, and each INSERT and DELETE operation requires no more than a constant number of rotations. Our procedures are almost identical to the ones for balanced binary search trees. The main difference is in the way we search for an element. Our search strategy is based on the principle “assume, verify and conquer” (AVC). We apply this principle as follows. To avoid multiple verifications we shall assume that some prefixes of strings match. At the end of our search we must determine whether or not these assumptions were valid. This can be done by performing one simple verification step that takes <italic>O(d)</italic> time. The elimination of multiple verifications is important because in the worst case there are &OHgr;(<italic>log n</italic>) verifications, and each could take  &OHgr;(<italic>d</italic>) time.