An important research goal in software engineering and programming languages is the development of principles underlying the specification of computable problems, the <italic>translation of these problems into efficient and correct</italic> programs, and the performance analysis of these programs. This paper uncovers some of these principles, which are used to design a problem specification language L<subscrpt>1</subscrpt> restricted to problems that can be compiled automatically into programs whose worst case asymptotic time and space complexities are linear in the input/output space. Any problem expressible in L<subscrpt>1</subscrpt> can be compiled into a linear cost program. A compiler for L<subscrpt>1</subscrpt> has been implemented in the RAPTS transformational programming system.