While computer vision algorithms and libraries have enabled and accelerated the adoption of vision processing into mobile and wearable applications, vision is a resource-hungry operation, and is thus not efficient enough to run on multiple applications simultaneously. However, we observe that many vision algorithms share identical sets of frames and features to perform their analyses, computed from the same library calls. Leveraging this observation, we design a split-process architecture to retrofit existing vision libraries to allow applications to transparently share the computational, memory, and energy overhead of vision processing.