Automotive embedded systems are highly complex and historically grown networks of single-core based control units. Due to space limitations and wiring complexity, the scalability of current architectures is limited. It can be overcome by consolidating multiple currently distributed functions onto shared multi-core platforms. Additionally, virtualization can be used to isolate these functions in separate virtual machines (VMs). However, access to peripherals like Controller Area Network (CAN) communication interfaces must be shared among these partitions, a task that is usually associated with high overheads. In this paper, we present and quantitatively compare two approaches to enable sharing of CAN controllers among VMs. First, we use a software-based paravirtualization, in which I/O requests are moderated by a privileged software component. Second, we offload I/O virtualization tasks into the CAN controller itself, thus providing direct I/O access for VMs.