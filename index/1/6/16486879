There are two aspects of engineering design datz internal data representation and abstract attributes. Most previous design database systems focused on the representational issues of design objects. This paper presents an attribute system called Trait that manages the abstract aspects of engineering design. We introduce a weaklytyped data model that supports both object typing and arbitrary attribute attachment. It features an active-value mechanism that performs demand-driven attribute computation, which is useful when attributes are measurement of certain aspects of design objects. Furthermore, to avoid unnecessary attribute recomputation, an attribute management subsystem is developed that takes into account the semantics of tool execution and automatically maintains the consistency between the abstract and the concrete aspects of design data. Finally an index subsystem is built into Trait to support associative accesses to design objects. We briefly described two applications that exploit the features of Trait.