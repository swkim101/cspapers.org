In the last decade, the robotics field experienced overwhelming increase of robots complexity and spread of robotic applications in consumer, industrial and scientific domains. Software components reuse became a key factor to increase quality of robotic assets and to reduce production time and costs. Thus, the robotics community endeavoured to develop modular robot software architectures, aiming to support the development and integration of robot software modules. Those scattered efforts resulted in a number of products with different features, but a comprehensive product for space applications is yet far to be available. This paper presents the new TAS-I Robot Management Framework and robot modular architecture, including software modules and algorithms implementing the capabilities for continuous traverse, sample canister acquisition and return and to demonstrate them in outdoor environment. Finally, the future works, including porting to flight-representative hardware, modules optimization and customization for specific tasks, projects and future missions will be discussed. 1. NEED FOR A ROBOT MANAGEMENT FRAMEWORK Space exploration is one of the humanity greatest endeavours, where robotic technologies are playing a key role in enabling the achievement of more and more demanding mission requirements and ambitious science objectives. While robotic exploration is a pioneering field open to innovative technologies and solutions, the need of common solid foundations to manage the increased complexity of robotic systems is arising, similarly to what happened in the industrial and academic domains. Therefore, great efforts have been spent in the development of modular robot software architectures (aka robot control operative systems, software frameworks, robotic middleware and so on), with peculiar objectives and features [1, 2, 3]. Even in this wide solutions portfolio plenty of de-facto standards like Robot Operative System (ROS), it is impossible to find a comprehensive product (or a combination of them) which may comply with space domain requirements in terms of reliability, availability, maintainability and safety (RAMS). From these assumptions and the previous experience on robotic frameworks [4, 5, 6] TAS-I pursued the development of its own Robot Management Framework trying to overcome the limitations of the existing approaches. 2. TAS-I ROBOT MANAGEMENT FRAMEWORK OVERVIEW TAS-I Robot Management Framework stands on the following four pillars: Abstraction: to provide abstraction from underlying Hardware and Operating System (OS) to ease portability on different robotic platforms; Foundation: to provide a set of common reliable building blocks which can be reused across various applications; Openness: to provide open interfaces to ease software modules integration; Focus: to provide high-level Application Programming Interface (API) to ease robot software modules implementation. To achieve these objectives TAS-I designed the Robot Management Framework architecture depicted in Fig. 1.