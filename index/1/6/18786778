The classical algorithm for computing the similarity between two sequences [36, 39] uses a dynamic programming matrix, and compares two strings of size <i>n</i> in <i>O</i>(<i>n</i><sup>2</sup>) time. We address the challenge of computing the similarity of two strings in sub-quadratic time, for metrics which use a scoring matrix of unrestricted weights. Our algorithm applies to both <i>local</i> and <i>global</i> alignment computations.The speed-up is achieved by dividing the dynamic programming matrix into variable sized blocks, as induced by Lempel-Ziv parsing of both strings, and utilizing the inherent periodic nature of both strings. This leads to an <i>O</i>(<i>n</i><sup>2</sup>/log <i>n</i>) algorithm for an input of constant alphabet size. For most texts, the time complexity is actually <i>O</i>(<i>hn</i><sup>2</sup>/log <i>n</i>) where <i>h</i> â‰¤ 1 is the entropy of the text.