Though in general, current database systems adequately support application development and operation for online transaction processing (OLTP), increasing complexity of applications and throughput requirements reveal a number of weaknesses with respect to the data model and implementation techniques used. By presenting the experiences gained from a case study of a large, high volume stock trading system, representative for a broad class of OLTP applications, it is shown, that this particularly holds for dealing with high frequency access to a small number of data elements (hot spots). As a result, we propose extended data types and several novel mechanisms, which are easy to use and highly increase the expressional power of transaction oriented programming, that effectively cope with hot spots. Moreover, their usefulness and their ability to increased parallelism is exemplified by the stock trading application.