The internal structure of current data b;lse systems is ideally characterized by a hierarchy of multiple layers. Each layer offers certain specific objects and operations on its interface. Within this framework we investigate the transaction management aspects I It is shown that the System R kind of concurrency control can be generalized and an appropriate recovery method can be found by introducing a type of open nested transactions which are strongly tied to architectural layers. Especially. our approach includes application-specific levels on top of a data base kernel system. Up to now, most of the preprocessor solutions for so-called “non-standard” applications that have been proposed simply ignore aspects of concurrency control and recovery. We sketch different possibilities to realize transaction management in such a layered environment. 1, lntrodution and RB Two different directions of evolution in data base systems may be observed. On the one hand, the performance for commercial applications should be increased still further (/Ba83/) . On the other hand, data base systems of the next generation are expected to support so-called ‘non-standard” applications such as CAD or office automation ( /HR83b/, /SchP82/) . Permiwion to copy without fee all or part of this material is gmnted provided that the cop&s ore not made or distributed for direct commercial advantage, the VLDB copyright not&e and the title of the publication and its date appear, and notice is given that copying is by permission of the Very Large Dora Bose Endowment. To copy otherwlrc. or to republish, requires a fee and/or special permission from the Endowment. 7 hese two objectives, although different, have something in common. To achieve them It does nor suffice to modify single system components locally, rather the overall architecture of data base systems is affected (/Kie83/. /LSch83/). An important part of the architectural considerations is concerned with transaction management ( /Ba83/, /PrS83/) . Ideally we can look at the structure of modern data base systems as a hierarchy of ‘virtual machines’. Each such ‘machine’ is characterized by the objects and operations which are available at its interface. These are In turn implemented with the help of objects and operations of the layer one lower. Such a multi-layered architecture is described In /HR83a/. A variant of it forms the background df a data base kernel system which we plan to implement (/PSSW84/). One special design feature is that we use a single data model. the so-called NF2-relational model, to describe conceptual as well as internal data structures in a uniform way (/SohS83/). In this model NF2-tuples are the basis of complex structured objects which appear on both the storage structure and access path level and, In the context of “non-standard’ applications. at the user interface. The layered architecture of the projected data base kernel system Is roughly described in the following figure 1. Proceodlngr of the Tenth Intomatlonal Confarenoa on Vary Larga Data Bases. Slngapora, August, 1964