Re-use of synchronization code in concurrent OOlanguages has been considered difficult due to i7lheriinrice anomaly, which we minimize with our new pre posal. Designed with hi@ practicality in mind, we propose language primitives (plus t,heir implernentat,ion) \rith t.he following characteristics: (1) it allows niultiple synchronz;atzon schentcs-the language schemes for ~~rogramn1zng synchronization-to coexist and bc integrated, (2) re-use of synchronization code is done sirnilarly t,o sequential OO-languages for user familiarity, (3) it offers high degree of encapsulat,ion-even synchronization schemes could be encapsulated in superclasses in many cases, and (4) it can be efficient,ly implemented on conventional MPPs. We demonstrate the effectiveness of our proposal with solutions to the example inheritance anomaly cases from [16]. We also give an overview of the implementat~ion architecture, along wit11 preliminary benchmarks. The proposed language primitives are being incorporated into our ABCL/onAPlOOO running on Fujitsuâ€™s 512-node PIIPP, APlOOO.