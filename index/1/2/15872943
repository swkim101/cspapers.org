Live programming environments help the programmers to try out expressions by giving immediate feedback on the results as well as intermediate evaluation processes. However, the feedback is transient, and its correctness is merely confirmed by the programmers' manual inspection. We seamlessly integrate live programming with unit testing by proposing novel features (1) that converts a lively-tested expression into a unit test case, and (2) that extracts a unit test case from an execution trace of a lively-tested expression. In this poster, we overview Shiranui, our live programming environment, and present the proposed features implemented in Shiranui.