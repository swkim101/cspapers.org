Inductive programming approaches typically rely on an Occamist bias to select hypotheses with minimal textual complexity. This approach, however, fails to distinguish between the efficiencies of hypothesised programs, such as merge sort (O(n log n)) and bubble sort (O(n2)). We address this issue by introducing techniques to learn logic programs with minimal resource complexity. We describe an algorithm proven to learn minimal resource complexity robot strategies, and we propose future work to generalise the approach to a broader class of programs.