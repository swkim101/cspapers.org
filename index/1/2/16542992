We introduce the queue-read, queue-write (QRQW) PRAM model, which permits concurrent reading and writing, but at a cost proportional to the number of readers/writers to a memory location in a given step. Previously, there were no formal complexity models that accounted for the contention to memory locations, despite the large impact of such contentions on the performance of parallel prdgrams. The QRQW PRAM is strictly more powerful than the EREW PRAM. We show a separation of fi between the two models, and present faster and more efficient QRQW algorithms for many basic problems. Nevertheless, we show that the QRQW can be efficiently emulated with only logarithmic slowdown on Valiantâ€™s BSP model, and hence on hypercube-type non-combining networks, even when latency, synchronization, and memory granularity overheads are taken into account. In contrast, efficient emulations for the CRCW PRAM on such networks are only known with polynomial slowdown. Most existing machines obey the queue-read, queue-write rule. We study the impact of the QRQW rule on algorithm design, devising new techniques for low-contention algorithms. Our results include fast and efficient algorithms for computing the OR, leader election, linear compaction, multiple compaction, integer sorting, and CRCW simulation, as well as several lower bounds. Some of the results presented are quite involved and use several novel ideas and techniques that are interesting on their own.