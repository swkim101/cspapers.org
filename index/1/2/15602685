In this paper we describe the considerations that led us to the design of LDL and nrovide an overview of the features of-this language. L$L is designed to combine the flexibility of logic programming with the high performance of the relational database technology. The design offers an improved mode of control over the existing logic programming languages together with an enriched repertoire of data objects and constructs, including: sets, updates and negation. These advantages are realized by means of a compilation technology.