User Interface Management Systems often attempt to separate the graphical and nongraphical aspects of an application, but rarely succeed. Constraint grammars provide a new model for specifying interfaces that achieves this goal by encapsulating the data structures in a single package, and providing a powerful transformation-based editing model for manipulating them. Constraint grammars incorporate a number of important tools, such as the part-whole hierarchy, almost hierarchical structures, and multidirectional constraints, that permit designers to specify a wide variety of graphical applications, including simulation systems, program visualization systems, and visual programming environments.