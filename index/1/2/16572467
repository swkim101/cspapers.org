We present two new approximation algorithms for the problem of finding a <i>k</i>-node connected spanning subgraph (directed or undirected) of minimum cost. The best known approximation guarantees for this problem were <i>O</i>(min (<i>k</i>,<i>n</i>/√<i>n</i>-<i>k</i>)) for both directed and undirected graphs, and <i>O</i>(ln <i>k</i>) for undirected graphs with <i>n</i> ≥ 6<i>k</i><sup>2</sup>, where <i>n</i> is the number of nodes in the input graph. Our first algorithm has approximation ratio <i>O</i>(<i>k</i>/<i>n</i>-<i>k</i>ln <sup>2</sup> <i>k</i>, which is <i>O</i>(ln<sup>2</sup> <i>k</i>) except for very large values of <i>k</i>, namely, <i>k</i>=<i>n</i>-<i>o</i>(<i>n</i>). This algorithm is based on a new result on <i>l</i>-connected <i>p</i>-critical graphs, which is of independent interest in the context of graph theory. Our second algorithm uses the primal-dual method and has approximation ratio <i>O</i>(√<i>n</i> ln <i>k</i>) for all values of <i>n,k</i>. Combining these two gives an algorithm with approximation ratio <i>O</i>(ln <i>k</i> • min (√<i>k</i>, <i>k</i>/<i>n</i>-<i>k</i> ln <i>k</i>)), which asymptotically improves the best known approximation guarantee for directed graphs for all values of <i>n,k</i>, and for undirected graphs for <i>k</i>> √<i>n</i>⁄6. Moreover, this is the first algorithm that has an approximation guarantee better than Θ(<i>k</i>) for all values of <i>n,k</i>. Our approximation ratio also provides an upper bound on the integrality gap of the standard LP-relaxation to the problem.As a byproduct, we also get the following result which is of independent interest. To get a faster implementation of our algorithms, we consider the problem of adding a minimum-cost edge set to increase the outconnectivity of a directed graph by Δ a graph is said to be <i>l</i>-outconnected from its node <i>r</i> if it contains <i>l</i> internally disjoint paths from <i>r</i> to any other node. The best known time complexity for the later problem is <i>O</i>(<i>m</i><sup>3</sup>). For the particular case of Δ=1, we give a primal-dual algorithm with running time <i>O</i>(<i>m</i><sup>2</sup>).