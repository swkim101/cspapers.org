Designing and implementing thread-safe multi-threaded libraries can be a daunting task as developers of these libraries need to ensure that their implementations are free from concurrency bugs, including deadlocks. Developing multi-threaded tests for this purpose is significantly challenging. In this demo, we will demonstrate our tool (OMEN) for synthesizing deadlock-inducing multi-threaded tests for Java libraries. The input to OMEN is the library implementation under consideration and the output is a set of deadlock revealing multi-threaded tests.