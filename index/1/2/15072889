A software design is often modeled as a collection of unified Modeling Language (UML) diagrams. There are different aspects of the software system that are covered by many different UML diagrams. This leads for big risk that the overall specification of the system becomes inconsistent and incompleteness. This inherits the necessary to check the consistency between these related UML diagrams. In addition, as the software system gets evolution, those diagrams get modified that leads again to possible inconsistency and incompleteness between the different versions of these diagrams. In this paper, we plan to employ our previous novel XML semantics approach, which proposed for checking the semantic consistency of XML documents using attribute grammar techniques, to check the consistency of UML diagrams. The key idea here is translating the UML diagrams to its equivalent XMI documents. Then checking the consistency of these XMI documents, they are special forms of XML, by employing them to our previous XML semantics approach.