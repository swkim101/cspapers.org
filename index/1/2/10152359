The ACM Intercollegiate Programming Contest is probably the most prestigious competition of its kind. Decomposing problems into familiar algorithms; making tradeoffs between efficiency and complexity; working on a team under pressure; not only are these skills needed to compete successfully in such a contest, but are also highly valued in industry. The focus of this poster is to describe a course recently added to the curriculum at Vanderbilt University that centers on programming contest skills and yet, somewhat surprisingly, encompasses several significant learning objectives.
 Because we already had a general idea of what the learning activities of a course like this would be, we were careful not to simply cobble together performance metrics and learning objectives to suit them. This common mistake leads to assessments that devolve into skills tests measuring basic knowledge instead of instruments that gauge a deeper understanding of the target learning objectives. To combat these pitfalls I broke down the learning activity by identifying the skills needed for success in such an exercise. I then classified each skill in two ways. (i) How could this ability play a part in the achievement of some broader, overarching concept and (ii) in what way might the learning and practice of this skill contribute to the deeper understanding of these larger concepts. Our goal is to inform faculty on how they might include a course like this in their programs and to demonstrate its value to the curriculum.