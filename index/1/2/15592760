In this paper, we describe new algorithms for approximately solving the concurrent multicommodity flow problem with uniform capacities. Our algorithms are much faster than previously known algorithms. Besides being an important problem in its own right, the concurrent flow problem has many interesting applications. Leighton and Rao used concurrent flow to find an approximately "sparsest cut" in a graph, and thereby approximately solve a wide variety of graph problems, including minimum feedback arc set, minimum cut linear arrangement, and minimum area layout. We show that their method might be practical by giving an O(m~logm) expected-time randomized algorithm for their concurrent flow problem on an m-edge graph. l~aghavan and Thompson used concurrent flow to approximately solve a channel width minimization problem in VLSI. We give an O(k3/2(m+n log n)) expectedtime randomized algorithm and an O(k min{n, k}(m + n log n) log k) deterministic algorithm for this problem when the channel width is O(logn), where k denotes the number of wires to be routed in an n-node, m-edge network, *Research partially suppor ted by ONR grant N00014-88-K0243 and DARPA grant N00039-88-C0113 at Harvard University tSuppor t provided by Air Force Contract AFOSI:t-86-0078, and by an NSF PYI awarded to David Shmoya, with matching funds from IBM, Sun Microsysterns, and UPS. t Research partially supported by NSF grant DMS87-06133. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 1 I n t r o d u c t i o n The multicommodity flow problem involves shipping several different commodities from their respective sources to their sinks in a single network with the total amount of flow going through an edge limited by its capacity. Here we consider the concurrent flow problem with uniform capacities, which is the problem of finding a multicommodity flow that minimizes the maximum total flow on any edge (the congestion). An important special case of the problem, called the unit-demand unit-capacity concurrent flow problem, arises when the amount of flow that needs to be shipped is the same for each commodity. For both versions of the problem we give algorithms that, for any positive e, find a solution whose congestion is no more than (1 + e) times the minimum congestion. Our algorithms significantly improve the time required for finding such approximately optimal solutions. We shall use n, m and k to denote the number of nodes, edges and commodities. Leighton and Rao [7] showed how to use the solution to a unit-capacity unit-demand concurrent fiow problem to find an approximate "sparsest cut" of a graph. As a consequence, they gave the first polylog-timesoptimal approximation algorithms for a wide variety of graph problems. The computational bottleneck of their method is solving a unit-capacity unit-demand concurrent flow problem with O(n) commodities. They appealed to linear programming techniques to show that the problem can be solved in polynomial time. The new approximation algorithm greatly improves the resulting running time. T h e o r e m 1.1 For any fixed 0 < e < 1, a (1 + e)-factor approximation to the unit-capacity unit-demand concurrent flow problem can be found by a randomized algorithm in O((k + m)mlogm) time, where the constant depends