Parallel prefix computation is perhaps the most frequently used subroutine in parallel algorithms today. Its time complexity on the CRCW PRAM is O(lg n/ lg lg n) using a polynomial number of processors, even in a randomized setting. Nevertheless, there are a number of non-trivial applications that have been shown to be solvable using only an approximate version of the prefix sums problem. In this paper we resolve the issue of approximating parallel prefix by introducing an algorithm that runs in O(lg* n) time with very high probability, using n/ lg’ n processors, which is optimal in terms of both work and running time. Our approximate prefix sums are guaranteed to come within a factor of (1 + E) of the values of the true sums in a “consistent fashion”, where E is o(1). We achieve this result through the use of a number of interesting new techniques, such as overcertification and estimate-focusing, as well as through new adaptations of known techniques, such as failure-sweeping and bit-thinning. We give a number of non-trivial applications of our approximate parallel prefix routine. Perhaps the most interesting application is for padded integer sorting, an approximation version of another fundamental problem in parallel algorithm design-integer sorting-where one wishes to sort R integers into an array of size 0(n), allowing for gaps between consecutive elements. We show that this problem can also be solved in O(lg’ n) time, with very high probability, using a linear amount of work, which is also optimal in both time and work. Finally, we show several applications ‘Department of Computer Science, Johns Hopkins University, Baltimore, MD 21218. Email: goodrich& . jhu. edu. This research supported by the NSF and DARPA under Grant CCR8908092, and by the NSF under Grants IRI-9116843 and CCR-