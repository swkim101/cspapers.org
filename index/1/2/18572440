The rapid growth of large, heterogeneous, resource-sharing computer networks has created a serious problem in the sharing of information between incompatible systems. These incompatibilities can be categorized as either physical or logical in nature. Physical incompatibilities are problems caused by the way that the individual binary digits, regardless of what information they represent, are generated or stored internally. This would include character, word, and record size differences, blocking factors, and parity checking. Logical incompatibilities are differences in the way the meaning of information itself is represented. This could include internal code set, numeric data type representation, text compression, the addition or deletion of fields, resequencing and specially assigned bit patterns. This paper describes the initial work on a processor for supporting the real-time translation and transmission of data streams between nodes of a computer network. The processor, which will address itself to all the problem areas mentioned above, will contain as its primary component a Data Specification and Conversion Language (DSCL) for 1) specifying the physical and logical structure of the data streams at the sending and receiving sites and 2) describing and implementing the translation processes required for conversion of the source stream into the desired target stream. DSCL is implemented in the framework of a very high-level, special-purpose language with a wide range of automatic (i.e. transparent) services performed on behalf of a user. The execution of the resulting DSCL program by the DSCL processor will actually effect the transmission and translation of a specified data stream between network nodes.