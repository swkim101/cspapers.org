Multiuser transaction processing and database systems commonly use well-formed, two-phase locking to maintain data consistency. The preliminary results presented here represent the first step of an experimental investigation of the impact of different locking schemes on transaction performance. Tests were performed using a simplified but functionally complete "testbed" system. The transaction throughput rates for three different locking policies (file level locking, page level locking, and mixed level locking) are compared as a function of the lock mode (exclusive or share) and the file size for a small centralized database application. The experimental results for this environment show that the choice of locking policy and lock mode can have a significant impact on transaction throughput performance. The tests also demonstrate the sensitivity of the conclusions to the choice of workload and system characteristics.