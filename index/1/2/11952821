The overhead incurred by reasoning in knowledgebased systems can be considerable when it is forced to rely on search. Even problems that are known to have tractable solutions can expend large amounts of computation when the inference method is too general. As discussed in this paper, reflective architectures provide a well-motivated framework for integrating specialized control with general reasoning in knowledge-based systems. However, progress in developing reflective architectures for more expressive languages such as first-order logic has encountered several problems of its own. Briefly, this paper considers a reflective architecture for general declarative languages, and describes how declarative and procedural requirements can be combined in a reflective system for first-order logic. As part of this example, two kinds of control, in the form control strategies and subsidiary deduction rules, are identified.