This special session presents issues, approaches and experiences related to incorporating Human-Computer Interaction (HCI) into the undergraduate CS curriculum. Since the publication of the ACM SIGCHI Curricula for Human-Computer Interaction in 1992 [1], CS educators have tried various implementations of these guidelines. These implementations have been mainly offered as elective courses or modules within other courses, partly because the CS mainstream has been slow to recognize the importance of user interface design and HCI issues in software development.Today at least 50% of the code written for software applications is specific to the user interface. Average end-user expertise is continually dropping due to the proliferation of inexpensive computers available to the general public. Accordingly, user interface effectiveness has become increasingly important in software development, as the user interface has the power to "make or break" a software product. Through its emphasis on user-centered design, task analysis, and usability evaluation among other topics, an HCI course addresses more than 1/3 of the guidelines and imperatives of the ACM Code of Ethics [2]. This includes issues related to professional review, evaluations of computer systems, social responsibility and quality of life, and non-discrimination and dignity of end-users.CS educators have begun realizing the importance of incorporating HCI into the educational experience of students. Approximately 40% of the CAC-accredited degree programs include an HCI course at the upper level; however, this course is offered mostly as an elective (37% of degree programs) as opposed to a required course (3% of degree programs) [3]. Also, HCI is included as a core knowledge area in Computing Curricula 2001 [4, 5, 6]; unfortunately, only six hours have been devoted to it, as opposed to, say, 36 hours for architecture.