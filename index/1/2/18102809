This paper introduces an improved architecture for system communication. The architecture is based on the Translator pattern which is derived from existing design patterns. Hierarchical abstraction and ontologies are used to combine these basic patterns and to merge their advantages into one, domainand language-independent software framework. This conceptual framework, called Cybernetics Oriented Programming (CYBOP), has its roots in the layered architecture pattern and is characterized by flexibility and extensibility. It helps to structure software as well as to keep it maintainable. A Component Lifecycle ensures the proper startup and shutdown of any systems built on top of CYBOP. Great influence was exerted by the biological model of information processing in the human brain. It provided the idea of a seemless integration of communication paradigms and persistence mechanisms. Overcoming the classical scheme of thinking in terms of Domain, Frontend, Backend and Communication, this architecture treats them all similar, as passive data models which can be translated into each other â€“ as opposed to the classical approach that unnecessarily complicates their design. The practical proof of this combined architectural approach was accomplished within an (ongoing) effort to design and develop a module called ReForm, for the Open Source Software (OSS) project Res Medicinae. The main task for this module is to provide a user interface for printing medical forms. It was used to examine the communication between modules and to find a structure for effective implementation and easy expansion.