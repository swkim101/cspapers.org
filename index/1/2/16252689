Many combinatorial problems---such as the traveling salesman, feedback arcset, cutwidth, and treewidth problem---can be formulated as finding a feasible permutation of <i>n</i> elements. Typically, such problems can be solved by dynamic programming in time and space <i>O</i>* (2<i><sup>n</sup></i>), by divide and conquer in time <i>O</i>* (4<i><sup>n</sup></i>) and polynomial space, or by a combination of the two in time <i>O</i>* (4<i><sup>n</sup></i>2<sup>-<i>s</i></sup>) and space <i>O</i>* (2<i><sup>s</sup></i>) for <i>s</i> = <i>n, n</i>/2, <i>n</i>/4,.... Here, we show that one can improve the tradeoff to time <i>O</i>* (<i>T<sup>n</sup></i>) and space <i>O</i>* (<i>S<sup>n</sup></i>) with <i>TS</i> < 4 at any âˆš2 < <i>S</i> < 2. The idea is to find a small family of "thin" partial orders on the <i>n</i> elements such that every linear order is an extension of one member of the family. Our construction is optimal within a natural class of partial order families.