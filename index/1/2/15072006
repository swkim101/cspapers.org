The analysis of the relation between the structure of a program and the function that it computes requires a decomposition of the program into its components. Traditionally this decomposition has been based on the common division of a program into subprograms, and ultimately into statements, expressions and individual variables and constants. In this paper an alternative decomposition is proposed that is based on the decomposition of a program into a set of kernel elements, those program elements that participate in the direct computation of the outputs of the program, and a set of control elements, those elements that participate in the determination of the execution path. The kernel-control decomposition of a program leads to a series of progressively more abstract program representations, each of which has both theoretical and practical interest. The separation of control structure from kernel and the three abstract models presented here, which are based on this decomposition, are particularly valuable in the analysis and optimization of program control structures. This research summary outlines the major results, which will be reported in full in a journal article.