Conventional production information systems require much less user specification of a request compared to a relational query designed to achieve the same result. This economy of input is traditionally achieved by declaring a number of a priori assumptions about the context, processing and format of each request, and implementing these in an application program. Despite all the increased power and flexibility promised by relational systems, their proponents still advocate the allocation of these assumptions to a host programing language. The result of persisting in this methodology during the relational era will be that the normal evolution of the assumptions will completely offset the application program stability originally sought by the relational approach. 
 
As an alternative, this paper suggests that the a priori assumptions can themselves be generalized and allocated to an end-user facility. Generalized processing is approached by noting that all algorithms are themselves n-ary relations and can therefore be accessed by the user in precisely the same way as database relations, without any knowledge or dependence on the way in which the algorithms are implemented. The generalization of context is shown to be achievable through the admission of partially predefined queries that can span the complete range from ad hoc requests to real-time displays. Format generalization is approached as a mapping problem, and a number of striking similarities between managing display organizations and managing database organizations are identified and recursive application of the data managment system (DMS) is explored as a solution. Finally, it is noted that while the end-user facility in effect directs the execution of the DMS, it can also make extensive use of the services of the DMS, leading to a surprisingly elegant implementation architecture.