When engineering an automated planning model, domain authors typically assume a static, unchanging ground-truth world. Unfortunately, this assumption can clash with reality, where domain changes often rapidly occur in best practices, effectors, or known conditions. In these cases, remodeling the domain causes domain experts to ensure newly captured requirements integrate well with the current model. In this work, we address this model maintenance problem in a system called Marshal. Marshal assists model maintainers by reasoning about their model as a (hidden) stochastic process. It issues queries, and learns models by observing query answers, plan solutions, and direct changes to the model. Our results indicate that anticipating model evolution leads to more accurate models over naive approaches.