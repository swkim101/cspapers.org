The object-oriented model has become exceedingly attractive as the best answer to the increasingly complex needs of the software development community. The initial boasts regarding quality, reuse, concurrency, and scalability are now being substantiated by documented software development experience. It is certainly appropriate, then, for educators who teach computer science (the current preparation for emerging software developers) to examine where object-oriented development best fits into the computer science curriculum. How much of the paradigm—language, analysis, design, management—ought to be addressed? At what level in an undergradute program are object-oriented techniques appropriate? What are the risks involved? How is the object-oriented approach effectively taught?