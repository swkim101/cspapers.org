Four liveness properties of concurrent programs are characterized by the fact that their computations, represented as sequences of partial orderings of events, are convergent in suitable metric spaces. The corresponding topological completions do not therefore contain the infinite computations without the desired properties. The properties are: vitality (i.e. every running process will eventually produce an observable event), global and local fairness, and deadlock freedom. This approach proves fruitful since a universal scheduler is defined, which, when supplied with a particular metric, generates all and only convergent computations. Thus, this scheduler can be used to generate all and only vital, fair or deadlock free computations.