Functions that are guaranteed not to have side effects are common in modern procedural languages, but not in object-oriented languages. Certain types of state changes are essential in object functions; the difficulty lies in permitting these while banning undesirable side effects. A simple way of doing this is presented. Using this as a base, we can introduce islands of objects which can statically ensure nonaliasing properties in a very non-restrictive way. Islands make construction of opaque object components more practical. They also make formal treatment of object behaviour more feasible, since the object structures they encompass can be truly opaque to their clients.