Much has already been written on beginning computer science courses; but what has been written has been about how to present programming concepts to students who are new to computer science, about structured programming and GOTO-less programming as well as about the contents of those beginning courses. Design and programming methodology is usually left for a specific course given to junior or senior students. Even though structured programming and some approaches to problem solving are taught, very often methodology is ignored or barely mentioned. And when students do take a course on systems design, the view of methodology they get is obscured by the usually bad habits they have developed during their studies and in their programming projects. This has left the universities open to criticism by industry for not producing people ready for work, or for producing people with bad working habits who have a hard time adjusting to the standards of established organizations. Efforts to remedy that problem have been sporadic, some teachers did introduce methodology in a beginning course, but only to see their efforts reduced to nothing for lack of follow-up.
 An experiment to integrate methodology into beginning courses has been made at UQAM where the number of computer science students (more than 900 students in two computer science programs) has made it absolutely necessary to give people good working habits so that the scarce computer resources are used in the most efficient way.