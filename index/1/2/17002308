Although scientific data analysis increasingly requires access to and manipulation of large quantities of data, current database technology fails to meet the needs of scientific processing. Shortcomings include data modeling facilities for scientific data types, physical storage structures for these types, and scientific analysis operations on data objects. Database systems for scientific users must address these shortcomings. 
A database system can offer numerous functionality improvements over the current combinations of scientific programs and file systems commonly used in scientific data analysis. Unfortunately, the inclusion of a database layer between the application and the file system holding the application's data can result in degraded performance. To overcome acceptance problems among scientists, scientific databases must provide performance comparable to, and functionality superior to, current systems used by scientists. 
Algebraic query optimization is one of many techniques used within database systems to improve performance. This technique has not been explored for scientific data types and operations. I have proposed expanding the concept of a database query to include numeric computations over scientific databases, thereby allowing algebraic query optimization to be applied to the full scientific computation and data access operations. 
This research introduces an integrated algebra that includes traditional database operators for pattern matching and search as well as numeric operators for scientific analysis. The use of a single integrated algebra enables automatic optimization of computations, realizing all of the benefits provided by optimization in traditional database systems. 
To experiment with this integrated algebra, a prototype system has been implemented for use at the University of Colorado's Space Grant College. The prototype supports many basic scientific operations such as interpolation and digital filtering, in addition to standard relational operations. I identify a set of transformation rules for this algebra, and show that these transformations can be used to achieve significant performance improvements. 
The results from the prototype demonstrate that scientific database computations can be effectively optimized and permit performance gains that could not be realized without the integration of scientific operators into database systems. These results suggest that future scientific database systems will be expected to be based on integrated retrieval and computational algebras.