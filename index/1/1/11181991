The problem is to organize search from an AND node in a way that minimizes expected cost. The result is derived as a corollary to earlier work of Simon and Kadane. It is shown that, unless knowledge gained during the search changes the probability or cost estimates of remaining parts of the search, the original a priori strategy remains optimal. The effect of approximating the search statistics used to determine the optimal strategy is examined, and it is found that the impact on expected cost is linearly bounded by the quality of the approximation. Then the case of searching an infinite conjunct is considered. Finally, some related research topics are discussed. 1 . I N T R O D U C T I O N Suppose that an unknown number, possibly zero, of treasure chests have been buried on a random basis at some of n sites, but that neither the sites or the depths of burial are known with certainty. At each site a sequence of one-foot slices can be excavated, and a treasure may be disclosed by the removal of any one of these slices. The probability that a treasure lies just below any specified slice is known, as is the cost of excavating that slice. Develop a strategy with the minimum expected cost to find a treasure. Simon and Kadane have solved the stated problem. It is a metaphor for satisficing search from an OR node. Each site is a disjunct, and finding a treasure at any site is sufficient to terminate the search. Excavating a slice is analogous to performing the next atomic action in the search at one of the disjuncts, e.g., expanding a node. The given probabilities and costs correspond respectively to the probability of a node expansion producing a goal node and the cost of expanding the node. This paper develops an optimal search strategy from an AND node. Here, it is necessary to find a treasure at every site. If the search succeeds, the order of excavating slices makes no difference because the search at each site terminates exactly when a treasure is found at that site. The search can fail only if the bottom of some site is reached without finding a treasure. Therefore, the This research is supported by the Defense Advanced Research Projects Agency under Contract No MDA903 81 C 0335. Views and conclusions contained in this report are the author's and should not be interpreted as representing the official opinion or policy of DARPA, the U.S. Government, or any person or agency connected with them. 2 Simon, H. A., and J B. Kadane. "Optimal Problem-Solving Search. AllorNone Solutions," Artificial Intelligence 6 (1975), 235-247. best strategy should quickly discover a failure, if any, to preclude further search. Section 2 presents the best strategy for searching from OR nodes and derives the result for AND nodes as a corollary. The best strategy first digs at one site until either a treasure is found or the bottom is reached. In the first case, another site is selected, etc. In the latter case, the entire search is concluded. It is never optimal to switch back and forth between sites. Section 3 develops notation that is used in the remainder of the paper. Section 4 considers what happens if knowledge is gained during the search. It is shown that unless the probabilities or costs associated with unexcavated slices are changed, the a priori strategy remains optimal. Section 5 examines the problem of determining approximations to the optimal strategy when the probabilities and costs are not available. Section 6 looks at the problems of a site being infinitely deep. Finally, Section 7 lists some important open questions related to these results 2 . THE S I M O N K A D A N E RESULT 2.1. Optimal Searching from OR Nodes If s is a slice, let p(s) be the probability that a treasure is just below s and c(s) be the cost of excavating s. Let b = s1..s where the s1 are slices. Then b is an (admissible) strategy when (1) the s are distinct, (2) if s and s1 are slices from the same site and i<j, slice i is above slice j, and (3) if two slices from a site are in b, all the slices between these two from that site are in b too. A strategy is a proposed order for excavating slices. The notation is generalized in a natural way so that p(b) is the probability that strategy b will unearth a treasure and c(b) is the expected cost of following strategy b. (Recall that execution ceases if a treasure is found, hence some of the work proposed by b may not be done.) Define the benefit-to-cost ratio as <p(b) = p(b)/c(b) with the assumptions that p(s)not =1 and c(s)not=0, where s is a slice. The assumptions entail respectively that no slice or site contains a treasure with certainty and that no slice or site can be excavated for free. Description of the optimal strategy for searching from OR nodes depends on the idea of maximal indivisible blocs. A bloc is any consecutive set of slices from the same site. Let b = s1...sr be all the slices from a single site ordered from top to bottom; thus, b is a strategy. If (Sj)<<p(sj + 1), join Sj and sj+ as a bloc replacing the original pair. Continue this process until it terminates and b has been divided into a sequence of blocs, b = b.-.b , where each b is