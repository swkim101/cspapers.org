A major disadvantage of the two-phase commit (2PC) protocol is the potential unbounded delay that transactions may have to endure if certain failures occur. By combining a novel use of compensating transactions along with an optimistic assumption, we propose a revised 2PC protocol that overcomes these difficulties. In the revised protocol, locks are released when a site votes to commit a transaction, thereby solving the indefinite blocking problem of 2PC. Semantic, rather than standard, atomicity is guaranteed as the effects of a transaction that is finally aborted are undone semantically by a compensating transaction. Relaxing standard atomicity interacts in a subtle way with correctness and concurrency control issues. Accordingly, a correctness criterion is proposed that is most appropriate when atomicity is given up for semantic atomicity. The correctness criterion reduces to serializability when no global transactions are aborted, and excludes unacceptable executions when global transactions do fail. We devise a family of practical protocols that ensure this correctness notion. These protocols restrict only global transactions, and do not incur extra messages other than the standard 2PC messages. The results are of particular importance for multidatabase systems.