The benefits of object-oriented programming apply only to programs consisting of multiple objects. Inter-object design patterns make it, in theory, possible for beginning programmers to create well-understood forms of such programs. However, their descriptions have been targeted at experienced programmers with knowledge, for instance, of the implementation of compilers. We show that it is possible to explain and motivate several of these patterns including the iterator, model-view-controller, model-interactor, observer, fa√ßade, composite, and factory patterns by showing them working "in the small" in simple examples. We have effectively used this approach to teach an undergraduate class including several college freshmen and one high-school junior, who were able to exercise the patterns "in the medium.