Modern and future robotic applications will have to integrate many software components. Inevitably, the components will be provided by different vendors, and will not be designed together, and in many cases also not implemented from the same source code repository. This paper presents a discussion on how to deal with this multi-component, multi-vendor situation. This situation includes the least optimal case when most or all of the components are “legacy”, in the sense that they have to be integrated as binary pieces of code, without the possibility to change the components for the sole purpose of facilitating system-level integration. The presented approach is illustrated by an application that integrates (i) two KUKA Light-Weight Robot FRI control components, (ii) a set of ROS components to control a Willow Garage PR2 robot, (iii) a Blender component for on-line visualization, and (iv) a set of Orocos/RTT components that take care of the data flow communication and some simple coordination between all components.