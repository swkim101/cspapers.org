We call a depth-4 formula C <i>set-depth-4</i> if there exists a (unknown) partition X<sub>1</sub>⊔⋅⋅⋅⊔ X<sub>d</sub> of the variable indices [n] that the top product layer respects, i.e. C(term{x})=∑<sub>i=1</sub><sup>k</sup> ∏<sub>j=1</sub><sup>d</sup> f<sub>i,j</sub>(term{x}<sub>X<sub>j</sub></sub>), where f<sub>i,j</sub> is a <i>sparse</i> polynomial in F[term{x}<sub>X<sub>j</sub></sub>]. Extending this definition to any depth - we call a depth-D formula C (consisting of alternating layers of Σ and Π gates, with a Σ-gate on top) a <i>set-depth-D</i> formula if every Π-layer in C respects a (unknown) partition on the variables; if D is even then the product gates of the bottom-most Π-layer are allowed to compute arbitrary monomials. In this work, we give a hitting-set generator for set-depth-D formulas (over <i>any</i> field) with running time polynomial in exp((D<sup>2</sup>log s)<sup> Δ - 1</sup>), where s is the size bound on the input set-depth-D formula. In other words, we give a <i>quasi</i>-polynomial time <i>blackbox</i> polynomial identity test for such constant-depth formulas. Previously, the very special case of D=3 (also known as <i>set-multilinear</i> depth-3 circuits) had no known sub-exponential time hitting-set generator. This was declared as an open problem by Shpilka & Yehudayoff (FnT-TCS 2010); the model being first studied by Nisan & Wigderson (FOCS 1995) and recently by Forbes & Shpilka (STOC 2012 & ECCC TR12-115). Our work settles this question, not only for depth-3 but, up to depth εlog s / log log s, for a fixed constant ε < 1. The technique is to investigate depth-D formulas via depth-(D-1) formulas over a <i>Hadamard algebra</i>, after applying a 'shift' on the variables. We propose a new algebraic conjecture about the <i>low-support rank-concentration</i> in the latter formulas, and manage to prove it in the case of set-depth-D formulas.