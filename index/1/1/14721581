Persistence in applications saves a computation state that can be used to facilitate system recovery upon failures. As we begin to adopt virtual execution environments (VMs) for mission-critical real-time embedded applications, persistence service will become an essential part of VM to ensure high availability of the systems.In this paper, we focus in a schedulable persistence system in VMs and show a prototype persistence system constructed on CLI 's open source platform, MONO. By employing object serialization, the system enables concurrent and preemptible persistence operation, i.e., the task in charge of persistence service runs concurrently with application tasks and is a target of real-time scheduling. Thus, the execution of application tasks can be interleaved with the operations of persistence service, and the task timeliness can be guaranteed as the pause time caused by persistence service is bounded. The experiment output on the prototyped system illustrates that persistence service is appropriate for realtime applications because of its controllable pause time and its optimized overhead.