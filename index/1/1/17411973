The conventional way of organizing indices in large data base systems is to use balanced tree structures such as B-trees or static tree structures, e.g. ISAM. It is well known in practice that most applications do not have a uniform record reference distribution but rather the 80/20-rule or Zipf's law applies. The balanced index implementations mentioned do not exploit these skewed access patterns.
 This paper, which is an extract from the author's Ph.D.-thesis, proposes a data structure - the C-tree - which is designed to exploit the skewness of such access distributions with the intent of obtaining short response times for transactions accessing the index. An analytical model of the proposed structure and a B-tree is used for making a comparative evaluation of the structures. Conclusions are drawn and discussed with regard to the circumstances under which the proposed structure outperforms the B-tree.