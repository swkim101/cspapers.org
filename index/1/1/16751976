The Automatic Speculative Thread Extractor, ASTEX, addresses the problem of partitioning C code into threads at compile time in order to map them onto System on Chip (SoC). The startpoint of thread extraction is to find the code region to implement as thread. In ASTEX it is based on program hot-paths detection. Then ASTEX construct a thread speculative model for each hot-path. Since ASTEX, contrary to previous work, doesn't assume shared memory, the speculation is performed on control flow and data layout also. The output is a set of threads characterized by their execution time, the code coverage, the amount of memory and communication required, etc. Our Experiments show that the approach is able to capture and to characterize the main computation kernels of embedded applications and how the hot path detection algorithm paremeter influence the final output layout.