We argue that viewing a program as a linear sequence of symbols on paper or on a display is outmoded and unnecessarily restrictive. Instead, programs should be regarded as complex multi-dimensional artifacts on which linear text provides but one possible view. Freeing ourselves from these restrictions is very difficult: it requires not only a modest amount of new technology, but also a qualitative change in the way that programmers think. However, the potential benefits are enormous. Multiple views make it easier to understand complex programs, and provide a unifying framework for many common program transformations. In addition, Multiple views provide a solution for language designers trying to choose between competing alternatives: provide the advantages of both, but in different views.