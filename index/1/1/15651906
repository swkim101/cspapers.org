In this paper, we address the problem of priority scheduling in a database management system. We start by investigating the architectural consequences of adding priority to a DBMS. Specific priority-based schemes are then proposed for managing DBMS resources. including a priority-based diik scheduling algorithm and two approaches to adding priority to the buffer manager of a DBMS. We study the performance of our proposals through simulation, both individually and in combination. Our simulation results indicate that the objectives of priority scheduling cannot be met by a single priority-based scheduler. They show that, regardless of whether the system bottleneck is the CPU or the diik, priority scheduling on the critical re.som must be complemented by a priority-based buffer management policy.