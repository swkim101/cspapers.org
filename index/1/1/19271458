The abfity to optimize queries is considered one of the key enabling technologies for relational databases and is an active area in research and development. There continues to be work in discovering new transformations for SQL. The problem of building extensible query optimizers continues to draw a lot of attention, not only in academic research but also in commercial development. Despite such strides, it appears that we have no good solutions to some central problems in query optimization that has plagued the field since its early days. The problem of estimating selectivities and calculating accurate costs continues to be hard and becomes a nightmare aa we consider Abstract Data Types or distributed and heterogeneous queries. Compared to developing transformations, we have made much less progress in understanding the nature of the search space, interactions among transformations, and the quality of plans generated by an optimizer. In particular, the problem of how to integrate the transformations in a cost-based fashion remains a daunting task. For example, optimizing nested SQL queries efficiently is still an open problem. Unlike traditional OLTP applications, decision-support systems will provide the real test for optimizers. Emergence of decision support systems has also triggered significant growth in middleware to serve these applications. Many believe that it is the middleware layer, packaged applications and front-end tools that will drive the optimization of queries by using the appropriate optimizer hints. Such a trend will change the landscape of optimization and may lead to diminishing importance of generic SQL optimizers. We would like to hear from the panelists their views on the state of the art and the future of query optimization in databases: