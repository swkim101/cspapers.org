Two vertices in a weighted directed graph may be connected by many shortest paths. Although all these paths are shortest in terms of weight, the number of edges on them may vary substantially. This leads us to consider the AlI Pairs Lightest Shortest Paths (APLSP) problem. A solution to this problem is a representation of shortest paths between all of pairs of vertices in the graph such that each of these shortest paths uses a minimal, or a close to minimal, number of edges. We present the following algorithms for obtaining exact or approximate solutions to the APLSP problem: l An d(n*+“) time algorithm for exactly solving the APLSP problem for directed graphs with integer weights of small absolute value, where n is the number of vertices in the graph and v < 0.747 is the solution of the equation ~(1, v, 1) = 3u, where ~(1, u, 1) is the exponent of the multiplicationof an n x R” matrix by an n” x n matrix. l An d(n’+“) time algorithm, where p < 0.575 is the solution of the equation ~(1, p, 1) = 1 + 2/~, for finding shortest paths between all pairs of vertices in a directed graph on n vertices with integer weights of small absolute value such that each shortest path found uses at most (1 + I) times the minimal number of edges required, for any fixed L > 0. . An 6(n” log W) time algorithm, where w = w(l,l,l) < 2.376 is the the exponent of square matrix multiplication, for finding paths between all pairs of vertices in a directed graph on n vertices with non-negatiue real edge weights, such that each path returned is of stretch at most