Nondeterminism makes concurrent programs difficult to test. The testing task is made more difficult by the presence of races that are deliberately introduced by a programmer. A powerful approach towards testing a concurrent program is to test all instances of its execution for a given input. The only known general purpose run-time testing technique for unrestricted message passing parallel programs} called controlled execution, has exponential complexity (O(pnkg(n))). In this paper, we present a run-time algorithm with polynomial time complexity (O(pkg(n))) for testing for the occurrence of undesired races in a class of message passing parallel programs. This algorithm improves upon the previous technique of controlled execution by using Race Expressions, Race expressions are used for the specification of race conditions based on the programâ€™s context. A OneThread-atOneTime (OtOt) strategy is the basis of this class of techniques for race detection. We have implemented this algorithm in a testing and debugging tool, called mdb, for the Parallel Virtual Machine (PVM) environment [25].