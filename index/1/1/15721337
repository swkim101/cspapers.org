A data warehouse collects and maintains a large amount of data from multiple distributed and autonomous data sources. Often the data in it is stored in the form of materialized views in order to provide fast access to the integrated data. However, maintaining a certain level consistency of warehouse data with the source data is challenging in a distributed multiple source environment. Transactions containing multiple updates at one or more sources further complicate the consistency issue.
Following the four level consistency definition of view in a warehouse, we first present a complete consistency algorithm for maintaining SPJ-type materialized views incrementally. Our algorithm speed-ups the view refreshment time, provided that some extra moderate space in the warehouse is available. We then give a variant of the proposed algorithm by taking the update frequencies of sources into account. We finally discuss the relationship between a view's certain level consistency and its refresh time. It is difficult to propose an incremental maintenance algorithm such that the view is always kept at a certain level consistency with the source data and the view's refresh time is as fast as possible. We trade-off these two factors by giving an algorithm with faster view refresh time, while the view maintained by the algorithm is strong consistency rather than complete consistency with the source data.