We consider the on-line version of the original <italic>m</italic>-machine scheduling problem: given <italic>m</italic> machines and <italic>n</italic> positive real jobs, schedule the <italic>n</italic> jobs on the <italic>m</italic> machines so as to minimize the makespan, the completion time of the last job. In the on-line version, as soon as job <italic>j</italic> arrrives, it must be assigned immediately to one of the <italic>m</italic> machines.
We present two main results. The first is a (2–ε)-competitive deterministic algorithm for all <italic>m</italic>. The competitive ratio of all previous algorithms approaches 2 as <italic>m</italic>→<inline-equation> <f> ∞</f> </inline-equation>. Indeed, the problem of improving the competitive ratio for   large <italic>m</italic> had been open since 1966, when the first algorithm for this problem appeared.
The second result is an optimal randomized algorithm for the case <italic>m</italic> = 2. To the best of our knowledge, our 4/3-competitive algorithm is the first specifically randomized algorithm for the original, <italic>m</italic>-machine, on-line scheduling problem.