There are two widely-known benchmarks for database management systems the TP1 benchmarks (Anon et al [1985]), designed to measure transaction throughout, and the Wisconsin benchmarks (Bitton, Dewitt, & Turbyfil [1984]), designed to measure the performance of a relational query processor. In our work with databases on engineering workstations, we found neither of these benchmarks a suitable measure for our applications' needs. Instead, our requirements are for response time for simple queries. We propose benchmark measurements to measure response time, specifically designed for the simple, object-oriented queries that engineering database applications perform. We report results from running this benchmark against some database systems we use ourselves, and provide enough detail for others to reproduce the benchmark measurements on other relational, object-oriented, or specialized database systems. We discuss a number of factors that make an order of magnitude improvement in benchmark performance caching the entire database in main memory, avoiding query optimization overhead, using physical links for prejoins, and using an alternative to the generally-accepted database “server” architecture on distributed networks.