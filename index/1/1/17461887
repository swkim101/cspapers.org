Clustering support with a single-system image view for large-scale Web servers is important to improve the system scalability in processing a large number of concurrent requests from Internet, especially when dynamic content generation using CGI or other protocols becomes increasingly popular. This paper studies a two-level scheduling framework with a master/slave architecture for clustering Web servers. Such an architecture has advantages in dynamic resource recruitment, fail-over management and it can also improve server performance compared to a flat architecture. The key methods we propose to make this architecture efficient are the separation of static and dynamic content processing, low overhead remote execution, and reservation-based scheduling which considers both I/O and CPU utilization. This paper provides a comparison of several scheduling approaches using experimental evaluation and analytic modeling. The results show that proper optimization in resource management can lead to over 65% performance improvement for a fixed number of nodes, and can achieve more substantial improvement when considering idle resource recruitment.