Ensuring software quality in the presence of multiple software development methodologies such as agile and waterfall models is a challenging task. Web applications are released to customers in “Beta” mode due to tremendous pressure on “time-to-market”. In order to check end-to-end functional behavior of web applications, conventional testing tools have not matched short release cycles and have not kept up with agile software methodologies. In this paper we present a tool framework called WEb Applications Validation Environment (WEAVE) for checking functional behavior such as business logic and security of web applications. We have used WEAVE for finding defects in large Javacentric commercial-strength Web applications. As part of WEAVE, we have developed (1) a semi-automatic method for environment generation to constrain the behavior of the application for scalability, (2) an intuitive interface for engineers to construct requirements that are compiled into temporal logic to address the issue of usability, and (3) symbolic execution tailored to finding business logic and security defects. We describe how we have architected WEAVE as a web service for company's internal software teams to improve software quality without an upfront investment in licenses and computing infrastructure.