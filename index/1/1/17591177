In this work, we take a step towards bridging the gap between the theory of formal synthesis and its application to real-world, complex, robotic systems. In particular, we present an end-to-end approach for the automatic generation of code that implements high-level robot behaviors in a verifiably correct manner, including reaction to the possible failures of low-level actions. We start with a description of the system defined a priori. Thus, a non-expert user need only specify a high-level task. We automatically construct a formal specification, in a fragment of Linear Temporal Logic (LTL), that encodes the system's capabilities and constraints, the task, and the desired reaction to low-level failures. We then synthesize a reactive mission plan that is guaranteed to satisfy the formal specification, i.e., achieve the task's goals or correctly react to failures. Lastly, we automatically generate a state machine that instantiates the synthesized symbolic plan in software. We showcase our approach using Team ViGIR's software and Atlas humanoid robot and present lab experiments, thus demonstrating the application of formal synthesis techniques to complex robotic systems. The proposed approach has been implemented and open-sourced as a collection of Robot Operating System (ROS) packages, which are adaptable to other systems.