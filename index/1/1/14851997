Recently a number of projects have addressed the problem of automatically producing interface designs for computer applications [Arens .et al., 1988; Weitzman, 1988; Beshers and Feiner, 1989; Wiecha et al., 1989; Kim and Foley, 19891. The core of each of these design tools takes as input a specification of the functionality and information that the application is to present to the user and produces as output an interface specified in terms of some toolkit of interface techniques. Each of these tools interacts, to some degree, with a human interface design expert in order to produce these interface designs. Some of these tools allow the designer to arbitrarily manipulate the components of a design to produce the desired result. Others require the design expert to specify the desired changes in the form of new rules which can be used on subsequent designs. Interaction with a designer is essential for each of these tools because there is no complete set of rules that can be used to compute all aspects of an interface design. Although there are a number of sets of guidelines for effective interface designs [Corporation, 1987; Smith and Mosier, 1986; Shneiderman, 19871, they are all inadequate for a completely automated interface design system. The most obvious inadequacy is in the area of Esthetic decisions; most sets of interface guidelines either lack guidelines for determining the specific visual appearances and organization of an interface, or else such guidelines are too vague to be used automatically. For example, advice like, “Allocate more screen space (or primary optical areas) to more important objects,” does not specify just how much more screen space should be allocated. Furthermore, such advice