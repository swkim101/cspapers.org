Automatic parallelization of the real Fortran programs does not yet live up to onr expectations. As recent studies [BE94] demonstrate, state-of-the-art parallelizing compilers produce no noticeable speedup for 9 out of 12 PERFECT benchmark codes, while the speedup reached by manually applying certain automata b[e constraint propagation techniques ranges from 10 to 50 times. In this paper we show how a subset of these much-desired techniques can be implemented in a compiler. We describe an algorithm that combines lazy eza ct array dat afl ow dependence analysis and on-demand global value propagation to achieve new level of precision in the dependence testing. Another feature of onr algorithm is that it performs propagation without modifying a program. Due to severe space constraints, we present here only extended abstract of the paper. The full version can be obtained from http: Ilvww. cs. umd. eduluserslvadiklpaperslvalue-propl or from ftp: Ilftp. cs. umd. edulpublcyrilliclpape rslvalue-propi.