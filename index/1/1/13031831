A terrain <b><i>M</i></b> can be represented as a triangulation of the plane along with a height function associated with the vertices (and linearly interpolated within the edges and triangles) of <b><i>M</i>.</b> We investigate the problem of answering <i>contour queries</i> on <b><i>M</i></b>: Given a height <i>l</i> and a triangle <i>f</i> of <b><i>M</i></b> that intersects the level set of <b><i>M</i></b> at height <i>l</i>, report the list of the edges of the connected component of this level set that intersect <i>f</i>, sorted in clockwise or counter-clockwise order. Contour queries are different from level-set queries in that only one contour (connected component of the level set) out of all those that may exist is expected to be reported. We present an I/O-efficient data structure of linear size that answers a contour query in <i>O</i>(log<sub><i>B N + T/B</i></sub>) I/Os, where <i>N</i> is the number of triangles in the terrain and <i>T</i> is the number of edges in the output contour. The data structure can be constructed using <i>O</i>(Sort(<i>N</i>)) I/Os.