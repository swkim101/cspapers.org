We consider a connected set of workstations as a “pool of processors” and develop a queueing model to analyze the performance of optimal co-scheduling algorithms. The pool of processors model was originally developed for the Amoeba operating system. It was also used in the design of the recent IBM supercomputer model 9076 SP1. Recently, co-scheduling has been suggested as an approach for scheduling computationally intensive tasks in the pool of processors model. Co-scheduling algorithms select the best possible subset of workstations for a task to minimize its completion time.
We develop a queueing model which allows us to investigate the dynamic performance of co-scheduling algorithms from the system point of view under several queueing strategies. We use six different queueing strategies in combination with co-scheduling and compare the results to the M/M/m system where arriving tasks would be assigned to workstations as whole computations, and no co-scheduling would take place. The results show that the co-scheduling approach is viable under a wide range of system parameters. Moreover, performance differences of queueing strategies tend to diminish as the number of workstations grows. This suggests that co-scheduling is universally applicable across the queueing disciplines considered here when there are a large number of workstations.