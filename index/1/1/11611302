Applications that can tolerate a certain degree of inaccuracy offer opportunities for performance improvement and/or power reduction through techniques that produce approximate results. Such techniques have been proposed at many levels of the system stack. Performing approximation at the level of functions promises significant performance improvement. Limitations of existing techniques are that they involve hardware, require substantial programmer involvement, or do not employ efficient approximation strategies. In this paper, we introduce a function approximation scheme that aims to overcome these limitations. Comparing our scheme with existing techniques, we show that it can efficiently approximate functions in software. The evaluation of our scheme on 90 mathematical and scientific functions from the GNU Scientific Library (GSL) shows that the speed of 90% of these functions can be improved. For 80% of the functions, the normalized RMS error in the approximated result is very small (0.04 on average) with 7.5x average speedup. Whereas for another 10% of the functions, the error is 0.4 with an average speedup of 5x. We also demonstrate the feasibility, practicality, and effectiveness of the approach by presenting results on five real applications. The average speedup for these applications is 2.9x with 0.25% error.