Operating Systems (OS) in wireless sensor nodes can be classified into event-driven systems or multithreaded systems. Most event-driven systems, such as TinyOS, drive down power consumption although context switching for real-time processing is not available. Among multithreaded systems, non-preemptive systems, such as Protothreads in Contiki, often have lack of real-time processing capability. In Protothreads, if a higher-priority task was posted while a lower-priority task has been running, the lower-priority task cannot be preempted. Thus, one challenge is that without changing the semantics of Protothreads, how the system can be preemptive as well as lowering the power consumption for real-time tasks such as target tracking. In this paper, we propose a dynamically switchable scheduling system for operating systems using Protothreads where events with time constraint have occurred. This system enables to trigger interruption, to process real-time tasks preferentially when real-time events occurred, and to save energy by executing tasks except real-time tasks as a standard event-driven system. Exeprimental results show that latency in Contiki is reduced by about 75% in the best case and is kept constant with power efficiency.