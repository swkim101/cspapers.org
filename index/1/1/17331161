In spite of the goodwill and best efforts of software engineers and usability professionals, systems continue to be built and released with glaring usability flaws that are costly and difficult to fix after the system has been designed and/or built. Although user interface (UI) designers, be they usability or design experts, communicate usability requirements to software development teams, seemingly obvious usability features often fail to be implemented as expected. If, as seems likely, software developers intend to implement what UI designers specify and simply do not know how to interpret the architectural ramifications of usability requirements, then Usability-Supporting Architectural Patterns (USAPs) will help to bridge the gap between UI designers and software engineers to produce software architecture solutions that successfully address usability requirements. USAPs will achieve this goal by embedding usability concepts in templates that can be used procedurally to guide software engineers' thinking and reduce memory load during the complex task of software architecture design.