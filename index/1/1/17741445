Simulation represents a powerful tool for reasoning about possible worlds, and, more generally, can be regarded as an important design aid. The design of physical systems is often accomplished by a cycle of activities, including phases that construct models, test the model's behavioral consequences by simulation, diagnose the causes for poor behavior in terms of design weaknesses, and propose model changes. In this paper we present an overview of ROSS, a domain-independent language for writing simulations in a wide variety of domains. ROSS has two distinct components. First ROSS embeds a kernel that is sufficiently powerful to create procedural models of complex systems. Second, ROSS includes important tools that assist the user at several other stages of the design cycle; specifically, in diagnosing system performance problems, and in proposing intelligent model changes. We show specific examples of how ROSS's meta-description capabilities enable it to provide a friendly design environment.