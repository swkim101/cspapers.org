Modern operating systems rely on software defenses against hardware attacks. These defenses are, however, as good as the assumptions they make on the underlying hardware. In this paper, we invalidate some of the key assumptions behind retpoline , a widely deployed mitigation against Spectre Branch Target Injection (BTI) that converts vulnerable indirect branches to protected returns. We present R ETBLEED , a new Spectre-BTI attack that leaks arbitrary kernel memory on fully patched Intel and AMD systems. Two insights make R ETBLEED possible: ﬁrst, we show that return instructions behave like indirect branches under certain microarchitecture-dependent conditions, which we reverse engineer. Our dynamic analysis framework discovers many exploitable return instructions inside the Linux kernel, reach-able through unprivileged system calls. Second, we show how an unprivileged attacker can arbitrarily control the predicted target of such return instructions by branching into kernel memory. R ETBLEED leaks privileged memory at the rate of 219 bytes/s on Intel Coffee Lake and 3.9 kB/s on AMD Zen 2. Abstract Speculative execution attacks that exploit branch target injection (Spectre-BTI) have so far been limited to indirect branch instructions. R ETBLEED extends Spectre-BTI to return instructions. During our research into R ETBLEED , we discovered that certain AMD CPUs are also vulnerable to a new class of speculative execution attacks that we refer to as P HANTOM JMP S — incorrect branch target prediction in the absence of a corresponding branch instruction. Our investiga-tion so far shows that P HANTOM JMP S signiﬁcantly increases the attack surface of Spectre-BTI, but it is more difﬁcult to exploit under real-world conditions. This addendum brieﬂy discusses our ﬁndings and directions for future research.