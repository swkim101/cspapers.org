Effective syscall ﬁltering is a key component for withstanding the numerous exploitation techniques and privilege escalation attacks we face today. For example, modern browsers use sandboxing techniques with syscall ﬁltering in order to isolate critical code. Cloud computing heavily uses containers, which virtualize the syscall interface. Recently, cloud providers are switching to in-process containers for performance reasons, calling for better isolation primitives. A new isolation primi-tive that has the potential to ﬁll this gap is called Protection Keys for Userspace (PKU). Unfortunately, prior research high-lights severe deﬁciencies in how PKU-based systems manage syscalls, questioning their security and practicability. In this work, we comprehensively investigate syscall ﬁltering for PKU-based memory isolation systems. First, we identify new syscall-based attacks that can break a PKU sandbox. Second, we derive syscall ﬁlter rules necessary for protecting PKU domains and show efﬁcient ways of enforcing them. Third, we do a comparative study on different syscall interposition techniques with respect to their suitability for PKU, which allows us to design a secure syscall interposition technique that is both fast and ﬂexible. We design and prototype Jenny– a PKU-based memory isolation system that provides powerful syscall ﬁltering capabilities in userspace. Jenny supports various interposition techniques (e.g., seccomp and ptrace), and allows for domain-speciﬁc syscall ﬁltering in a nested way. Furthermore, it handles asynchronous signals securely. Our evaluation shows a minor performance impact of 0–5% for nginx.