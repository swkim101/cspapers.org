Although the newest versions of TLS are considered secure, ﬂawed implementations may undermine the promised security properties. Such implementation ﬂaws result from the TLS speciﬁcations’ complexity, with exponentially many possible parameter combinations. Combinatorial Testing (CT) is a technique to tame this complexity, but it is hard to apply to TLS due to semantic dependencies between the parameters and thus leaves the developers with a major challenge referred to as the test oracle problem : Determining if the observed behavior of software is correct for a given test input. In this work, we present TLS-Anvil, a test suite based on CT that can efﬁciently and systematically test parameter value combinations and overcome the oracle problem by dynamically extracting an implementation-speciﬁc input parameter model (IPM) that we constrained based on TLS speciﬁc parameter value interactions. Our approach thus carefully restricts the available input space, which in return allows us to reliably solve the oracle problem for any combination of values generated by the CT algorithm. We evaluated TLS-Anvil with 13 well known TLS implementations, including OpenSSL, BoringSSL, and NSS. Our evaluation revealed two new exploits in MatrixSSL, ﬁve issues directly inﬂuencing the cryptographic operations of a session, as well as 15 interoperability issues, 116 problems related to incorrect alert handling, and 100 other issues across all tested libraries.