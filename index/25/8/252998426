Standalone orchestrators simplify the development of serverless applications by providing higher-level programming interfaces, coordinating function interactions and ensuring exactly-once execution. However, they limit application ﬂexibility and are expensive to use. We show that these specialized orchestration services are unnecessary. Instead, application-level orchestration, deployed as a library, can support the same programming interfaces, complex interactions and execution guarantees, utilizing only basic serverless components that are already universally supported and billed at a ﬁne-grained per-use basis. Furthermore, application-level orchestration affords applications more ﬂexibility and reduces costs for both providers and users. To demonstrate this, we present Unum, an application-level serverless orchestration system. Unum introduces an intermediate representation that partitions higher-level application deﬁnitions at compile-time and provides orchestration as a runtime library that executes in-situ with user-deﬁned FaaS functions. On unmodiﬁed serverless infrastructures, Unum functions coordinate and ensure correctness in a decentralized manner by leveraging strongly consistent data stores. Compared with AWS Step Functions, a state-of-the-art standalone orchestrator, our evaluation shows that Unum performs well, costs signiﬁcantly less and grants applications greater ﬂexibility to employ application-speciﬁc patterns and optimizations. For a representative set of applications, Unum runs as much as 2x faster and costs 9x cheaper.