Mobile devices are ubiquitous, heterogeneous and resource constrained. Execution of complex tasks in mobile devices are resource demanding and time-consuming, forcing developers to offload portions of the complex task to cloud or edge computing resources. Task offloading becomes increasingly challenging due to intermittent Internet connectivity, remote resource unavailability, high costs, latency, and limited energy of the mobile device. A mobile device user is typically surrounded by other mobile devices, which can be leveraged to collaboratively compute a resource-intensive task. With the help of a work sharing framework, it is feasible for devices to communicate and collaborate. However, some mobile devices are incapable of computing complex portions of the task, and some can compute in accelerated mode. In this demonstration, we introduce Honeybee-T a collaborative mobile crowd computing framework that uses a work-stealing algorithm. The algorithm allows work sharing with collaborating devices based on devices' computational ability and task-dependencies. The experiments show that by employing Honeybee-T framework, when compared to monolithic execution of a large compute-intensive task, there is a considerable performance gain, as well as energy savings.