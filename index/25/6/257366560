This poster will explain a debugging intervention that centered around debugging in Scratch. The debugging intervention focuses on teaching 4th and 5th-grade students' computational skills that assist with debugging (code reading, writing, tracing, and prediction) and the debugging process (finding and fixing bugs). This debugging intervention taught 49 students (ages 9 and 10) how to read, write, trace, and debug in Scratch 3.0. These skills are essential for students to become efficient programmers and debuggers. Through video observation and retrospective think-aloud interviews with 19 consenting students, we found students primarily took the approach of reducing the complexity of the coding blocks and using less conceptually difficult blocks. Most commonly, students removed or replaced repeat-until loops with if-then statements whenever they encountered the loops. Students also replaced if-then-else with multiple if-then statements. These debugging patterns were able to get their code functioning but did not represent the desired computational concepts. These results highlight the need for more pedagogical approaches for teaching elementary student's complex computer science concepts such as if-then-else statements and repeat-until loops.