Mathematics is often considered the foundation of computer science, with rigorous, mathematical reasoning, i.e., proof, at the heart of this foundation. Mathematical proof is the backbone of virtually all introductory mathematics courses within any computer science major. However, the degree to which rigorous reasoning is required of students in subsequent courses is highly variable across institutions. At some institutions, proof is a tool used to deepen material, whereas, at other places, proof is set aside in favor of increased topic coverage. Consequently, many students do not see the purpose of proof in computing. Furthermore, the demands of rigorous mathematical reasoning dissuade many students from continuing in the field. As we reflect on our educational practices in the whitewater of the global pandemic, the pocket of inclusion, and on the shoulder of updated ACM curricular guidelines, we should reflect on why we value proof and how we teach it. In this BoF, we will discuss the purpose of proof in the undergraduate computer science curriculum: Why do we do it? To what degree should we do it? How do we teach it faithfully while conveying its relevance and removing barriers to students entering the discipline?