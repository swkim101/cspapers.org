Learning how to program is an essential skill, but many students struggle with debugging errors in their code due to inadequate compiler error messages. To better understand students' errors while working on programming assignments, we automatically collect snapshots of students' code after a period of inactivity. We ran the snapshot codes to extract all potential errors. We developed a feedback tool to provide customized responses for runtime errors extracted from the snapshots. We used a survey to evaluate the effectiveness of the feedback tool and found that as the semester progressed, more students used the feedback tool. The survey also revealed that around 40% of the respondents found the tool useful. Computer programming is an essential skill in many disciplines. Yet, most students struggle in introductory computer science courses, and one of the main causes of this is that students debug errors ineffectively. Many studies leverage students' coding errors to assess debugging strategies and programming performance. Supporting evidence suggests that the amount of repeated errors. One of the contributing factors for learning how to debug effectively stems from adequate information provided by error messages, which is often the only feedback students receive on coding errors. However, a recent ITICSE working group found compiler error messages were unhelpful for most students. The effectiveness of feedback messages, specifically those for runtime errors, this project aims to improve the usefulness of feedback messages students receive when running their code and assess students' perceptions of how these improved feedback messages help them debug their code.