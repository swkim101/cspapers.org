Introductory computer programming courses are widely popular, however have notoriously high attrition rates, as much as 50% [5], and poor overall satisfaction scores on prior surveys. Core concepts and syntax of the language being taught can be difficult to conceptualize for beginners [7], further suggesting an unfriendly learning curve, that risks dissuading programming neophytes. This abstract presents data from the Art, Coding, Action! (ACA) summer camp, which aimed to teach rising 9th and 10th grade students who had little-to-no programming experience fundamental concepts in one week. ACA utilized a block-based programming interface called Snap!, which has demonstrated improved retention and applicability for beginners [7]. In order to help increase content retention, the pedagogical approach of pair programming [1] was also used, encouraging students to simultaneously teach themselves and their peers when faced with challenges [3]. While focusing on art throughout the lessons to make activities more interesting for students, PRADA [2] and computing-infused curriculum development methods [4] were kept in mind to maximize the effectiveness of the camp. Through Google form feedback provided by the students, in addition to informal conversations and analyses of the complexity of their final projects, evidence suggests that the curriculum was successful as it taught the integral concepts we aimed to convey. For future use, the creation of buffers into the lessons and additional staff training would allow the current curriculum to improve accommodation of each student's pace and level of comfort.