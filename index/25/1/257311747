This paper presents the Debugging C Compiler (DCC), a system that composes a suite of compilers with static and dynamic analysis tools to support introductory C programming students. Using C in our introductory computing courses exposes students to low-level mechanics of the operating system, such as pointers and manual memory management - concepts critical in establishing a solid foundation of computing. Unlike typical C implementations, DCC provides programmers with enhanced, approachable run- and compile-time checking and messages. DCC clarifies C's cryptic operating system errors such as segmentation faults and alleviates the need for students to analyse memory dumps and tackle undefined behaviours. This paper describes DCC's implementation and features, and measures the tool's efficacy in aiding novice C programmers. We further present our deep reflections as to how DCC has enabled us to continue to use C in our large introductory programming courses, with an estimated five million compilations to date. Our research also outlines avenues for future work, which we hope will support others in delivering a foundations-first approach to introductory programming.