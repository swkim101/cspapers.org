—Trusted Execution Environments (TEEs) ensure the conﬁdentiality and integrity of computations in hardware. Subject to the TEE’s threat model, the hardware shields a computation from most externally induced fault behavior except crashes. As a result, a crash-fault tolerant (CFT) replication protocol should be sufﬁcient when replicating trusted code inside TEEs. However, TEEs do not provide efﬁcient and general means of ensuring the freshness of external, persistent state. Therefore, CFT replication is insufﬁcient for TEE computations with external state, as this state could be rolled back to an earlier version when a TEE restarts. Furthermore, using BFT protocols in this setting is too conservative, because these protocols are designed to tolerate arbitrary behavior, not just rollback during a restart. In this paper, we propose the restart-rollback (RR) fault model for replicating TEEs, which precisely captures the possible fault behaviors of TEEs with external state. Then, we show that existing replication protocols can be easily adapted to this fault model with few changes, while retaining their original performance. We adapted two widely used crash fault tolerant protocols — the ABD [6] read/write register protocol and the Paxos [34] consensus protocol — to the RR model. Furthermore, we leverage these protocols to build a replicated metadata service called TEEMS , and then show that it can be used to add TEE-grade conﬁdentiality, integrity, and freshness to untrusted cloud storage services. Our evaluation shows that our protocols perform signiﬁcantly better than their BFT counterparts (between 1 . 25 and 55 × better throughput), while performing identically to the CFT versions, which do not protect against rollback attacks.