Stateful distributed stream processing engines (SPEs) usually call for dynamic rescaling due to varying workloads. How-ever, existing state migration approaches suffer from latency spikes, or high resource usage, or major disruptions as they ig-nore the order of state migration during rescaling. This paper reveals the importance of state migration order to the latency performance in SPEs. Based on that, we propose Meces, an on-the-fly state migration mechanism which prioritizes the state migration of hot keys (those being processed or about to be processed by downstream operator tasks) to achieve smooth rescaling. Meces leverages a fetch-on-demand design which migrates operator states at record-granularity for state consistency. We further devise a hierarchical state data structure and gradual strategy for migration efficiency. Meces is implemented on Apache Flink and evaluated with diversified benchmarks and scenarios. Compared to state-of-the-art approaches, Meces improves stream processing performance in terms of latency and throughput during rescaling by orders of magnitude, with negligible overhead and no disruption to non-rescaling periods. Abstract Meces is implemented on Apache Flink. It also relies on Kafka and Redis to function properly. We prepare the pro-grams, assemble a workflow of Meces and package the artifact into a Docker image.