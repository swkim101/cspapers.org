We introduce the following submodular generalization of the Shortest Cycle problem. For a nonnegative monotone submodular cost function f defined on the edges (or the vertices) of an undirected graph G, we seek for a cycle C in G of minimum cost 𝖮𝖯𝖳 = f(C). We give an algorithm that given an n-vertex graph G, parameter ɛ > 0, and the function f represented by an oracle, in time n𝒪(log 1/ɛ) finds a cycle C in G with f(C)≤ (1+ɛ). 𝖮𝖯𝖳. This is in sharp contrast with the non-approximability of the closely related Monotone Submodular Shortest (s,t-Path problem, which requires exponentially many queries to the oracle for finding an n2/3-ɛ-approximation Goel et al. [7], FOCS 2009. We complement our algorithm with a matching lower bound. We show that for every ɛ > 0, obtaining a (1+ɛ)-approximation requires at least nΩ (log 1/ ɛ) queries to the oracle. When the function f is integer-valued, our algorithm yields that a cycle of cost 𝖮𝖯𝖳 can be found in time n𝒪(log 𝖮𝖯𝖳). In particular, for 𝖮𝖯𝖳 = n𝒪(1) this gives a quasipolynomial-time algorithm computing a cycle of minimum submodular cost. Interestingly, while a quasipolynomial-time algorithm often serves as a good indication that a polynomial time complexity could be achieved, we show a lower bound that n𝒪(log n) queries are required even when 𝖮𝖯𝖳= 𝒪(n). We also consider special cases of monotone submodular functions, corresponding to the number of different color classes needed to cover a cycle in an edge-colored multigraph G. For special cases of the corresponding minimization problem, we obtain fixed-parameter tractable algorithms and polynomial-time algorithms, when restricted to certain classes of inputs.