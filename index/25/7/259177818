Debugging embedded systems is difficult due to the restricted resources available, and the hard to reproduce bugs. Moreover, few debugging facilities are available for constrained devices. To address this, we build upon a recent technique for big data applications, called out-of-place debugging. An out-of-place debugger captures a remote process and debugs it locally. However, embedded devices include external resources that are not available locally. We therefore developed a novel hybrid out-of-place debugger, which allows a process running on an embedded device to be partially captured, but still receive data and events produced by the hardware. This has the advantage that we can use all the resources of the local machine to implement advanced debugging features, such as back-in-time debugging. Our demo shows how the EDWARD prototype in VS Code can debug a common hardware issue, and a concurrency bug on an ESP32. We also show how these issues are hard to find with logging or classic remote debuggers.