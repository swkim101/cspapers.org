Gaitonde and Tardos recently studied a model of queueing networks where queues compete for servers and re-send returned packets in future rounds. They quantify the amount of additional processing power that guarantees a decentralized system's stability, both when the queues adapt their strategies from round to round using no-regret learning algorithms, and when they are patient and evaluate the utility of a strategy over long periods of time. In this paper, we generalize Gaitonde and Tardos's model and consider scenarios where not all servers can serve all queues (i.e., the underlying graph is an incomplete bipartite graphs) and, further, when packets need to go through more than one layer of servers before their completions (i.e., when the underlying graph is a DAG). For the bipartite case, we obtain bounds comparable to those by Gaitonde and Tardos, with the factor slightly worse in the patient queueing model. For the more general multi-layer systems, we show that straightforward generalizations of the utility function and servers' priority rules in Gaitonde and Tardos's model may lead to unbounded gaps between centralized and decentralized systems when the queues use no regret strategies. We define a new utility and a service priority rule that are aware of the queue lengths, and show that these suffice to restore the bounded gap between centralized and decentralized systems observed in bipartite graphs.