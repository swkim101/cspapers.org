Since its beginnings, web pages have been based on files. This means that HTML, CSS, and JavaScript are transferred from server to client as files, which by default need to be fully loaded before the web page is displayed. This render-blocking procedure increases loading times significantly, leading to reduced user satisfaction and revenue loss due to lower conversion rates. We present a full implementation of a new approach for loading web pages by splitting up every component and loading the page via a text-based stream. Such a modification aligns with current trends of the HTTP protocol, which has been using streams internally since HTTP/2. It significantly improves loading times, independent of the total page size.