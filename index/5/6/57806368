The incremental evaluation of logic programs maintains the tabled answers in a complete and consistent form in response to the changes in the database of facts and rules. The critical challenges for the incremental evaluation are how to detect which table entries need to change, how to compute the changes and how to avoid the re-computation. In this paper we present an approach of maintaining one consolidate system to cache the query answers under the nonmonotonic logic. We use the justification-based truth-maintenance system to support the incremental evaluation of tabled Prolog Programs. The approach used in this paper suits the logic based systems that depend on dynamic facts and rules to benefit in their performance from the idea of incremental evaluation of tabled Prolog programs. More precisely, our approach favors the dynamic rules based logic systems.