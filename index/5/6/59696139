Although the Ada programming language was designed to address many real-time issues within a single language framework, it is widely accepted that it has not totally succeeded in achieving its stated design goals. Ada, with an appropriate project support environment, has successfully addressed many of the software engineering issues associated with the production of large soft real-time software. It has failed, however, to cope adequately with most of the hard real-time problems. In particular its model of concurrency has been much criticised for its lack of flexibility and its potential inefficiency. The authors discuss some of the outstanding problem areas with the language. They identify a range of issues associated with the Ada tasking model that should be considered in the short, medium or long-term, if Ada is to be used for a wide range of real-time applications in current and future systems. >