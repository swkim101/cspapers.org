As Web applications manipulate an increasing volume of XML data, there is a growing need for reliable systems to store and provide efficient access to these data. The use of relational database systems for this purpose has attracted considerable interest with a view to leveraging their powerful and reliable data management services. Due to the mismatch between the XML and the relational models and the many different ways to map a given XML document into relations, it is hard to tune a relational engine and ensure that XML queries will be evaluated efficiently. Several approaches have been proposed to address this problem. In fact, major database vendors provide several means for database developers to describe how to map XML documents into relational tables. However, the available solutions are proprietary, and tied to a particular database backend. In addition, they are either limited with respect to expressivity and the kinds of mappings they can represent, or they are too complex to use. In this paper, we propose an XML-to-relational mapping framework (and system) that is portable, expressive, and easy to use. We describe a mapping scheme wherein mappings are defined through annotations in an XML Schema and thus, not tied to any particular database engine. The various mapping dimensions were taken into account in the design of the annotations, making the framework flexible; capable of expressing a wide range of existing mappings strategies; and easily extensible to incorporate new mapping strategies. In effect, together with the schema information, the mapping provides a formal specification of the mapping. We show how this specification can be leveraged in two important tasks: in mapping analysis to ensure both correctness and that desirable properties hold for a given mapping; and in data shredding and query translation.