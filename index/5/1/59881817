Constraint programming is a promising technique for solving many difficult combinatorial problems. Since real-life constraints can be difficult to describe in symbolic expressions, or provide very weak propagation from their symbolic representation, they are sometimes represented in the form of the sets of solutions or sets of nogoods. This adhoc representation provides strong propagation through domain (generalized arc) consistency techniques. However, the adhoc representation is expensive in terms of memory and computation, when the adhoc constraint is large. So there is interest in determining less expensive methods for building propagators for adhoc constraints [Frühwirth, 1998; Apt and Monfroy, 1999; Abdennadher and Rigotti, 2000; Barták, 2001; Dao et al., 2002]. In this paper, we propose a new language-independent representation for adhoc constraints, the box constraint collection. The idea is to break up an adhoc constraint into pieces and cover these pieces using box constraints as tiles. This can be done automatically with a greedy algorithm. With the aid of constructive disjunction and a suitable choice of constraint templates in the collection, our new representation achieves domain consistency.