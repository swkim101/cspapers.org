Classification is an important task in data mining field. As the time of big data is coming, the traditional methods of classification cannot satisfy the requirements of real-time processing and storage for big data. This study firstly applies a machine learning technique called extreme learning machine (ELM) to classify for big data. Performances of ELM for big data are evaluated by using big data. The experimental results show that classification method based on ELM outperforms other methods based on BP neural networks and support vector machine (SVM). Secondly, the possibility of paralleling ELM based on MapReduce is analyzed and a paralleling ELM is designed. Introduction Classification techniques are supervised learning which learn from an existing categorized dataset what inputs of a specific category look like. As a result, the classification model constructed in the classification process is able to classify the unlabelled input dataset to the correct category. Therefore, classification is an important task in data mining; and is widely used in many areas such as image, finance, human capital, stock, marketing, manufacturing, health care, and etc. Many classification techniques have been proposed by researchers in machine learning, pattern recognition and statistics; and mainly focus on improving the performances of algorithms but not the data processing capability. There are several classical algorithms for classification such as decision tree (DT), Bayesian methods, Bayesian network, rule-based algorithms, neural network, support vector machine (SVM), association rule mining, k-nearest-neighbor, case-based reasoning, genetic algorithms, rough sets, and fuzzy logic [1]. However, as the time for big data is coming, some classification techniques are unsuitable to this condition or need to be redesigned with distributed parallel computing method, such as DT, NaiveBayes (NB), SVM, etc [2, 3]. It is important to know performances of classification techniques for big data, in this paper, four main classification techniques i.e. decision tree, BP neural network, and NB and SVM were used for experiments. From the learning speed and operability view, this study endeavored to explore ELM for big data compared with other algorithms. And now the machine learning based on Hadoop MapReduce is the research focus for big data, so this study simply analyzed ELM based on MapReduce. This paper is organized as follows. The second section introduces the fundamental principle of proposed method based on ELM. The third section discusses experiment setup and results. Then, the forth section analyzes the possibility of paralleling ELM based on MapReduce and designs. Finally, the paper ends with conclusions and some related future works. Methodology In this section, the classification model for big data using extreme learning machine (ELM) is presented. Taking into account the randomness for the selection of weights and biases in hidden layer of ELM [4], an integration of ELM is used to determine the number of hidden nodes, and then the International Conference on Information Science and Computer Applications (ISCA 2013) Â© 2013. The authors Published by Atlantis Press 81 average of related results of ELM is used to evaluate the performances of classification. For this method, firstly the useful dataset were extracted from the raw data by preprocessing dirty data. Then the most significant attributes are selected to be the inputs of the ELM and the output of the ELM is the category. Subsequently, before being divided into training and predicting datasets, the data composed of input/output pairs are transformed into numerical or string format so that the inputs fall into a specific range and the outputs satisfy the requirement of algorithms. Based on the network structure and configuration parameters obtained by training set, the predicted category for the predicting set can be calculated quickly by the established ELM. In experiments section, a figure about how each step is implemented is presented. In the following, a concise review of ELM [5] is given. Extreme learning machine Input Layer Hidden Layer Output Layer Input1