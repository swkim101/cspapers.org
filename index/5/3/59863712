Welcome to the 5th ACM Workshop on Programming Languages meets Program Verification -- PLPV 2011 -- held in Austin, Texas on January 29, 2011. PLPV 2011 is the fifth in a series of meetings; previous versions of the workshop were held in Madrid (2010), Savannah (2009), Freiburg (2007) and Seattle (2006). 
 
PLPV provides a forum to foster and stimulate research at the intersection of programming languages and program verification, by bringing together experts from diverse areas like types, contracts, interactive theorem proving, model checking and program analysis. Work in this area typically attempts to reduce the burden of program verification by taking advantage of particular semantic or structural properties of the programming language. 
 
The topics covered in the workshop span both theoretical and practical aspects of program verification and the integration of programming language and program verification technology. In particular, we solicited submissions that study the diverse foundations for verification (Type-based, Hoare-logic-based, Abstract Interpretation-based, etc), target different kinds of programming languages (functional, imperative, object-oriented, etc), and apply these ideas to diverse kinds of program properties (data structure invariants, security properties, temporal protocols, resource constraints, etc). 
 
This year, ten papers were submitted to PLPV. Each submission was reviewed by at least three members of the program committee. After carefully weighing the relevance and quality of each paper, the committee chose to accept six papers: four research papers and two challenge problems. In addition, this year's workshop continues the PLPV tradition of inviting distinguished speakers to give talks and tutorials. This year's program contains talks by: 1. J. Moore (University of Texas, Austin) on "Reasoning about Digital Artifacts with ACL2" 2. The Trellys Group on "The Preliminary Design of the Trellys Core Language"