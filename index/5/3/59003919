Eﬀective distribution of critical shared resources among concurrently executing threads is key to improving overall system performance in Simultaneous Multi-Threading (SMT) processors. One of the most critical shared resources is physical register ﬁle in the rename stage and a disproportional distribution of these rename registers can easily render it a bottleneck along the pipeline stages. In this paper, we propose an architectural-level physical register ﬁle allocation algorithm to better utilize the register ﬁle. Once the overall physical register ﬁle utilization exceeds a certain threshold, the thread with the highest occupancy is temporarily suspended in order to allow other threads more space to proceed for achieving a higher throughput. Our simulations based on M-Sim [1] show that our proposed technique improves IPC (Instruction Per Clock Cycle) by a very signiﬁcant margin (up to 25%) without sacriﬁcing execution fairness among the threads.