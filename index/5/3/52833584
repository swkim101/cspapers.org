A new ray-tracing algorithm designed specifically for massively parallel hypercube connected processors is introduced. World space is subdivided according to a fixed size 3-D orthogonal grid. Rays are traced using ray-points which move along the rays, referencing the voxels intersected. One processor is assigned per ray, as well as one processor per object fragment.
A pointerless data structure called an induced octree is used. This structure exists only as an ordering of the data in processor-address space, yet with it, all processors can determine the jump-distance to the nearest non-empty voxel in parallel to within a power of two. Ray-points move by large jumps whenever possible, and ray-object intersection proceeds in log time in the average ray length. Sorting via the network is the parallel analogue to octree-traversal.
A code-scheduling mechanism is introduced which improves processor usage for SIMD architectures.
Preliminary results are presented for an implementation using a CM-1 CPU equipped with 16k processors.