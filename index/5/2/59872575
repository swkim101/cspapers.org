Welcome to the fourth Workshop on Declarative Aspects of Multicore Programming -- DAMP 2009. Parallelism is going mainstream. Many chip manufactures are turning to multicore processor designs rather than scalar-oriented frequency increases as a way to get performance in their desktop, enterprise, and mobile processors. This endeavor is not likely to succeed long term if mainstream applications cannot be parallelized to take advantage of tens and eventually hundreds of hardware threads. Programs written in functional or (constraint-)logic programming languages, or in other languages with a controlled use of side effects, can greatly simplify parallel programming. Such declarative programming allows for a deterministic semantics even when the underlying implementation might be highly non-deterministic. In addition to simplifying programming, this can reduce the effort required for debugging and analyzing correctness. 
 
DAMP 2009 is the fourth in a series of one-day workshops seeking to explore ideas in programming language design that will greatly simplify programming for multicore architectures, and more generally for tightly coupled parallel architectures. The emphasis is on functional and (constraint-)logic programming, but all programming language ideas that aim to raise the level of abstraction are welcome. DAMP seeks to gather researchers who are interested in declarative approaches to parallel programming and aims to foster cross fertilization across paradigms. 
 
The call for papers attracted 7 submissions from Asia, Europe, and the United States. Each paper was reviewed by at least three members of the program committee, which accepted 6 papers after an electronic PC meeting in the first week of November 2008. Despite the low number of submissions, the program committee applied the usual high standard expected from a workshop sponsored by ACM SIGPLAN. In addition to the refereed papers, the workshop includes two invited talks.