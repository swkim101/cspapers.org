We emphasize the importance of formal executable specifications in the development of real-time systems, as a means to assess the adequacy of the requirements before a costly development process takes place. TRIO is a first order temporal logic language for executable specification of real-time systems that deals with time in a quantitative way by providing a metric to indicate distance in time between events and length of time intervals. We surnmarise the language, its straightforward model-theoretic semantics, and a tableaux-based algorithm to decide satisfiability. Then we present an efficient algorithm to perform history-checking, i.e., to check tha a history of the system satisfies the specification. This algorithm can be used as a basis for an effective specification testing tool. The algorithm is described, a qualitative estimation of its complexity is provided, and the main functionalities of the tool are presented, together with sample test cases. Finally, we draw the conclusions and indicate directions of future research.