We study the design and analysis of randomized on-line algorithms. We show that this problem is closely related to the synthesis of random walks on graphs with positive real costs on their edges. We develop a theory for the synthesis of such walks, and employ it to design competitive on-line algorithms. IBM T.J. Watson Research Center, Yorktown Heights, NY 10598. ATT cij = cji > 0 is the cost of the edge connecting vertices i and j, cii = 0. Consider a random walk on the graph G, executed according to a transition probability matrix P = (pij); pij is the probability that the walk moves from vertex i to vertex j, and the walk pays a cost cij in that step. Let eij (not in general equal to eji) be the expected cost of a random walk starting at vertex i and ending at vertex j (eii is the expected cost of a round trip from i). We say that the random walk has stretch c if there exists a constant a such that, for any sequence i0, i1, . . . , il of vertices ∑l j=1 eij−1ij ≤ c · ∑l j=1 cij−1ij + a. We prove the following tight result: Any random walk on a weighted graph with n vertices has stretch at least n − 1, and every weighted graph with n vertices has a random walk with stretch n− 1. The upper bound proof is constructive, and shows how to compute the transition probability matrix P from the cost matrix C = (cij). The proof uses new connections between random walks and effective resistances in networks of resistors, together with results from electric network theory. Consider a network of resistors with n vertices, and conductance σij between vertices i and j (vertices i and j are connected by a resistor with branch resistance 1/σij). Let Rij be the effective resistance between vertices i and j (i.e., 1/Rij is the current that would flow from i to j if one volt were applied between i and j; it is known that 1/Rij ≥ σij). Let the resistive random walk be defined by the probabilities pij = σij/ ∑ k σik. In Section 3 we show that this random walk has stretch n − 1 in the graph with costs cij = Rij. Thus, a random walk with optimal stretch is obtained by computing the resistive inverse (σij) of the cost matrix (cij): a network of branch conductances (σij ≥ 0), so that, for any i, j, cij is the effective (not branch)