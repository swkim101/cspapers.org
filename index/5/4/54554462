A cycle cover of a bridgeless graph G is a collection of simple cycles in G such that each edge e appears on at least one cycle. The common objective in cycle cover computation is to minimize the total lengths of all cycles. Motivated by applications to distributed computation, we introduce the notion of low-congestion cycle covers, in which all cycles in the cycle collection are both short and nearly edge-disjoint. Formally, a (d, c)-cycle cover of a graph G is a collection of cycles in G in which each cycle is of length at most d and each edge participates in at least one cycle and at most c cycles.A-priori, it is not clear that cycle covers that enjoy both a small overlap and a short cycle length even exist, nor if it is possible to efficiently find them. Perhaps quite surprisingly, we prove the following: Every bridgeless graph of diameter D admits a (d, c)-cycle cover where d = O(D) and c = O(1). That is, the edges of G can be covered by cycles such that each cycle is of length at most O(D) and each edge participates in at most O(1) cycles. These parameters are existentially tight up to polylogarithmic terms.Furthermore, we show how to extend our result to achieve universally optimal cycle covers. Let Ce is the shortest cycle that covers e, and let OPT(G) = maxeϵG |Ce|. We show that every bridgeless graph admits a (d, c)-cycle cover where d = O(OPT(G)) and c = O(1).We demonstrate the usefulness of low congestion cycle covers in different settings of resilient computation. For instance, we consider a Byzantine fault model where in each round, the adversary chooses a single message and corrupt in an arbitrarily manner. We provide a compiler that turns any r-round distributed algorithm for a graph G with diameter D, into an equivalent fault tolerant algorithm with r·poly(D) rounds.