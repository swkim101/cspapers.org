Welcome to the Thirty-Fourth SIGPLAN-SIGACT Symposium on the Principles of Programming Languages. This volume contains the papers presented at the symposium, plus the abstracts for three invited talks.Some 240 authors created accounts on the POPL 2007 submission server in response to the call for papers; 200 of them actually uploaded submissions. Of those, two were withdrawn before the review process began. The program committee reviewed 198 submissions, used a market-based voting system to create a list of eligible papers, and then met in person for a day and a half on Boston (MA) to select the 36 papers in this conference record: 23 in the "regular" category and 13 in the new "short papers" category. I am especially grateful to Jay McCarthy and Shriram Krishnamurthi for modifying their Continue submission server to support the voting process.My goal in introducing the "short papers" category is to give more authors a chance to obtain feedback on their ideas at POPL and to loosen the rigid nature of the conference without sacrificing quality. In this spirit, the program committee selected short papers of an exemplary nature: (1) they satisfy the same quality standards as regular papers but (2) they are supposed to illustrate how the intuition behind a "cool tool" can be explained with a few pages and in half the time of a regular talk. I am hoping that you enjoy these short presentations and that some of my successors continue to experiment with the idea. As with all conferences, the papers in this volume are not refereed. While the members of the program committee and others provided large volumes of feedback to the authors in many shapes and forms, the conference publication process does not have any built-in editorial controls. The process of preparing and presenting a paper at POPL '07, however, should help the authors to turn their papers into archival and refereed journal publications.In addition to the research papers, POPL 2007 also features three invited speakers: Audrey Tang, Don Batory, and Chet Murthy. They represent communities who design programming languages, use advanced programming languages to engineer software, or do both. I am hoping that they inspire discussions on the gap between programming language research and practice and on how to bridge it.