The use of design patterns and modular decomposition for the development of component-based software products brings significant improvements in terms of several quality attributes (e.g., reusability, reliability, maintainability). In addition, the modular design of interacting software components allows the foundation of a flexible Domain Specific Language (DSL) that acts as a model description language rather than a coding language, bringing significant savings in terms of development effort. This is particularly true in the field of simulation, in which the use of a common language both to represent and to simulate a given simulation model practically eliminates the need and the effort to fill the gap between the model specification and the simulator implementation. This paper introduces the design features of jEQN, a language for the specification and implementation of simulation models based on extended queueing networks. Details concerning the application of design patterns, modular decomposition and generic type parameters are also presented.