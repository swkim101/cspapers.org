Multi-threaded programming is becoming more important, because physical limits prevent further speedup by increasing clock speed. Therefore, it is required to make use of multiple processors. Unfortunately, multi-threading is error-prone and hard to find defects arise with current popular programming languages, mainly data races and deadlocks. Therefore, tools that help finding these faults are important, but currently available tools are either difficult to use or do not scale well. This paper describes improvements to the Eraser algorithm for C++ applications resulting in a drastic reduction of false warnings. We present empirical results from our experiments with a server application comprising more than 500.000 lines of code.