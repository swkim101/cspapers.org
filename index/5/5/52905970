1. PROBLEM AND MOTIVATION Interconnection networks are the communication backbone for any computing system. It allows exchange of messages/packets among different nodes of the system, be it an on-chip or an off-chip system. Different nodes could be a CPU-core, accelerators or even a computer cluster connected with other different computer clusters, depending on what granularity we define ’node’. One of the most fundamental challenges in any interconnection network is that of routing deadlocks. A deadlock is a cyclic dependence between buffers that renders forward progress impossible. Deadlocks are necessary evil and almost every on-chip/HPC network today avoids it either via routing restrictions across physical channel (Dally’s theory) or with at least one escape virtual channel (Duato’s Theory). This makes the Channel Dependency Graph (CDG) acyclic thus making sure that a cyclic dependence between buffers is never created in the first place. However, the analysis of making CDG acyclic is tied closely to the underlying network topology, which makes it difficult to port off-the-shelve deadlock free routing algorithm to irregular topologies. Moreover, irregular topologies more likely to form dynamically during the runtime of the system even if we begin from a regular topology such as Mesh. This is due to the power gating and dynamic link failures. This can make the earlier deadlock-free routing to deadlock in the new topology which is dynamically formed. We study how often deadlock occur in a full system simulation on gem5 [5] with garnet2.0 [2] network model, with parsec benchmark [4] running on latest Linux kernel. Therefore, with cyclic-CDG it is not correct to ask, “if deadlock will occur?", instead the right question is “when deadlock will occur?".