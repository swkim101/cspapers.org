Memory compression has been demonstrated as a promising alternative to increase memory bandwidth [1], [2], [3], [4], however, memory compression techniques often exhibit a low effective compression ratio. The main reason for the low effective compression ratio is the large memory access granularity (MAG) exhibited by GPUs due to wide memory interface width and large burst length. For example, MAG of GDDR5/5X/6 is 32B resulting from 32-bit interface width and burst length of 8. MAG refers to the amount of data read from or written to a memory by a single read or write command. MAG reduces the compression ratio as data can only be fetched in a multiple of MAG but a compressed block is often not a multiple of a MAG. For example, for a compressed size of 36B, we always fetch 64B. Thus, a compression ratio that seems close to 4× (3.6, assuming a typical block size of 128B used in contemporary GPUs) is actually only 2×. This leads to a significant difference between the raw and the effective compression ratio actually gained by a system. The raw compression ratio is calculated without considering the MAG by simply dividing the uncompressed size by compressed size and the effective compression ratio is calculated by scaling up the compressed size to the nearest multiple of a MAG. Figure 1 shows the raw and effective compression ratios of Base Delta-Immediate (BDI) [5], Frequent-Pattern Compression (FPC) [6], Cache Packer (C-PACK) [1], and Entropy Encoding Based Memory Compression (E2MC) [7] techniques for benchmarks from CUDA SDK and Rodinia. We see that the geometric mean (GM) of the effective compression ratio of BDI, FPC, C-PACK and E2MC is 22%, 19%, 18% and 23% less than the raw compression ratio, respectively. The low effective compression ratio reduces performance benefits, otherwise possible from a higher raw compression ratio. Interestingly, our study of the distribution of compressed blocks shows a significant percentage of blocks are compressed to a size that is only a few bytes above MAG. However, as there is no way to fetch a few bytes, a whole burst is fetched from the memory, causing low effective compression ratio. Figure 1 quantitatively shows that four state-of-the-art memory compression techniques suffer due to MAG. There are three other techniques: SC2 [8], HyComp [9] and BPC [3] that can also be applied for memory compression. SC2 is JM BS DCT FWT TP BP NN SRAD1 SRAD2 GM 0.0 0.5 1.0 1.5 2.0 2.5 3.0