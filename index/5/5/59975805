Robot manipulators are very difficult systems to control, due to their large number of degrees-of-freedom and to the variety of applications (some of them very complex) for which they are used. Programming most 'intelligent' robot control tasks thus requires a profound domain knowledge and a considerable software engineering effort; furthermore, solutions cannot easily be reused. The author explores the use of connectionist network learning as a way to implement solutions that are resource-greedy, but demand much less domain knowledge and that can be adapted with relatively little effort to solve large classes of problems. As many problems in controlling robots are basically system inversion problems, different methods suitable to obtain training information are explored and their limitations are pointed out. A toy problem is used to illustrate the different problems with these methods. >