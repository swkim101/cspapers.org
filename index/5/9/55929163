Most real world software systems evolve over time to meet changing requirements or changing business rules. Sometimes, old and new requirements have to be simultaneously met, i.e. old and new rules are needed to exist concurrently. Accommodating more than one rule in the existing entities, leads to the change in the operational system, which involves risk. The evolution in the system impacts the business rules as well as the data model of the system. The evolution step incorporating the change in business rule requires changes to be carried out in the application architecture in terms of addition or modification of process as well as data components and alterations in the relationships among the components. The evolution problem of coexistence of business rules can be considered as incremental change to the existing architectural design of the system to nullify the risk of change to the software. We propose a framework, where temporal aspects of process as well as data components and concurrent validity of multiple business rules, with multiple versions of the components can be effectively implemented. The framework supports evolution without disturbing existing architecture and functionality. This framework is consistent in application to systems irrespective of the design methodology followed for the same.