The goal of this paper is to optimize system performance of a SOA-based critical infrastructure by modifying the architecture of the service component that is responsible for complex calculations on large-scale graph models, under soft real-time restrictions. On a request, this service component transforms a system model into a task tree, which then gets executed by the runtime library that is referred to as the Task Tree Executor (TTE). The strategy that was used to optimize the system performance was to introduce finer grained parallelism, thus better multicore CPU utilization. The result is a novel TTE architecture that executes TTE tasks as Intel Cilk Plus tasks rather than OS threads, which was the case for the previous TTE architecture. The experimental measurements of time needed for TTE reliability estimation, based on statistical usage tests, show that the novel TTE architecture provides the speedup of around 11x, on average, over the previous one. Although this paper deals with a particular SOA service component, it may serve as a case study demonstrating applicability of our strategy on a broader class of SOA-based systems.