Berkeley Open Infrastructure for Network Computing (BOINC) is a popular Grid Computing (GC) framework which allows the creation of high performance computing installations by means of Public Resource Computing (PRC). With BOINC’s help one can solve large scale and complex computational problems. A fundamental element of BOINC is its so-called workunits (WUs), each computer works on its own WUs independently from each other and sends back its result to BOINC’s project server. Handling of WUs is a challenging process: (1) the order of used input files is important, (2) even more contributory components has to know how these input files are structured and on which data format are they based for an accurate WU processing. Small modifications can have a high impact to a BOINC project. Indeed scientific applications, BOINC’s components, and third-party applications all have to be adjusted to have a correctly running project with desired the functionality. This can be a highly error-prone and time-consuming task. In this paper we present a Unified Modeling Language (UML) model to give a high abstraction for BOINC’s WU handling. Only a model description and a corresponding code-generator are necessary to construct a WU handling infrastructure with less development and implementation effort: (a) one model to fit most WU cases and (b) essential interfaces for WU access. Keywords—BOINC, Code Generation, Modelling, UML, Work