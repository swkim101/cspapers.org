This paper describes the design and implementation of piping functionality for ARM based multi-process mono-kernel embedded operating system, including overview of inter-process communication, key techniques of designing piping routines such as getting i-node for piping, creating pipe, reading and writing pipe, and terminating pipe, etc. At the final, the paper provides a demo example to show the effect. Based on the piping routines described in this paper, more powerful shell interpreter with redirecting and piping functionalities as well as other shell commands analogous to that of embedded Linux can be implemented.