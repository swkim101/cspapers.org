Software engineering has become a de rigueur part of all self-respecting conferences on computer subjects, and has complete masters degree curricula devoted to itself in some universities. Special templates for drawing “software engineering symbols” are being issued to employees of programming divisions of large companies, and uncounted audiences attend software engineering courses, schools, symposia and workshops. All this indicates that as a fad software engineering is enormously successful. This paper attempts to bring into focus some issues that in the nearest future are very likely to enter the field that we today consider as “software engineering.”