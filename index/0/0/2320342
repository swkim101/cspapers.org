I n t r o d u c t i o n In recent years researchers have produced a number of programs capable of s c i e n t i f i c l i k e behavior . Each of the systems, DENDRAL(Feigenbaum and Lederberg, 1971), meta-DENDRAL(Buchanan, Feigenbaum and Sr idharan, 1972), MYCIN (Davis, Buchanan and S h o r t l i f f e , 1975) and AM (Lenat, 1976) could a r r i v e at ru les that exp la ined observed data. In t h i s paper I discuss another system, BACON, which discovers simple emp i r i ca l laws l i k e those found by ear ly p h y s i c i s t s . Task Environment BACON's task environment is an a r t i f i c i a l two-dimensional universe in which labeled obj ec t s i n t e r a c t . The program has d i r e c t access to a set of p r i m i t i v e a t t r i b u t e s (such as the x -coord ina te , co lor and ve loc i t y ) spec i f i ed by the programmer. The values of these a t t r i b u t e s change across objects and across time according to a set of laws determined by the programmer. Such a law might be that the t h i r d d i f f e r e n t i a l of each o b j e c t ' s distance from the center of the universe is a constant (w i th a d i f f e r e n t constant fo r each o b j e c t ) . Program Structure BACON is implemnted in the product ion sytem language OPS (Forgy and McDermott, 1976). The product ion system framework's advantage in t h i s task is that i t al lows one to w r i t e a smal l set of general " r e g u l a r i t y de tec to rs " . These search in p a r a l l e l through the data the program has co l l ec ted ( i n the form of a t t r i b u t e o b j e c t t ime-value 4 tup les ) and which are s t i l l in working memory. If one of the described regul a r i t i e s i s present i n the data , i t " leaps out " at the system and appropr iate ac t ion is taken. I f the r e g u l a r i t y is a constancy, a genera l i z a t ion across the re levant dimension ( t ime , ob jec t s , or both) is made and tes ted . I f the value of an a t t r i b u t e cons is ten t l y increases or decreases over t ime, a new a t t r i b u t e def ined in terms of the o ld a t t r i b u t e ' s change over time i s constructed ( e . g . , acce le ra t ion i s cons t ruc t ed from v e l o c i t y ) and considered f u r t h e r . I f the value of one a t t r i b u t e goes up as the value of another goes down, a new a t t r i b u t e def ined as t h e i r product is considered. Even tua l l y , a higher l e v e l a t t r i b u t e employing a l l the a t t r i butes mentioned in the programmer's law is cons t ruc ted and discovered to have a constant va lue ; t h i s is BACON's vers ion of the law. Along the way, whenever some genera l i za t ion about the value of an a t t r i b u t e is conf i rmed, BACON adds product ions tha t enable p red i c t i on of the value and, i f the a t t r i b u t e i s n o n p r i m i t i v e , p red i c t i on of some of i t s component's values In terms of other component's va lues. The system can also q u a l i f y i t s hypotheses. I f counterexamples are found to a g e n e r a l i z a t i o n , r e s t r i c t ion Owl erlfre ions can be added in the form of exceptions if the genera l i za t ion was across ob jects and in the form of exceptions and upper and lower bounds if the genera l i za t i on was across t ime. In f a c t , once an hypothesis is formed, i t is never r e j e c t e d . I t is always s tored in the permanent product ion memory, though perhaps in g rea t l y q u a l i f i e d form. I n i t i a l l y , the data c o l l e c t i o n process i s u n i n t e l l i g e n t . A t t r i b u t e s are generated ran domly and t h e i r values examined across a number of objects and t imes. However, once r e g u l a r i t i e s have been detec ted, these r e g u l a r i t i e s serve to d i r e c t the search. Conclusions In summary, BACON discovers emp i r i ca l laws by using two complementary techniques. The f i r s t i s the de tec t ion o f r e g u l a r i t i e s in da ta , for which product ion system formalisms seem i d e a l l y s u i t e d . This technique leads to use fu l gene ra l i za t i ons , but i t also d i r ec t s the second technique, the cons t ruc t ion of new a t t r i b u t e s in terms of more p r i m i t i v e ones. Together the two lead the search for more data which could lead to f u r t he r genera l i za t i ons . As implemented, BACON has a number of l i m i t a t i o n s as a law d iscoverer . F i r s t , i t cannot formulate cond i t i ona l laws, in which the condi t i o n s are r e s t r i c t i o n s on the values of re la ted a t t r i b u t e s ; however, i t seems p laus ib le tha t the r e g u l a r i t y de tec t ion technique could be used here as w e l l . Second, the system has spec ia l knowledge that time and objects are usefu l dimensions to general ize over; a more general d i s covery program would be able to do wi thout such he lp . F i n a l l y , the current system cannot deal w i t h noise in i t s data ; however, a minor change in the OPS pa t te rn matching rou t ine fo r numbers would deal w i t h t h i s . In conc lus ion , al though the present system has some drawbacks, it seems eas i l y extendable and shows promise of more i n t e r e s t i n g th ings to come. References Buchanan, B.C., Feigenbaum, E.B, and Sr idharan. Heu r i s t i c theory fo rmat ion . In D.Michie ( e d . ) , Machine I n t e l l i g e n c e 7. New York: American E lsev ie r Pub l ish ing Co.,1972,pp.267-290. Davis , R., Buchanan, B. and S h o r t l i f f e , E. Product ion ru les as a representa t ion fo r a knowledge-based representa t ion program. Stanford AT Laboratory Memo AIM-266, 19 75. Feigenbaum, E.B. and Lederberg, J. On gene ra l i t y and problem s o l v i n g : A case study using the DENDRAL program. In B.Meltzer and D.Michie ( e d s . ) , Machine I n t e l l i g e n c e 6. New York: American E lsev ie r Publ ish ing Co., 1971, pp.165-190. Forgy, C. and McDermott, J. OPS Manual. P i t t s b u r g h , Pa . : Carnegie-Mellon U n i v e r s i t y , Department of Computer Science, 1976. Lenat, D.B. AM: An a r t i f i c i a l i n t e l l i g e n c e approach to discovery in mathematics as h e u r i s t i c search. Unpublished doc to ra l d i s s e r t a t i o n , Department of Computer Science, Stanford U n i v e r s i t y , 19 76.