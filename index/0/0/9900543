We study computational complexity theory and define a class of optimization problems called OptP (Optimization Polynomial Time), and we show that TRAVELLING SALESPERSON, KNAPSACK and 0-1 INTEGER LINEAR PROGRAMMING are complete for OptP. OptP is a natural generalization of NP (Nondeterministic Polynomial Time), but while NP only considers problems at the level of their yes/no question, the value of an OptP function is the optimal value of the problem. This approach enables us to show a deeper level of structure in these problems than is possible in NP. 
OptP is a subset of FPSAT, the class of functions computable in polynomial time with an oracle for NP. Our central result is that any FPSAT function decomposes into an OptP function followed by polynomial-time computation. The significance of this result is that it quantifies "how much" NP-completeness is in a problem, i.e., the number of NP queries it takes to compute the function. It also allows us to unify the classes NP, DP and DELTA-2 in a natural way. For example, we prove that an OptP-completeness result implies, as corollaries, NP-, DP- and DELTA-2- completeness results. 
We also prove separation results on subclasses of FPSAT by restricting the number of calls to the NP oracle. For example, TRAVELLING SALESPERSON is complete for O(n) queries, CLIQUE is complete for O(log n) queries and BIN PACKING can be solved in O(log log n) queries. We prove these classes distinct under the assumption that P does not equal NP. 
Finally, we consider generalizations of OptP to higher levels in the Polynomial-Time Hierarchy. We define the DOUBLE KNAPSACK problem and prove that it is complete for DELTA-3, the first example of a natural complete problem for this class, and the highest level in the Polynomial Hierarchy with a known natural complete problem.