We address the problem of query rewriting for TSL, a language for querying semistructured data. We develop and present an algorithm that, given a semistructured query <italic>q</italic> and a set of semistructured views <italic>V</italic>, finds <italic>rewriting</italic> queries, i.e., queries that access the views and produce the same result as <italic>q</italic>. Our algorithm is based on appropriately generalizing <italic>containment mappings</italic>, the <italic>chase</italic>, and <italic>query composition</italic> â€” techniques that were developed for structured, relational data. We also develop an algorithm for equivalence checking of TSL queries.
We show that the algorithm is sound and complete for TSL, i.e., it always finds every non-trivial TSL rewriting query of <italic>q</italic>, and we discuss its complexity. We extend the rewriting algorithm to use some forms of structural constraints (such as DTDs) and find more opportunities for query rewriting.