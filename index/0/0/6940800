In this paper we provide faster algorithms for approximately solving discounted Markov decision processes in multiple parameter regimes. Given a discounted Markov decision process (DMDP) with |S| states, |A| actions, discount factor γ ∈ (0, 1), and rewards in the range [−M, M], we show how to compute an ϵ‐optimal policy, with probability 1 − δ in time (Note: We use O˜$$ \tilde{O} $$ to hide polylogarithmic factors in the input parameters, that is, O˜(f(x))=O(f(x)⋅log(f(x))O(1))$$ \tilde{O}\left(f(x)\right)=O\left(f(x)\cdot \log {\left(f(x)\right)}^{O(1)}\right) $$ .) O˜|S|2|A|+|S‖A|(1−γ)3logMϵlog1δ.$$ \tilde{O}\left(\left({\left|S\right|}^2\mid A\mid +\frac{\mid S\Big\Vert A\mid }{{\left(1-\gamma \right)}^3}\right)\log \left(\frac{M}{\epsilon}\right)\log \left(\frac{1}{\delta}\right)\right). $$ This contribution reflects the first nearly linear time, nearly linearly convergent algorithm for solving DMDPs for intermediate values of γ. We also show how to obtain improved sublinear time algorithms provided we can sample from the transition function in O(1) time. Under this assumption we provide an algorithm which computes an ϵ‐optimal policy for ϵ∈0,M1−γ$$ \epsilon \in \left(0,\frac{M}{\sqrt{1-\gamma }}\right] $$ with probability 1 − δ in time O˜|S‖A|M2(1−γ)4ϵ2log1δ.$$ \tilde{O}\left(\frac{\mid S\Big\Vert A\mid {M}^2}{{\left(1-\gamma \right)}^4{\epsilon}^2}\log \left(\frac{1}{\delta}\right)\right). $$ Furthermore, we extend both these algorithms to solve finite horizon MDPs. Our algorithms improve upon the previous best for approximately computing optimal policies for fixed‐horizon MDPs in multiple parameter regimes. Interestingly, we obtain our results by a careful modification of approximate value iteration. We show how to combine classic approximate value iteration analysis with new techniques in variance reduction. Our fastest algorithms leverage further insights to ensure that our algorithms make monotonic progress towards the optimal value. This paper is one of few instances in using sampling to obtain a linearly convergent linear programming algorithm and we hope that the analysis may be useful more broadly.