This paper treats the file redundancy issue in distributed database systems asking what is the optimal number of file copies, given the ratio r of the frequencies of query and update requests. To draw a general conclusion applicable to a wide variety of practical distributed database systems, simplified network models are constructed , and optimal number of file copies, as well as their locations, to minimize the communication cost is ccmputed. By examining various network types, we plot the optimal number of file copies as a function of the ratio r. Our conclusion is that a single copy suffices under moderate condition, and it is disadvantageous to have more than a few copies unless the frequency of query requests is unduly higher (e.g., 50 times) than that of update requests. l.Introduction In many papers discussing wurrencv con-ti mechanisms and performance of the distributed database systems (abbreviated to DDBS), the full r-m of the data files is often assumed (i.e. , each site in the system has a complete copy of every database (file)). Although it is theoretically easy to treat the systems under the full redundancy assumption, this assumption should be carefully justified from the view point of the system performance. Our conclusion of this paper is quite contrary; a single copy of the file suffices in most of the practical cases and the full redundancy cannot be justified unless the frequency of query requests is extremely higher than that of update requests. The optimal file redundancy and allocation problem in ED53 has been discussed in a number of Papers (e.g., see a survey by Dowdy, et al. [II). However, most of these papers emphasize the precise formulation of given particular DDBS models. Although these are useful to determine the optimal file redundancy and allocation of a given particular system, the computed results may not be general enough to suggest the characteristics common to many practical DDEE models. To discuss the system performance in a general manner, the poerating costs of DDE?3 are classified into storm costs of files and QXIIUZ. . nlcatlon for sueries and U&&S. The high redundancy tends to decrease the communication costs for queries, but increase the storage costs and the communication costs for updates. The ratio r of the frequencies of update requests to query requests is a key parameter to determine the optimal redundancy of a given system. We further place the following symplifying â€¦