Alice and Bob are given two correlated n-bit strings x1 and, respectively, x2, which they want to losslessly compress and send to Zack. They can either collaborate by sharing their strings, or work separately. We show that there is no disadvantage in the second scenario: Alice and Bob, without knowing the other party's string, can compress their strings to almost minimal description length in the sense of Kolmogorov complexity. Furthermore, compression takes polynomial time and can be made at any combination of lengths that satisfy some necessary conditions (modulo additive polylogarithmic terms). More precisely, there exist probabilistic algorithms E1, E2, and D, with E1 and E2 running in polynomial time, having the following behavior: if n1, n2 are two integers satisfying n1 + n2 ≥ C(x1,x2), n1 ≥ C(x1 | x2), n2 ≥ C(x2 | x1), then for i ∈ {1,2}, Ei on input xi and ni outputs a string of length ni + O(log3 n) such that D on input E1(x1), E2(x2) reconstructs (x1,x2) with high probability (where C(x) denotes the plain Kolmogorov complexity of x, and C(x | y) is the complexity of x conditioned by y). Our main result is more general, as it deals with the compression of any constant number of correlated strings. It is an analog in the framework of algorithmic information theory of the classic Slepian-Wolf Theorem, a fundamental result in network information theory, in which x1 and x2 are realizations of two discrete random variables representing n independent draws from a joint distribution. In the classical result, the decompressor needs to know the joint distribution of the sources. In our result no type of independence is assumed and the decompressor does not have any prior information about the sources that are compressed.