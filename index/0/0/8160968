The classical secretary problem studies the problem of hiring the best secretary from among the secretaries who arrive in random order by making immediate and irrevocable decisions. After the interesting connection to online mechanism design was found [19, 20], the random order input assumption has been studied for a variety of problems. Babaioff et al. [4] formalized a general version of the secretary problem, namely the matroid secretary problem. In the problem, a secretary corresponds to an element in the universe U. The goal is to select the maximum weight independent set. They conjectured that the matroid secretary problem, for any matroid, allows a constant competitive algorithm. The conjecture remains open. Some constant approximation algorithms are currently known for some special cases of matroids. Another interesting type of secretary problem was studied where elements have non-uniform sizes, as is the case in the knapsack secretary problem [3, 6].
 In this paper, we consider two interesting secretary problems. One is when the matroid is a laminar matroid, which generalizes uniform/partition/truncated partition matroids. For the laminar matroid secretary problem, using a novel replacement rule which we call "kick next," we give the first constant-competitive algorithm. The other is the interval scheduling secretary problem, which generalizes the knapsack secretary problem. In this problem, each job Ji arrives with interval Ii, processing time pi and weight wi. If Ji is accepted, then it must be scheduled during Ii, not necessarily continuously. The goal is to accept the jobs of the maximum total weight which are schedulable. We give a simple O(log D)-competitive algorithm and a nearly matching lower bound on the competitive ratio of any randomized algorithm, where D is the maximum interval length of any job.