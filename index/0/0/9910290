The user of a large reuse library faces the formidable discovey problem of searching for all and only those components useful in solving the current progmmming task. This paper describes a retrieval technique that generalizes the simple idea of executing each component on test inputs, reporting those that compute correct outputs. One generalization improves recall by considering small programs constructible from library components, rather than just single components. Furthermore, functional modeling of components allows the technique to handle complex behaviors, such as side effects. I motivate, describe, and analyze the technique and a working prototype, GBR, which has been tested on two Iibran‚Äùes: one containing general programming components, the other containing (some) Unix shell commands.