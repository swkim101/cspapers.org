Computer graphics is a subject which is typically enjoyed by students and which has the potential to attract pupils to consider studying computer science. Although the programming methods used by computer graphics have significantly changed in recent years due to the integration of programmable shaders into the graphics rendering pipeline, a lot of computer graphics courses still start with the fixed-function pipeline. In view of future applicability, however, it is desirable to teach students modern concepts of computer graphics from the beginning. One problem with teaching shader-based computer graphics is that a lot of technical tasks lie in the hand of the programmer: loading and compiling shader programs, managing buffer objects, defining transformations by means of matrices, etc. This poster presents a scene graph library which is fully based on the programmable rendering pipeline. It uses the OpenGL 3.2 core profile, which does not allow deprecated fixed-function functionality. The teaching approach combines the high-level abstraction of a scene graph with the low-level programming of shader cores, which are attributed to scene graph nodes. The presented scene graph library has a simple and clear structure and is extensible in order to let students implement advanced concepts taught in the lecture, like shadows or particle systems. Finally, the poster presents code samples, results of student projects, and student evaluation results.