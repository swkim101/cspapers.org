In this paper we consider the dynamic stabbing-max problem, that is, the problem of dynamically maintaining a set <i>S</i> of <i>n</i> axis-parallel hyper-rectangles in R<sup><i>d</i></sup>, where each rectangle <i>s</i> ∈ <i>S</i> has a weight <i>w</i>(<i>s</i>) ∈ R, so that the rectangle with the maximum weight containing a query point can be determined efficiently. We develop a linear-size structure for the one-dimensional version of the problem, the <i>interval stabbing-max</i> problem, that answers queries in worst-case <i>O</i>(log <i>n</i>) time and supports updates in amortized <i>O</i>(log <i>n</i>) time. Our structure works in the pointer-machine model of computation and utilizes many ingredients from recently developed external memory structures. Using standard techniques, our one-dimensional structure can be extended to higher dimensions, while paying a logarithmic factor in space, update time, and query time per dimension. Furthermore, our structure can easily be adapted to external memory, where we obtain a linear-size structure that answers queries and supports updates in <i>O</i>(log<inf><i>B</i></inf> <i>n</i>) I/Os, where <i>B</i> is the disk block size.