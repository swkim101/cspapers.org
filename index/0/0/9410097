We consider the problem of scheduling jobs that are given as <i>groups</i> of non-intersecting segments on the real line. Each job <i>J<inf>j</inf></i> is associated with an interval, <i>I<inf>j</inf>,</i> which consists of up to <i>t</i> segments, for some <i>t</i> ≥ 1, a positive weight, <i>w<inf>j</inf>,</i> and two jobs are in conflict if any of their segments intersect. Such jobs show up in a wide range of applications, including the transmission of continuous-media data, allocation of linear resources (e.g. bandwidth in linear processor arrays), and in computational biology/geometry. The objective is to schedule a subset of non-conflicting jobs of maximum total weight.In a single machine environment, our problem can be formulated as the problem of finding a <i>maximum weight independent set</i> in a <i>t-interval</i> graph (the special case of <i>t</i> = 1 is an ordinary interval graph). We show that, for <i>t</i> ≥ 2, this problem is APX-hard, even for highly restricted instances. Our main result is a 2<i>t</i>-approximation algorithm for general instances, based on a novel <i>fractional</i> version of the Local Ratio technique. Previously, the problem was considered only for proper union graphs, a restricted subclass of <i>t</i>-interval graphs, and the approximation factor achieved was (2<sup><i>t</i></sup> - 1 + 1/2<sup><i>t</i></sup>). A bi-criteria polynomial time approximation scheme (PTAS) is developed for the subclass of <i>t-union</i> graphs.In the online case, we consider uniform weight jobs that consist of at most two segments. We show that when the resulting 2-interval graph is <i>proper,</i> a simple greedy algorithm is 3-competitive, while any randomized algorithm has competitive ratio at least 2.5. For general instances, we give a randomized <i>O</i>(log<sup>2</sup> <i>R</i>)-competitive (or <i>O</i>((log <i>R</i>)<sup>2+ε</sup>)-competitive) algorithm, where <i>R</i> is the known (unknown) ratio between the longest and the shortest segment in the input sequence.