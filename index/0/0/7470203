The above c o n t e n t i o n . I f t r u e , g r e a t l y s h i f t s the emphasls w i t h i n the Process Transformat ion Phase from tha t of a general problem so lver s o l v i n g problems In a domain Independent way to modi fy ing a s o l u t i o n so t ha t it does not ma in ta in any i r r e l e v a n t p o r t i o n s of the complete model and which abs t rac t s the re levan t po r t i ons in to a more e f f i d e n t r e p r e s e n t a t i o n f o r the process ing r e q u i r e d . Together w i t h Problem A c q u i s i t i o n , the a b i l i t y t o f i n d rep resen ta t i ona l a b s t r a c t i o n s and t rans fo rm complete model s o l u t i o n s in to ones which u t i l i z e these rep resen ta t i ons represent the mat n t echno log i ca l d e f i c i e n c i e s w i t h o b t a i n i n g an Automatic Programming system. Model V e r i f i c a t i o n Al though the Automatic Coding phase w i l l produce on ly c o r r e c t code. Program Tes t ing cannot d isappear . This Is because the Problem A c q u i s i t i on Phase and the Process Transformat ion Phase w i l l undoubtedly employ a number of h e u r i s t i e s and may very well I n c o r r e c t l y I n t e r p r e t e i t h e r the problem statement or the a l lowed t rans fo rmat ions t ha t can occur In the u s e r ' s model . Because of t h i s , the user must v e r i f y t ha t the system c rea ted is the one t ha t he d e s i r e d . The technology f o r t h i s is a t hand. I t cons i s t s of t oday ' s methods wherein a t e s t case is g iven to the system and its performance Is used to v a l i d a t e the model t h a t i t c o n s t r u c t e d . A d d i t i o n a l l y , the system can a i d the process by genera t ing t e s t cases of its own which probe areas of which It Is unce r t a i n and which cou ld have led to e i t h e r misunderstanding or incompleteness in the o r i g i n a l model . One might a l so expect t ha t program debugging would d isappear , but f o r very s i m i l a r reasons I t too w i l l remain under Automatic Programming. if there is a d i s p a r i t y between the u s e r ' s model and the system's model , then the reason f o r t h i s d i s p a r i t y must be o b t a i n e d . Automatic Coding Automatic Coding Is concerned w i t h f i n d i n g an e f f l e t ent computer implementati on of the process d e s c r i p t i o n ob ta ined from the proceeding phase. This d e s c r i p t i o n does not yet Inc lude a choice of data r e p r e s e n t a t i o n s , but does spec i f y the major process ing elements and sequences. I t Is in tended tha t t h i s phase w i l l not need any domain s p e c i f i c knowledge except f o r input frequency and d i s t r i b u t i o n i n fo rma t ion . The major l o g i c a l r e p r e s e n t a t i o n and processing dec is ions have a l ready been made by the Process Transformat ion phase. Of a l I the phases in the Automatic Programming System, the Automatic Coding one is the one essent ia l component of any Automatic Programming System. Without it the system cannot produce programs, and hence, though It may be use fu l I t Is not an Automatic Programming System. Most people are not t r u l y c r e a t i v e when they reorgan ize sec t ions o f t h e i r program to increase e f f i c i e n c y . Rather than invent lng t o t a l l y new r e p r e s e n t a t i o n s , they appear to se lec t one out of an I l l d e f i n e d set of such poss ib le rep resen ta t i ons and to adapt and modify I t t o f u n c t i o n I n the c u r r e n t s i t u a t i o n . This is probably the main cha l lenge to the Automatic Coding phase, the a b i l i t y not on ly to cyc le through a set of a l t e r n a t i v e rep resen ta t i ons but to adapt and modify them to the e x i s t i n g s i t u a t i o n . Such an a b i l i t y would v a s t l y increase the app l [cab leness of a small set of a l t e r n a t i v e r e p r e s e n t a t i o n s . From such Automatic Coding s t u d i e s , one would expect to see both a set of h e u r i s t i c s and a c a l c u l u s , e v e n t u a l l y , for data r ep resen ta t i on cho ices . Summary and Conclusions The d e f i n i t i o n of automatic programming s t a r t e d w i t h a g o a l , namely, reduc ing the e f f o r t requ i red to get a task runn ing on a computer. From t h i s a framework was adopted in which the ex te rna l c h a r a c t e r i s t i c s of Automatic Programming Systems cou ld be descr ibed in terms o f : 1. The terms in which the problem is s t a t e d ; 2. The method and t ime at which the system acqu i res the knowledge of the problem domain; 3. The c h a r a c t e r i s t i c of the r e s u l t i n g