1___Introductio n This paper describes developments o f the RAMP system, a m ultiprogramming syste m designed for use in small machines of th e PDP°8 class for operation in real-tim e processing environments. Several of thes e systems ace currently operating in proces s control, message switching and termina l control applications. The development o f this system was largely the result of th e need for relatively sophisticated dat a communications systems for use by remotel y located process control and interactiv e graphics terminals. Early versions o f this system, as described in [1, 2, an d 3], sustained aggregate transmission rate s of about 500-1000 characters-per-secon d for as many as twenty-four terminals. Further uevelopment has resulted i n an enhanced throughput and an attractiv e interface to which special-purpose job-program subsystems can be attached [4]. The newer system incorporate a genera l storage allocation technique whic h provides both for the dynamic loading o f page-relocatable job-program subsystem s and for the temporary storage of contro l information and I/O buffers. The concep t of task, program, and real/task-tim e processing is given precise definition , and the interface to device servic e routines is simple and powerful. Finally , I/O message transmissions are accomplishe d in a record-oriented rather than a byte-oriented fashion, so that high-speed I/ O devices can be efficiently connected. This construction has resulted in a two-to tour-told improvement in the aggregat e transmission rate and a much mor e efficient utilization of core storage. Although the primary implementatio n goal in the new RAMP system was increase d through p ut and flexibility as compared t o the old system, the development of the ne w system has been different enough from th e old that it is presented here in toto ; an d familiarity with the old system is no t assumed requisite in the exposition. Order No. 716. Furthermore, although both the nee and th e old systems were coded for the PDP-8 family of machines, the im p l e mentatio n techni q ues described here are obviousl y not restricted for use on this machine , but are appropriate for use on any "small " machine requiring I/O interrunts on a character-by-character basis. In fact, i t will develop that many of the constructio n techniques are really special adaptation s of those used …