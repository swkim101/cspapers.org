Scenarios and state machines are two of the fundamental modeling perspectives for developing behavioral abstractions of complex, reactive software. Scenarios represent a partial view on the interactions between multiple system components; state machines typically model the complete behavior of individual components. Both perspectives have advantages .. scenarios are easily understood by stakeholders at all levels, lead naturally to tests and focus on inter-component communication; state machines, on the other hand, provide precise descriptions of component behavior and can be used for generating implementations (either manually or automatically). In particular, UML supports both notations and in UML2.0, scenarios can be modeled in a much more expressive way than with previous versions of UML. This workshop aims to investigate the connection between scenarios and state machines, assess how this connection can be exploited to improve software development, support the evaluation of techniques that exploit the connection and support the showcasing of developer tools based on both views.