We present a simple, yet effective improvement to the dy- namic programming algorithm for solving partially observ- able Markov decision processes. The technique targets the vector pruning operation during the maximization step, a key source of complexity in POMDP algorithms. We identify two types of structures in the belief space and exploit them to re- duce significantly the number of constraints in the linear pro- grams used for pruning. The benefits of the new technique are evaluated both analytically and experimentally, showing that it can lead to significant performance improvement. The re- sults open up new research opportunities to enhance the per- formance and scalability of several POMDP algorithms. cross-sum stage. The incremental pruning (IP) algorithm (Zhang & Liu 1996; Cassandra, Littman, & Zhang 1997) was designed to address this problem by interleaving the cross-sum and the pruning which leads to significantly re- duced number of linear programs to be solved. Recently, we developed a region-based variant of IP that can exploit the local structure of the belief space to reduce the size of the linear programs, leading to exponential improvement of the cross-sum stage (Feng & Zilberstein 2004). However, these algorithms do not address the performance of the maximiza- tion stage that prunes the combination of the results from the cross-sum stage, which can be exponentially large as well. Therefore the improvement to the overall DP update process by these methods is limited. In this paper, we identify certain properties of the pro- jection and maximization stages and show how they can be exploited to greatly accelerate the DP process. We build on the region-based cross-sum pruning approach we previously developed, and specifically address here the maximization step. We show that in the maximization stage, only vectors whose witness regions are close to each other in the belief space are needed for testing dominance. We show how this closeness information can be obtained during the cross-sum stage at little cost. Although this method leaves some dom- inated vectors undetected, we show that typical reachability and observability structure in a problem allows such domi- nated vectors to be pruned efficiently in a subsequent pro- jection pruning stage. Combining these two ideas, our algo- rithm can deliver a significant performance improvement to the whole dynamic programming algorithm.