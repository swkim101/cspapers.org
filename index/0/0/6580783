Purely Functional Representations of Catenable Sorted Lists. Haim Kaplanl Robert E. Tarjan2 The power of purely functional programming in the const ruction of data structures has received much attention, not only because functional languages have many desirable properties, but because structures built purely functionally are automatically fully persistersti any and all versions of a structure can coexist indefinitely. Recent results illustrate the surprising power of pure functionality. One such result was the development of a representation of double-ended queues with catenation that supports all operations, including catenation, in worst-case constant time [19]. This paper is a continuation of our study of pure functionality, especially as it relates to persistence. For our purposes, a purely functional data structure is one built only with the LISP functions car, cons, cdr. We explore purely functional representations of sorted lists, implemented as finger search trees. We describe three implementations. The most efficient of these achieves logarithmic access, insertion, and deletion time, and double-logarithmic catenation time. It uses one level of structural bootstrapping to obtain its efficiency. The bounds for access, insert, and delete are the same as the best known bounds for an ephemeral implementation of these operations using finger search trees. The representations we present are the first that address the issues of persistence and pure functionality, and the first for which fast implementations of catenation and split are presented. They are simple to implement and could be efficient in prac1 DePmtm~~t of computer sCienCe, prinCetOn university, ‘rinceton, NJ 08544 USA. Research supported by by the NSF, Grant No. CCR-8920505, the Office of Naval Research, Contract No. NOOO14-91J-1463 and a United States-Israel Educational Foundation (USIEF) Fulbright Grant. hklQcs.princeton .edu. 2Department of Computer %Si!WICe,%inCdOn University! ‘rinceton, NJ 08544 USA and NEC Institute, Princeton, NJ. Research at Princeton University partially supported by the NSF, Grant No. CCFL8920505 and the Office of Naval Research, Contract No. NOO01491-J-1463. Some of the writing of this paper was done during a visit to M. I. T., partially supported by ARPA Contract No. NOOOIZk 95-1-1246. ret @cs.princeton.edu. tice, especially for applications that require worst-case time bounds or persistence.