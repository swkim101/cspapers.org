By computational arithmetic we shall mean the study of those discrete numeric systems suitable for implementation on a digital computer. The structure and limitations of discrete arithmetic, the notions of mixed base and mixed type arithmetic, the incurred “roundoff error” of psuedo-real arithmetic, and the efficiency of realization of arithmetic operations all form integral parts of this discipline. The foundations for this material are drawn from the logician's analysis of computability, the electrical engineer's analysis of boolean networks, the number theorist's analysis of elementary number theory, and the numerical analyst's study of numerical approximation. The cohesive thread uniting these topics is the relevance to computerized discrete computation, and what emerges is a firm discipline for inclusion in the complete Computer Science Curriculum. The central body of this material certainly should be a prerequisite for anyone who must design hardware and/or software to implement the arithmetic called for in a high level language.