WHY TEACH HARDWARE ? Digital hardware programs are slowly gainin g popularity in computer science departments. They deserve far wider acceptance, especially in view o f the increasing availability of inexpensive components . Computer scientists need to recapture thei r destiny. It is curious that we are forced to stud y and live with computers that we do not design. No t only do we not control the designs, they ar e created by engineers who are more or less ignoran t of the principles of computer science. Contrast this with the early days of computin g where most designs were conceived in academic surroundings (ENIAC, ILLIAC, etc .). After one or tw o computers were built, most universities gave u p because of the sheer magnitude of the engineerin g involved. Thus, it was natural for industry t o pick up development since by its very nature it i s adapted to production, marketing and managing complex engineering jobs. It is no longer an arduous task to build a computer. Modern MSI (medium scale integration) and LSI (large scale integration) integrated circuits have simplified the process perhaps by a factor of one hundred. This makes it possibl e for universities to once again build hardware. Now that it is possible, we should do it, and w e should train our students to lead the way towar d a more intelligible, more systematic approach t o machine design. Intellectual Conten t Boolean algebra has long been recognized a s an important subject and has traditionally forme d the core of hardware curricula. Modern integrate d circuit technology has largely eliminated the nee d for this. The critical factor now is the stylistic process of assembling building blocks such a s registers, ALUs (arithmetic and logic unit) an d memory into complete systems. As the system s become more complex, the design techniques mus t become more systematic and more powerful. Thus , the emphasis must now be on good design style. This focus on style is at home in computer scienc e departments where, recently, much work has gon e into development of powerful methods for softwar e problem solving. Indeed, we feel that compute r science has a mission to see that hardware syste m design grows from a " black art " into a discipline d science. A good hardware design style should : (a) (b) be easy â€¦