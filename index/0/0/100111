We study the interplay between worst-case and amortised time bounds for the classic Disjoint Set Union problem (Union-Find). We ask whether it is possible to achieve optimal worst-case and amortised bounds simultaneously. Furthermore we would like to allow a tradeoff between the worst-case time for a query and for an update. We answer this question by first providing lower bounds for the possible worst-case time tradeoffs, as well as lower bounds which show where in this tradeoff range optimal amortised time is achievable. We then give an algorithm which tightly matches both lower bounds simultaneously. The lower bounds are provided in the cell-probe model as well as in the algebraic real-number RAM, and the upper bounds hold for a RAM with logarithmic word size and a modest instruction set. Our lower bounds show that for worst-case query and update time t, and t, respectively, one must have t, = a(log n/ log t,), and only for t, 2 cx(m, n) can this tradeoff be achieved simultaneously with the optimal amortised time of o(c~(m,n)). Our ‘DIK”, Camp. sci. Dept., ““ivorsity of Copenhagen, Denmark. E-mail: slephe”mdik”.dk. Part of thin work W&S done while “isiting BRIGS and Lund University. Q,pyngh, ACM ,999 1.58113.067.8199105...~5.00 algorithm can match this tradeoff for any desired choice of t,. For faster worst-case query time, the amortised cost becomes larger but is also matched by our lower bounds,