The partial sums problem in succinct data structures asks to preprocess an array <i>A</i>[1..<i>n</i>] of bits into a data structure using as close to <i>n</i> bits as possible, and answer queries of the form Rank(<i>k</i>) = Σ<sup><i>k</i></sup><sub><i>i</i>=1</sub> <i>A</i>[<i>i</i>]. The problem has been intensely studied, and features as a subroutine in a number of succinct data structures.
 We show that, if we answer Rank(<i>k</i>) queries by probing <i>t</i> cells of <i>w</i> bits, then the space of the data structure must be at least <i>n</i> + <i>n/w<sup>O(t)</sup></i> bits. This redundancy/probe trade-off is essentially optimal: Patrascu [FOCS'08] showed how to achieve <i>n</i> + <i>n</i>/(<i>w/t</i>)<sup>Ω(<i>t</i>)</sup> bits. We also extend our lower bound to the closely related Select queries, and to the case of sparse arrays.