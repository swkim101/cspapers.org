A method is presented for using composite objects which separates their role and meaning as models of relations between problem-domain concepts from their role and meaning as models of hierarchical sof’twarc structures. The meaning of composite objects is analysed in terms of connections bctwccn real-world concepts in object-oriented analysis and bctwccn software objects in object-oriented design. By capturing the designer’s rationale for model transformation, the resulting models arc casicr to understand and maintain. An embedded systems example illustrates the approach.