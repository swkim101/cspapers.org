We present results from a research project to investigate the feasibility of software tools for analyzing designs of software systems. Such analysis would help the software developer to assess the acceptability of designs before the development of the software moves from the design phase into the implementation phase. If this could be done, futile implementation efforts based on faulty designs could be avoided.
We have constructed a language for expressing designs of sequential and concurrent software systems, and software tools to analyze these designs. Our analysis tools derive behavior information, in terms of reachable states or possible sequences of significant events, from system descriptions in a variety of ways. By means of controlled human-factors experiments, we have determined that our analysis tools and techniques are indeed useful, to varying extents, in helping people to understand designs and find flaws in them.