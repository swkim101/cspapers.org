We reconsider the old problem of sorting under partial information, and give polynomial time algorithms for the following tasks.
(1) Given a partial order <italic>P</italic>, find (adaptively) a sequence of comparisons (questions of the form, “is <italic>x</italic> < <italic>y</italic>?”) which <italic>sorts</italic> (i.e. finds an unknown linear extension of) <italic>P</italic> using <italic>O</italic>(log(<italic>e</italic>(<italic>P</italic>))) comparisons in worst case (where <italic>e</italic>(<italic>P</italic>) is the number of linear extensions of <italic>P</italic>).
(2) Compute (on line) answers to any comparison algorithm for sorting a partial order <italic>P</italic> which force the algorithm to use  &OHgr;(log(<italic>e</italic>(<italic>P</italic>))) comparisons.
(3) Given a partial order <italic>P</italic> of size <italic>n</italic>, estimate <italic>e</italic>(<italic>P</italic>) to within a factor exponential in <italic>n</italic>. (We give upper and lower bounds which differ by the factor <italic>n<supscrpt>n</supscrpt></italic>/<italic>n</italic>!.)
Our approach, based on entropy of the comparability graph of <italic>P</italic> and convex minimization via the ellipsoid method, is completely different from earlier attempts to deal with these questions.