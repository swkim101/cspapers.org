Student projects play a central role in the CS curriculum and are can be used everywhere, from low-level courses to upper-level capstones. Projects help students tie together ideas from their courses and put them in a "tangible" form for which they can feel a sense of pride. Projects also provide a clear way for students to show off their work to others. When we talk about student projects, we often focus on the functionality of the project: "Build something that does this." The modern Web suggests that software (or at least Web-based software) is often defined by more than a core computational task; in addition to the core functionality, modern Web software situates that core functionality in a broader "ecosystem" that often includes (a) a community of users that share ideas and comment on each others' work; (b) ways to link the software to and from social media sites, such as Facebook and Twitter; and (c) analytic tools to understand how people use the software; and more. I report on an experiment in which I asked students to expand their Web software project (an online drawing application) into a broader ecosystem. The extension from core functionality to broader ecosystem helped students think about different issues in computing, encouraged students to find aspects that most interested them (e.g., some liked analytics, some liked building the functionality, some liked thinking about how to create communities, and some liked designing and testing the interface), and made students think more carefully about their responsibilities as software builders.