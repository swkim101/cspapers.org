Aspect oriented programming (AOP), when used well, has many advantages. Aspects are however, programming-time constructs, i.e., they relate to source code. Previously, we developed a tool called VEST that extended aspects to design time for embedded systems. Two types of design time aspects were identified which we labeled aspect checks and prescriptive aspects. In the original VEST tool several keys aspect checks and a simple form of prescriptive aspects were implemented. Prescriptive aspects are extremely powerful and result in many design time advantages and uses. This paper enhances and exploits the concept of prescriptive aspects well beyond its original purpose and results. A new prescriptive language is developed and implemented in the VEST tool. We also use prescriptive aspects in a case study for an avionics application and evaluate its benefits. The result is a tool with significant and new features for building distributed real-time embedded systems. It is shown in the case study that design time is shortened by 69%.