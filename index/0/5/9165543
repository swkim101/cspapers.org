A recent paper by David Lechner stated that for many long-lived systems, it is more efficient to reengineer portions of systems than to continually repair them. That paper made an implicit assumption about the ability of software engineers to determine precisely which software should be reengineered. We report the results of a study that addresses the readiness of graduates, who will soon be beginning software engineers, to make such an assessment, based on comprehension of reusable vs. reengineered software. We address this comprehension in the context of software engineering education.