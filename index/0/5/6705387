Evolving heterogeneous behavior for cooperative agents is a complex challenge. The co-evolution of separate populations requires a system for evaluation at trial time. If too few combinations of partners are tested, the GA is unable to recognize fit agents, but if too many agents are tested the required computation time becomes unreasonable. To resolve this issue, we created a system based on punctuated anytime learning that periodically tests partner combinations to reduce computation time. In continued research, we discovered that by testing fewer combinations the GA maintains accuracy while further reducing computation time. In this paper we propose a method that concurrently tests varying numbers of partner combinations and the spacing between these combinations at trial time to determine which is optimal for any stage of the co-evolution. We chose a box pushing task to compare these methods.