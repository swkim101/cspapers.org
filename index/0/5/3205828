We present a fast deterministic algorithm for integer sorting in linear space. Our algorithm sorts <i>n</i> integers in the range {0, 1, 2, &1dots;, <i>m</i>—1} in linear space in <i>O</i>(<i>n</i> log log <i>n</i>) time. This improves our previous result [8] which sorts in <i>O</i>(<i>n</i> log log <i>n</i> log log log <i>n</i>) time and linear space. This also improves previous best deterministic sorting algorithm [3, 11] which sorts in <i>O</i>(<i>n</i>log log <i>n</i>) time but uses <i>O</i>(<i>m</i><sup>ε</sup>) space. Our results can also be compared with Thorup's previous result [16] which sorts in <i>O</i>(<i>n</i>log log <i>n</i>) time and linear space but uses randomization.