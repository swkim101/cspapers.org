In this paper, we investigate the issues involved in using multiprocessors for high performance transaction processing applications. We use a simulation model to compare the performance of three different architectures, namely, Shared Everything, Shared Nothing and Shared Disks. In Shared Everything, any processor can access any disk and all memory is shared. In Shared Nothing, neither disks nor memory is shared. In Shared Disks, any processor can access any disk, but each has its own private main memory. We first study four different variations of the Shared Disks architecture which attempt to minimize lock request messages. We will then compare the best Shared Disks variation with Shared Nothing and Shared Everything. In addition, we study how intraquery parallelism affects the performance of the architectures.