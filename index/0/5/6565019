Software under development is considered by developers at different levels of abstraction, often with formal model specifications that describe actual program code. However, there are semantic barriers between high-level specifications and the resulting programs. In this contribution we introduce a set of tools that maintain multiple abstraction levels in appropriate program code patterns throughout the development process, including run time and monitoring. This makes the program code the only notation necessary for expressing different abstraction levels and improves maintenance of high-level specifications, synchronization of different specifications, and design recovery.