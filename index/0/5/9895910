We consider the computational power of a hypercube containing a potentially large number of randomly located faulty components. We describe a randomized algorithm which embeds an <italic>N</italic>-node hypercube in an <italic>N</italic>-node hypercube with faulty processors. Provided that the processors of the <italic>N</italic>-node hypercube are faulty with probability <italic>p</italic> < 1, and that the faults are independently distributed, we show that with high probability, the faulty hypercube can emulate the fault-free hypercube with only constant slowdown. In other words, an <italic>N</italic>-node hypercube with faults can simulate <italic>T</italic> steps of an <italic>N</italic>-node fault-free hypercube in <italic>O</italic>(<italic>T</italic>) steps. The embedding is easy to construct in polylogarithmic time using only local control. We also describe <italic>O</italic>(log <italic>N</italic>)-step routing algorithms which ensure the delivery of messages with high probability even when a constant fraction of the nodes and edges have failed. The routing results represent the first adaptive routing algorithms for which an effective theoretical analysis has been achieved.