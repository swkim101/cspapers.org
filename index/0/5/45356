Grid computing is rapidly becoming a requirement for the modern days computing where needs large amount of data to be processed. The Gridbus broker focuses on the Data Grid and schedules jobs depending on data and compute resources. In the current scheduling process, a job is assigned to an executor depending on the compute resource and data resource available at the time of deployment. One major problem is, if there is an idle higher grade compute resource available after the scheduling, it doesn't take the advantage of that though there are unfinished job. As previous job completion history get privilege at the scheduling time so there is a high possibility for the slower one getting the more number of threads. Also if the last thread is assigned to the slower executor, both these cases create a bottleneck for the faster job completion. In many cases, the faster one remains idle for a long time after completing its last job. In this paper, we have proposed a technique to reassign a thread to higher grade executor by preempting the thread in lower grade executor. Here we used the data restoration technique which track the information of the thread so far ran on a lower rate compute resource. If there is an idle computer with higher resource after the scheduling, we assigned the thread on computer from the saved point of the job that has already done in the lower power compute resource. By this approach we have improved the performance as well as the reliability of the Grid in a considerable extent.