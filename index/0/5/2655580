Conventional approaches to execution of database queries on general purpose multiprocessors attempt to maximize system throughput using inter-query parallelism with a fixed number of processors. Standard uniprocessor optimization techniques are used to minimize execution time of individual queries. Our approach is to increase performance by utilizing intra-query parallelism as well as minimizing overall resource requirements. Specifically, processor and i/o bandwidth requirements are minimized by coordinating the order in which data pages are read into memory and page joins assigned to available processors. We present a scheduling strategy based on join indices and prove lower and upper bounds on its resource requirements. We then describe a heuristic for estimating the number of processors required to complete join execution in minimal time. Our simulation results indicate that these techniques are effective with respect to processor utilization and buffer requirements. 11 refs.