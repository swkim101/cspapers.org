Testbeds composed of end hosts deployed across the Internet enable researchers to simultaneously conduct a wide variety of experiments. Active measurement studies of Internet path properties that require precisely crafted probe streams can be problematic in these environments. The reason is that load on the host systems from concurrently executing experiments (as is typical in PlanetLab) can significantly alter probe stream timings. In this paper we measure and characterize how packet streams from our local PlanetLab nodes are affected by experimental concurrency. We find that the effects can be extreme. We then set up a simple PlanetLab deployment in a laboratory testbed to evaluate these effects in a controlled fashion. We find that even relatively low load levels can cause serious problems in probe streams. Based on these results, we develop a novel system called <scp>MAD</scp> that can operate as a Linux kernel module or as a stand-alone daemon to support real-time scheduling of probe streams. <scp>MAD</scp> coordinates probe packet emission for all active measurement experiments on a node. We demonstrate the capabilities of <scp>MAD</scp>, showing that it performs effectively even under very high levels of multiplexing and host system load.