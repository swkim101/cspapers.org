The ability to store arbitrarily structured objects in persistent storage in a transparent and flexible way with little effort is an important requirement for middleware in general and for object-oriented middleware in particular [1]. This extended abstract describes the demonstration of a transparent and flexible persistence service for application objects in CORBA environments. Details of the conceptual design and the implementation can be found in [3]. The purpose of a persistent storage service is to support application developers in storing object states persistently. In the context of object-oriented applications, a persistent storage service can be represented by appropriate interface definitions and implementations. Generally speaking, at each instance, an object is characterized by its state and its behavior. While object behavior is specified by methods, the state of an object is represented by the object’s current attribute values. Consequently, a persistent storage service deals with storing attribute values persistently, with the aim of enhancing fault-tolerance. If the representation in volatile storage of a persistent object is lost, e.g., due to a server crash, the persistent storage service is responsible for restoring a consistent object state after the system is restarted. This is done by loading the object’s attribute values from persistent storage into volatile storage to reinstall a consistent object state.