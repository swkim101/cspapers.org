Beginning students tend to think that computer science means only programming. As teachers of computer science, we are constantly trying to emphasize that the important component of computer science is a problem solving ability. This is not easy for several reasons. First of all, it is difficult to “teach” problem solving, whether in the context of computer science or not. Secondly, beginning computer students spend the vast majority of their time struggling to get this program working just before the deadline so that they can then start on the next program. A third reason that students might miss the problem solving focus is that we don't give them enough opportunities to solve problems from start to finish. All too often these programming assignments are presented to the students in a “ready-to-program” format. That is, the real work is glossed over or is accomplished for them. In this paper we discuss a simple but important application, committee scheduling. This problem is an excellent example of the entire problem solving process and provides students at all levels with the opportunity to formulate a mathematical model, prove a theorem, consider alternate strategies for implementing a solution as a computer algorithm, and perform some elementary algorithm analysis.