Recently, Spitznagel and Garlan introduced connector wrappers, which cleanly specify reliability policies in a form that can be incorporated into existing architectural specifications. We recently implemented a middleware framework, called Theseus, that supports asynchronous communication among distributed objects under a variety of different reliability policies. Both connector wrappers and Theseus separate reliability concerns from developers of system components, and both allow different policy decisions to be woven into an existing architecture. This paper illustrates the synergistic relationship between these two complimentary approaches and discusses how we are using connector wrappers to identify new (as yet undiscovered) reliability policies to add to Theseus.