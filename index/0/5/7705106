Traditional software development techniques have proved inadequate for developing dependable real-time systems. Non-functional concerns, such as timeliness, reliability and safety, are typically introduced on an ad-hoc basis, often late in the development process when the design is difficult to change. Experience shows that this approach fails to produce cost-effective dependable systems. Development of dependable real-time systems also calls for new forms of abstraction. In such systems the target execution environment constrains the feasible designs and realisable non-functional goals. Hence there is a need to consider such constraints early in the design process. Abstractions which hide crucial detail are inappropriate; nevertheless, abstractions are obviously needed if the development process is to be successfully managed.