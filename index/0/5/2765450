This paper describes specification techniques related to a hierarchical methodology developed principally by the author for design, implementation, and proof of large software systems. Two kinds of specification techniques are described: those for decomposing the system into a hierarchy of abstract machines, and those for writing formal specifications for each machine. Several examples of the use of the methodology are presented. The basic concepts of the methodology are extended to include an interpretive computational model that is particularly relevant to hardware design. The usefulness of specifications in the software design process is also discussed.