We describe an algorithm for computing planar convex hulls in the self-improving model: given a sequence <i>I</i><sub>1</sub>, <i>I</i><sub>2</sub>,... of planar <i>n</i>-point sets, the upper convex hull conv (<i>I</i>) of each set <i>I</i> is desired. We assume that there exists a probability distribution <i>D</i> on <i>n</i>-point sets, such that the inputs <i>I</i><sub><i>j</i></sub> are drawn independently according to <i>D</i>. Furthermore, <i>D</i> is such that the individual points are distributed independently of each other. In other words, the <i>i</i>'th point is distributed according to <i>D</i><sub><i>i</i></sub>. The <i>D</i><sub><i>i</i></sub>'s can be arbitrary but are independent of each other. The distribution <i>D</i> is not known to the algorithm in advance. After a learning phase of <i>n</i>Îµ rounds, the expected time to compute conv(<i>I</i>) is <i>O</i>(<i>n</i> + <i>H</i>(conv(<i>I</i>))). Here, <i>H</i>(conv(<i>I</i>)) is the entropy of the output, which is a lower bound for the expected running time of <i>any</i> algebraic computation tree that computes the convex hull. (More precisely, <i>H</i>(conv(<i>I</i>)) is the minimum entropy of any random variable that maps <i>I</i> to a description of conv(<i>I</i>) and to a labeling scheme that proves nonextremality for every point in <i>I</i> not on the hull.) Our algorithm is thus asymptotically optimal for <i>D</i>.