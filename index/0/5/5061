We consider the problem of maintaining a dynamic dictionary in which both the keys and the associated data are variable-length bit-strings. We present a dictionary structure based on hashing that supports constant time lookup and expected amortized constant time insertion and deletion. To store the key-data pairs (<i>s</i><inf>1</inf>, <i>t</i><inf>1</inf>) ... (<i>s<inf>n</inf></i>, <i>t<inf>n</inf></i>), our dictionary structure uses <i>O(m)</i> bits where <i>m</i> = Î£(max(|<i>s</i><inf><i>i</i></inf>| -- log <i>n</i>, 1) + |<i>t</i><inf><i>i</i></inf>| and |<i>s</i><inf><i>i</i></inf>| is the length of bit string <i>s</i><inf><i>i</i></inf>. We assume a word length <i>w</i> > log <i>m</i>.We present several applications, including representations for semi-dynamic graphs, ordered sets for integers in a bounded range, cardinal trees with varying cardinality, and simplicial meshes of <i>k</i> dimensions. These results either generalize or simplify previous results.