Microservers are networked embedded devices that accept user tasks on demand and execute them on real world information collected by sensors. Sharing intermediate sensing and computing results among these tasks is critical for optimal resource utilization. This paper presents a service-oriented microserver runtime --- Share and its semantics-based task management design. Event semantics checking and conversion are based on a signal type system (STS) that captures both data values and service triggering. Based on the compatibility of event semantics, redundant computations in uncoordinated tasks are removed from the runtime. A prototype of Share has been experimented with a parking garage sensor network executing three uncoordinated user queries.