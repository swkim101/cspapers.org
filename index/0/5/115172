In this paper, we present successful strategies for forgetting cases in a case-based reasoning (CBR) system applied to autonomous robot navigation. This extends previous work that involved a CBR architecture, which indexes cases by the spatio-temporal characteristics of the sensor data, and outputs or selects parameters of behaviors in a behavior-based robot architecture. In such a system, the removal of cases can be applied when a new situation unlike any current case in the library is encountered, but the library is full. Various strategies of determining which cases to remove are proposed, including metrics such as how frequently a case is used and a novel spreading activation mechanism. Experimental results show that such mechanisms can increase the performance of the system significantly and allow it to essentially forget old environments in which it was trained in favor of new environments it is currently encountering. The performance of this new system is better than both a purely reactive behavior-based system as well as the CBR module that did not forget cases. Furthermore, such forgetting mechanisms can be useful even when there is no major environmental shift during training, since some cases can potentially be harmful or rarely used. The relationship between the forgetting mechanism and the case library size is also discussed.