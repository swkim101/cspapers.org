Surprisingly, most of the path-based criteria do not satisfy a quite natural claim that requires the testing of every statement of a program. The reason is as follows: Though an assignment statement is executed, the result of this assignment may not affect to any output during the test. In this case, substituting an arbitrary expression into the statement to be tested, any fault remains unrevealed. To overcome this problem we introduce the aJl program functions criterion that is based on the concept of program functions defined as follows: Definition. Assume that a module A4 has n definitions. To the ith definition di there corresponds uniquely a function ~,~’ (21, ZZ, . . . . Zk) (i = l..rl) occurring in it, where di defines variable ~j, (j = l.,.k). If the definition is a read statement or assigns a constant, then the function is in the form ~~j(o). Select a path F’ = pl, pz, ..., pN from M. If in node pm there is a definition with a related function .f~’ (0), then by definition the program function of the variable xl is Z;: = J:’ in pm, Assume that the program functions at the last definitions in P to Zl, X2, .. .. zk are z;:, , Z=2 ~,,, .... Z~f,, respectively, and the function related 1.0I,IIc drtlni(,ioil d; in ]Iodr pr is f;!’ (.TI , .3-Y, ., TL. ). Tllrll