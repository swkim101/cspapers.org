Maintaining the stability and quality of a software product developed by a global team presents a myriad of challenges. A highly serialized build and test process turned out to be inefficient and in many cases detrimental to the health of the product. A system of integrated source control coupled with continuous build and test resulted in higher productivity by the engineering team, a dramatic reduction of "broken" builds, and a regression suite pass rate consistently near 100%. In this presentation we review the circumstances that motivated our move to a continuous build and test model, provide an overview of our continuous build and test system, and discuss the metrics used to monitor system health and drive continual improvements.