We consider the problem of finding the smallest context-free grammar that generates exactly one given string of length <i>n</i>. The size of this grammar is of theoretical interest as an efficiently computable variant of Kolmogorov complexity. The problem is of practical importance in areas such as data compression and pattern extraction.The smallest grammar is known to be hard to approximate to within a constant factor, and an <i>o</i>(log<i>n</i>/log log<i>n</i>) approximation would require progress on a long-standing algebraic problem [10]. Previously, the best proved approximation ratio was <i>O</i>(<i>n</i><sup>1/2</sup>) for the <sc>Bisection</sc> algorithm [8]. Our main result is an exponential improvement of this ratio; we give an <i>O</i>(log (<i>n/g</i><sup>*</sup>)) approximation algorithm, where <i>g</i><sup>*</sup> is the size of the smallest grammar.We then consider other computable variants of Kolomogorov complexity. In particular we give an <i>O</i>(log<sup>2</sup> <i>n</i>) approximation for the smallest non-deterministic finite automaton with <i>advice</i> that produces a given string. We also apply our techniques to "advice-grammars" and "edit-grammars", two other natural models of string complexity.