Effectiveness of a data prefetch mechanism lies in the exploration of regular access patterns found in the memory reference address sequence. Previous research shows that selective prefetch schemes are effective for linearly accessed memory references, including instructions and data array accesses with constant strides. Extending them to pointer accesses limits their effectiveness because such linear function nor highly accurate probabilistic model is difficult to find. In this paper, a fresh look into data access regularity and predictability from the runtime selfmodification of register values is proposed. Then, a hardware driven prefetch scheme, called the Reference Value Prediction Caching (RVPC), is proposed to realize this predictability model. This RVPC scheme is based on the detection of self-modifying instructions in loops and the use of self-modifying registers in data references. Simulation result shows that significant reduction in memory latency can be obtained, especially in non-pointer data structures including linked lists and trees.