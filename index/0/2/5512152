Novel techniques based on the Discrete Fourier Transform are proposed to estimate the size of relations resulting from join operations. For the special case of self join the proposed algorithm gives the exact join size using logarithmic space. A generalization to compute the join of arbitrary relations is then used to develop two tree-based techniques that provide a spectrum of algorithms which interpolate storage requirements versus accuracy of the estimation obtained. Finally, we present experimental results to exhibit the eeectiveness of our approach. 1 Introduction Query optimization is an important issue in Database Management Systems (DBMSs). For a given query, there may be several ways of executing it. Finding all these diierent access plans and deciding the best one may not be practical for a user. As a result, DBMSs need to perform this complex optimization process by themselves. For this reason , most DBMSs use a component called query optimizer. The aim of query optimizers in relational database systems is to select the most eecient way among all possible ways of executing a query. In practice this process requires approximating the cost of possible execution sequences and selecting the cheapest one in terms of a cost metric, which is usually the cumulative size of intermediate operations. Even though these possible ways result in the same answer, their execution sequence may be diierent, and hence they may result in diierent execution costs. A necessary procedure in estimating the execution cost of a query is to estimate the result size of each operation in each possible execution sequence. This information depends on the frequency distribution of the underlying data. In practice, most database systems store summarized information about the frequency distribution (or nd it dynamically when needed) and use this information to estimate the result size of various operations and then the cost of the executions. The accuracy