The Rendezvousml language and architecture are designed to build computer-supported cooperative work applications that support simultaneous work at a distance. The language includes a feature-rich constraint maintenance system. The features in the constraint system were selected based, on feedback from user-interface developers using earlier versions of the Rendezvous language. Three important features in the constraint system are: indirectly referenced source and target variables, tolerance of side-effects, and special handling of uninitialized variables to simplify initial-ization. Application requirements that motivate these features and implementation techniques are described. The Rendezvous constraint system is faster, on some benchmarks , than other constraint systems currently being used for interface construction.