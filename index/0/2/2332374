Temporal databases assume a single line of time evolution. In other words, they support timeevolving data. However there are applications which require the support of temporal data with branched time evolution. With new branches created as time proceeds, branched and temporal data tends to increase in size rapidly, making the need for e cient indexing crucial. We propose a new (paginated) access method for branched and temporal data: the BT-tree. The BT-tree is both storage e cient and access e cient. We have implemented the BT-tree and performance results con rm these properties.