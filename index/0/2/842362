We conduct an empirical study on some dynamic graph algorithms which where developed recently. The following implementations were tested and compared with simple algorithms: dynamic connectivity, and dynamic minimum spanning tree based on sparsiication by Eppstein et al.; dynamic connectivity based on a very recent paper by Henzinger and King. In our experiments, we considered both random and non-random inputs. Moreover, we present a simpliied variant of the algorithm by Henzinger and King, which for random inputs was always faster than the original implementation. Indeed, this variant was among the fastest implementations for random inputs. For non-random inputs, sparsiication was the fastest algorithm for small sequences of updates; for medium and large sequences of updates, the original algorithm by Henzinger and King was faster. Perhaps one of the main practical results of this paper is that our implementations of the sophisticated dynamic graph algorithms were faster than simpler algorithms for most practical values of the graph parameters, and competitive with simpler algorithms even in case of very small graphs (say graphs with less than a dozen vertices and edges). From the theoretical point of view, we analyze the average case running time of sparsiication and prove that the logarithmic overhead for simple sparsiication vanishes for dynamic random graphs.