The robot Justin, which has been developed at the institute of Robotics and Mechatronics at the German Aerospace Center (DLR) in Oberpfaffenhofen, is an advanced humanoid robot with two arms (7 DOF each) and four-fingered humanlike hands (12 DOF each), a head with two video cameras for stereo vision, an actuated torso, and a base with four wheels mounted on extensible legs. In this poster, we present the ongoing efforts to provide Justin with a higher degree of autonomy within the scope of the EU FP7-project GeRT (see http://www.gert-project.eu). Justin was until recently limited to performing tasks using hand-written programs for specific manipulation tasks and involving a priori known objects. The overall aim of the project is that Justin should be able to generalize from existing programs to perform new tasks consisting of the same types of basic operations but combined in new ways, and with new objects belonging to the same functional classes. Among the issues addressed in the project is task planning: the problem of finding a sequence of actions (a plan) that achieves a given goal when started from some initial state. Task planning can solve tasks that involve complex causal dependencies between actions and supports high-level specifications of those tasks. However, actions and states are typically represented in logical form, which is insufficient for representing the geometrical and kinematic properties of the robot, the objects it manipulates, and the environment. Therefore, generated plans may sometimes be impossible to be executed due to kinematic constraints and/or obstacles. For this reason, we have integrated the task planner with an RRT path planner, and augmented the logical states with a geometric state component which explicitly represents the configurations of the robot and other objects. The current planning system for GeRT [1] can compute an initial state based on perceptual data, provided it has a priori models of the objects in the scene. It then calls an extended version of a standard task planner, which can check preconditions and establish effects both in the logical and the geometric state components. Thus, during search the planner keeps track of the configuration of the robot and other objects, and can verify that viable paths exist for transit and transfer actions. In addition, the planner is capable of backtracking on the geometric level. Typically, an action such as putting down an object in a region can be performed in many ways on the geometric level, although it