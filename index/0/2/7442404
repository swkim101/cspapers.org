We are given a set of clients with budget constraints and a set of indivisible items. Each client is willing to buy one or more bundles of (at most) k items each (bundles can be seen as hyperedges in a k-hypergraph). If client i gets a bundle e, she pays bi,e and yields a net profit wi,e. The Hypermatching Assignment Problem (HAP) is to assign a set of pairwise disjoint bundles to clients so as to maximize the total profit while respecting the budgets. This problem has various applications in production planning and budget-constrained auctions and generalizes well-studied problems in combinatorial optimization: for example the weighted (unweighted) k-hypergraph matching problem is the special case of HAP with one client having unbounded budget and general (unit) profits; the Generalized Assignment Problem (GAP) is the special case of HAP with k = 1. 
 
Let e > 0 denote an arbitrarily small constant. In this paper we obtain the following main results: 
 
• We give a randomized (k + 1 + e) approximation algorithm for HAP, which is based on rounding the 1-round Lasserre strengthening of a novel LP. This is one of a few approximation results based on Lasserre hierarchies and our approach might be of independent interest. We remark that for weighted k-hypergraph matching no LP nor SDP relaxation is known to have integrality gap better than k − 1 + 1/k for general k [Chan and Lau, SODA'10]. 
 
• For the relevant special case that one wants to maximize the total revenue (i.e., bi,e = wi,e), we present a local search based (k + O (√k))/2 approximation algorithm for k = O(1). This almost matches the best known (k + 1 + e)/2 approximation ratio by Berman [SWAT'00] for the (less general) weighted k-hypergraph matching problem. 
 
• For the unweighted k-hypergraph matching problem, we present a (k + 1 + e)/3 approximation in quasipolynomial time. This improves over the (k + 2)/3 approximation by Halldorsson [SODA'95] (also in quasipolynomial time). In particular this suggests that a 4/3 + e approximation for 3-dimensional matching might exist, whereas the currently best known polynomial-time approximation ratio is 3/2.