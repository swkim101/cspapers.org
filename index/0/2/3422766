We study computing all-pairs shortest paths (APSP) on distributed networks (the CONGEST model). The goal is for every node in the (weighted) network to know the distance from every other node using communication. The problem admits (1+o(1))-approximation &#xd5;(n)-time algorithms [2], [3], which are matched with \tilde &#x3a9;(n)-time lower bounds [4], [5],\footnote{\tilde \Theta, &#xd5; and \tilde &#x3a9; hide polylogarithmic factors. Note that the lower bounds also hold even in the unweighted case and in the weighted case with polynomial approximation ratios.}. No &#x3a9;(n) lower bound or o(m) upper bound were known for exact computation.In this paper, we present an &#xd5;(n^{5/4})-time randomized (Las Vegas) algorithm for exact weighted APSP; this provides the first improvement over the naive O(m)-time algorithm when the network is not so sparse. Our result also holds for the case where edge weights are asymmetric} (a.k.a. the directed case where communication is bidirectional). Our techniques also yield an &#xd5;(n^{3/4}k^{1/2}+n)-time algorithm for the k-source shortest paths} problem where we want every node to know distances from k sources; this improves Elkins recent bound [6] when k=\tilde &#x3a9;(n^{1/4}).We achieve the above results by developing distributed algorithms on top of the classic scaling technique, which we believe is used for the first time for distributed shortest paths computation. One new algorithm which might be of an independent interest is for the reversed r-sink shortest paths} problem, where we want every of r sinks to know its distances from all other nodes, given that every node already knows its distance to every sink. We show an &#xd5;(n&#x221a;{r})-time algorithm for this problem. Another new algorithm is called short range extension, where we show that in &#xd5;(n&#x221a;{h}) time the knowledge about distances can be extended for additional h hops. For this, we use weight rounding to introduce small additive} errors which can be later fixed.