We describe a design tool, DON, which assists user interface designers in generating menu and dialog box presentations. An integrated knowledge base model serves as the foundation for developing thesetofdesignrulestoautomatevariousactivitiesofthe designprccess.Usefulandreusableknowledgeabouttheorganization of menus and dialog boxes is identified andencapsulated in the form of design rules. The basic approach we take is embedding a top-down design methodology in a tool that assists designers in organizing the information, selecting appropriate interface object classes and their attributes, and placing selected interface objects in a dialog box or a menu in a meaningful, logical, and consistent manner. We let the designer specify the conceptual design of an application, maintain high-level style preference profiles, customize the appearances of interface object classes whichmakeup aninterface presentation. and controlthepriority of organizationrules. The tool then automatically generates the user interface presentation. INTRODUCTION A user interface management system (UIMS) provides a framework for producing quality interfaces faster and easier. The high cost of trying out interface designs to accommodate varying styles and preferences makes developing interfaces very difficult without design tools which speed up the process. Bottom-up interface building tools provide interactive ways to create, compose, and modify the objects which make up the user interfaces. Interface building tools like Trillium [Henderson 861, the dialog editor [Cardelli 881, Interviews [Linton 891, Prototyper [Cossey 89],theExperInterfaceBuilder[Hullot87],andTransportable Application Executive (TAE Plus) [ Szczur 881, are very effective in speeding up the iterative development cycle, but do not guide and assist the designer in choosing and organizing interface objects. Thesebottom-updesigntoolsreduceinitialcreationtimeandfacilitate modifying visual attributes, and some provide graphical constraints to assist in laying out interface objects. Difficulties arise when a designer tries to reorganize the content or to change the application objecttointerfaceobjectmappingwhenknowledgeoflinksbetween applicationknowledgeandtheinteractively laid-outinterfaceobjects Permission to copy without fee all or part of this matertial is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that the copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. @ 1990 ACM 0897914104/90/0010/0010 $1.50 is lacking. The major drawback is that the resulting interface quality is too dependent on a designer’s ability to organize information and lay out selected interface objects. There is a class of UIMS’s which attempt to create the user interface directly from a specification of the application semantic descriptions, and then allow the designer to modify the interface to improve it. The top-down development approach starts with conceptual representation, then analyzes, structures, develops, and fiia.lly allows modification to the interface design [Hartson 871. Examples of tools that automate some aspect of this process are the Menu Interaction Kontrol Environment (MIKE) [Olsen 871, Chisel [Singh 861, Generator [Petoud 881, Presentation Designer [Arens 881. and User Interface Design Environment (UIDE) [Foley 88, Foley 891. MIKE does not consider user characteristics or designer preferences during the initial design process. The Generator automatically creates an operational version of the user interface from the functional specification of the application, and the Presentation Designer applies a system of antecedent-consequent rules that maps objects from the applicationmodel into objects in the interface model. Both of these tools concentrate on the selection processfor thedatatointerfaceobjectmappingandusesimplelayout rules to compose the selected interface objects. Chisel lacks the content organization rules needed to generate a wide range of user interface styles. Our User Interface Presentation Design Assistant (DON) is an intelligent design tool that focuses on automatic organization and development of menus and dialog boxes using various types of knowledge as input and a set of design rules as an engine. DON means to put on (an article of clothing). in this case, to put on user interface objects. The selection of each piece of clothing is made basedoneachperson’sphysical attributes,personalstylepreferences, and appearance goal for each particular day. Similarly, designing user interfaces requires careful analysis of the conceptual design of each application, basic style preferences of interface objects, and high-level goals specific to the current design instance. DON is designed to go beyond the existing tools. It is baaed on User Interface Design Environment (UIDE), a knowledge-based system to assist in user interface design, evaluation, and implementation. DON extends the general UIDE research objective to identify knowledge, logical relations, and rules used by interface designers, and to embody them in the knowledge base as a way of further automating the design process. KNOWLEDGE BASE MODEL The architecture of thedesignenvironment (Figure 1) embodies theknowledge base model that unites various components needed for effectiveuser~terfacepresentation.Theintegratedknowledgebase