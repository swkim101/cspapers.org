A hierarchical and functional programming based on attribute grammar is presented. In this approach, programs are hierarchically decomposed into modules and each module is characterized by its inputs and outputs. A set of equations is associated with each decomposition, which specifies relationship between inputs and outputs of modules that participate in the decomposition.
 After giving formalisms and examples, an algorithm is described which transforms a program specification in our approach into a procedural type program and optimizations that should be applied to the generated program is discussed.