Given an undirected graph G=(V,E), a collection (s1,t1),...,(sk,tk) of k demand pairs, and an integer c, the goal in the Edge Disjoint Paths with Congestion problem is to connect maximum possible number of the demand pairs by paths, so that the maximum load on any edge (called edge congestion) does not exceed c. We show an efficient randomized algorithm that routes Ω(OPT/poly log k) demand pairs with congestion at most 14, where OPT is the maximum number of pairs that can be simultaneously routed on edge-disjoint paths. The best previous algorithm that routed Ω(OPT/poly log n) pairs required congestion poly(log log n), and for the setting where the maximum allowed congestion is bounded by a constant c, the best previous algorithms could only guarantee the routing of OPT/nO(1/c) pairs.
 We also introduce a new type of vertex sparsifiers that we call integral flow sparsifiers, which approximately preserve both fractional and integral routings, and show an algorithm to construct such sparsifiers.