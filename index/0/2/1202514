Mobile computing adds a new wrinkle to the ageold problem of caching. Today’s wireless links are both slow and expensive, and are not always available to a user. Therefore, when a mobile user is disconnected, a cache miss means (at best) a substantial cost in time and money, or (at worst) a complete halt to work if critical information has not been cached. Existing solutions to this problem rely on some combination of explicit hoard profiles and spying on a user’s file accesses. Neither of these approaches is ideal in terms of reliability or user-friendliness. Our solution might be called transparent analytical spying. Instead of simply recording a list of file accesses, we analyze program executions and tie them to specific files. By observing multiple executions of a program, we are able to build sets of files associated with each program, and can heuristically separate application files from user files. We can then present a high-level view to the user that is similar to loading a briefcase. We have an implementation of our hoarding tool running under OS/2.