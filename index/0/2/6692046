Computer science didn't exist then as a recognized discipline; if it had, it would have been of little practical use, because the meager hardware couldn't support the cost of implementing its concepts. What real programmers did in the 50s was struggle to get 20 pounds of computation into a 5 pound bag. To succeed at that was a matter of pride, not as a macho exercise, but because that's how the computing job got done. The way you got that kind of compression was to come up with a powerful intermediate representation of your problem solution which had enough expressive power that the memory left over after implementing the intermediate representation (completely in memory, for speed) had space for much more computation than you could write in the native language using the whole memory. (The benchmark of that era was the Bell Laboratories Interpretive System for the IBM 650, which had a memory capacity of 2000 10-digit words.)