Dijkstra’s algorithm for finding the length of the longest upsequence within a given sequence of numbers is used as the basis for a case study in the development of a new sorting algorithm. The case study has pedagogic value for several reasons: the motivation for each step in the development of the algorithm is explained; interesting data structures are introduced; the complexity of the algorithm is analyzed using mathematics familiar to first year computer science students; the appendices provide detailed description of the implementation of the algorithm as well as several interesting examples of its use. The proposed algorithm merits attention since it uses O(nlogn) compares in the worst case (actually less than 2nlogn) and O(n) for both ordered or nearly ordered and reverse ordered or nearly reverse ordered sequences. 1 .O INTRODUCTION We provide a comprehensive and pedagogical description of an algorithm development process. The algorithm is new. It uses a variety of building blocks from computer science including well known techniques such as list merging, and lesser known techniques such as the efficient solution of the longest upsequence problem, It incorporates a variety of interesting data structures. It demonstrates how basic concepts in computer science and mathematics are used to develop and demonstrate an interesting and respectable algorithm. We describe the longest upsequence problem and the elegant solution given by Dijkstra [2]. We then propose an extension to Dijkstra’s algorithm to develop a sorting algorithm which uses O(nlogn) compares in the worst case and O(n) compares for an interesting class of data. Substantial analysis of the algorithm is demonstrated with respect to compares. The algorithm development provides a good case study for a fist year computer science course. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission.