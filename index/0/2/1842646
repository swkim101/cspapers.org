It is well known that the optimal solution for searching in a finite total order set is the binary search. In binary search we divide the set into two {open_quotes}halves{close_quotes}, by querying the middle element, and continue the search on the suitable half. What is the equivalent of binary search, when the set P is partially ordered? A query in this case is to a point x {element_of} P, with two possible answers:{open_quote}yes{close_quote}, indicates that the required element is {open_quotes}below{close_quotes} x, or {open_quote}no{close_quote} if the element is not bellow x. We show that the problem of computing an optimal strategy for search in Posets that are tree-like (or forests) is polynomial in the size of the tree, and requires at most O(n{sup 2} log{sup 2} n) steps. Optimal solutions of such search problems are often needed in program testing and debugging, where a given program is represented as a tree and a bug should be found using a minimal set of queries.