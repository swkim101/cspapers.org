The profile extension mechanism has permitted a rapid growth of the use of UML as a domain-specific modeling language. However, designing profiles typically falls into ad-hoc processes that often rely on domain-inappropriate primitives. One of the fundamental reasons is that profiles are specified on the same level of abstraction as the UML abstract syntax and consequently they narrow down the design space to an implementation level. In order to improvethis situation, some profile designers start from a "conceptual domain model" that states the domain ontology, and only then deal with finding out the profile extensions to support it. In spite of this, building truthfulness conceptual domain models and maintaining traceable mapping with the profile view is a bit of an art. In this paper, we propose to systematize the design of UML profiles built-upon conceptual domain models, by adopting a minimal setof framing rules. As these rules are defined on the basis of regularly occurring design patterns, domain models can be afterward checked for self-consistency and interactively transformed in stereotypes, tags and constraints