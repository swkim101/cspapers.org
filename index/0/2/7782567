A robot navigates in a polygonal region populated by a set of partially distinguishable landmarks. The robot's motion primitives consist of actions of the form “drive toward a landmark of class x”. To effectively navigate, the robot must always be able to see a landmark. Also, if the robot sees two landmarks of the same class, its motion primitives become ambiguous. Finally, if the robot wishes to navigate from landmark s<sub>0</sub> to landmark s<sub>goal</sub> with a simple graph search algorithm, then there must be a sequence of landmarks [s<sub>0</sub>, s<sub>1</sub>, s<sub>2</sub>, ..., s<sub>k</sub> = s<sub>goal</sub>], in which landmark s<sub>i</sub> is visible from s<sub>i-1</sub>. Given these three conditions, how many landmark classes are required for navigation in a given polygon P? We call this minimum number of landmark classes the connected landmark class number, denoted <sub>χCL</sub>(P). We study this problem for the monotone polygons, an important family of polygons that are frequently generated as intermediate steps in other decomposition algorithms. We demonstrate that for all odd k, there exists a monotone polygon M<sub>k</sub> with 3 over 4 (k<sup>2</sup> + 2k + 1) vertices such that <sub>χCL</sub>(P) ≥ k. We also demonstrate that for any n-vertex monotone polygon P, <sub>χCL</sub>(P) ≤ n/3 + 12.