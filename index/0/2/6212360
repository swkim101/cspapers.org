More and more large ASICs require analog subsystems to interface to the real world--to wireless and wired networks, to sensors and transducers in embedded applications, to electrically complex high-speed interconnect. This is a major problem, since these analog subsystems break almost every assumption we know and love about digital systems. Analog circuits interact tightly with the technology, exploit rather than hide the physics of the fab, and manipulate precise electrical quantities rather than friendly binary abstractions. With respect to today's logic-centric CAD flows, analog blocks fit poorly and abstract badly. The digital side of SoC designs is addressed via a mix of cell-based logical and physical synthesis, commercially available soft and hard IP, and company-specific reuse methodologies for migrating complex functional blocks. On the analog side, “reuse” usually means hoping you still employ the person who designed the legacy analog block you are desperately trying to update.
What is happening to help mixed-signal SoC designers in this difficult area? Analog synthesis tools that have been simmering in academia for the last decade are suddenly being commercialized. Mixed-signal IP companies have appeared, proffering a variety of commonly used core functions. Foundries themselves are augmenting their libraries to include portfolios of analog blocks. EDA methodology czars have started returning phone calls from annoyed analog designers. What can we hope for here? Analog synthesis? Mixed-signal IP? Practical reuse methodologies? Or will we continue to design analog the old-fashioned way--one transistor, one polygon at a time? Our panelists offer a mix of widely differing viewpoints on this important question.