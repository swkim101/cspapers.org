Advances in magnetic recording technology have resulted in a rapid increase in disk capacities, but improvements in the mechanical characteristics of disks have been quite modest. For example, the access time to random disk blocks has decreased by a mere factor of two, while disk capacities have increased by several orders of magnitude. OLTP applications subject disks to a very demanding workload consisting of accesses to randomly distributed disk blocks and gain limited benefit from caching and prefetching (at the onboard disk cache). We propose some new disk scheduling methods to address the limited disk access bandwidth problem.Some well-known disk scheduling methods are: (i) FCFS. (ii) Shortest Seek Time First (SSTF). (iii) SCAN and Cyclical SCAN (CSCAN). The latter moves the disk arm to its beginning point after each SCAN so that requests at all disk cylinders are treated symmetrically. (iv) CSCAN with a lookahead of next i requests (CSCAN-LAi) takes into account latency to reorder their processing to minimize the sum of their service times. (v) Shortest Access Time First (SATF), which provides the best performance [2]. (vi) SATF with lookahead for i requests (SATF-LAi).In the case of SATF-LAi with i = 2 after the completion of request X the scheduler chooses requests A and B such that the sum of their service times processed consecutively, i.e., tX,A + atA,B, is minimized. In SATF with flexible lookahead only request A is definitely processed and request B is processed provided that it is selected in the next round. We refer to a as the discount factor (0 ≤ a ≤ 1), because less weight is attached to the service time of request B, since it may not be processed after request A. The case a = 0 corresponds to pure SATF. When a = 1 we consider a variant called SATF with fixed lookahead where B is processed unconditionally after A before any other other (perhaps more favorable recent) requests. Thus requests are processed two at a time, unless only one request is available. More generally requests in the temporal neighborhood of request A are given higher priority.