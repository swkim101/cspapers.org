Dealing with multiple inheritance hierarchies is a problem both for designers of compilers for object-oriented languages supporting multiple inheritance and for users who have to model complex hierarchical data with languages where classes are not first-class objects (such as C++). We propose here two techniques that yield a new way of encoding a multiple inheritance hierarchy. We first give a proven algorithm to incrementally transform any hierarchy into a lattice. We then develop a technique, called compact hierarchical encoding, which provides constant time for subsumption between two nodes of the lattice, using the codes as a representation of the associated order (transitive closure). The encoding builds a lattice mapping to a powerset inclusion lattice and can thus be implemented efficiently using bit-vectors. It offers an interesting alternative to the modulation technique proposed by [ABL89], because it produces more compact encoding on complex hierarchies that are frequent in object-oriented applications.