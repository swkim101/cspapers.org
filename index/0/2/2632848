We give an O(√log n)-approximation algorithm for d-dimensional arrangement - the problem of mapping a graph to a d-dimensional grid (for constant d ≥ 2) to minimize the sum of edge lengths. This improves the previous best O(log n log log n) approximation of Even, Naor, Rao and Schieber. The d = 1 case is the well studied Minimum Linear Arrangement problem. The problem is equivalent to the question of mapping a graph to integer points on a line so as to minimize the sum of edge costs, where edge costs are measured by edge lengths raised to the exponent α = 1/d. We give a simple recursive partitioning algorithm for this variant of linear arrangement for any exponent α ε (0, 1). Our analysis also applies to a directed version of the problem: given a directed graph, the goal is to map vertices to the line so as to minimize the sum of costs of forward edges. As before, edge costs are edge lengths raised to the exponent α. The α = 0 case is the well known Minimum Feedback Arc Set problem, and the α = 1 case is essentially the Minimum Storage-Time Product problem. We analyze an extremely simple divide and conquer algorithm that uses a balanced cut subroutine with approximation ratio β to recursively partition the graph. Our analysis shows that this approach gives an approximation ratio of O(β) for the minimum linear arrangement problem with exponent α for any fixed α ε (0, 1).