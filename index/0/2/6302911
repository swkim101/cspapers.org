Aus der Motivation: Description Logics (DLs) are a family of formalisms well-suited for the representation of and reasoning about knowledge. Whereas most Description Logics represent only static aspects of the application domain, recent research resulted in the exploration of various Description Logics that allow to, additionally, represent temporal information, see [4] for an overview. The approaches to integrate time differ in at least two important aspects: First, the basic temporal entity may be a time point or a time interval. Second, the temporal structure may be part of the semantics (yielding a multi-dimensional semantics) or it may be integrated as a so-called concrete domain. Examples for multi-dimensional point-based logics can be find in, e.g., [21;29], while multi-dimensional interval-based logics are used in, e.g., [23;2]. The concrete domain approach needs some more explanation. Concrete domains have been proposed by Baader and Hanschke as an extension of Description Logics that allows reasoning about 'concrete qualities' of the entities of the application domain such as sizes, length, or weights of real-worlds objects [5]. Description Logics with concrete domains do usually not use a fixed concrete domain; instead the concrete domain can be thought of as a parameter to the logic. As was first described in [16], if a 'temporal' concrete domain is employed, then concrete domains may be point-based, interval-based, or both.