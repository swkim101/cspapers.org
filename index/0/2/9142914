This paper describes our experiences implementing a component architecture for TeamWave Workplace, an integrated groupware environment using a rooms metaphor. The problem we faced was how to design the architecture to support rapid development of new embedded components. Our solution, based on Tcl/Tk and GroupKit, uses multiple interpreters and a shared window hierarchy. This proved effective in easing development complexity in TeamWave. We discuss some of the strategies we used, and identify the types of interactions between system components. The lessons learned in developing this component model should be generally applicable to future integrated groupware systems in different environments.