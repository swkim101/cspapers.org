Recovery of higher level "design" information and the ability to create dynamic, task adaptable software documentation is crucial to supporting a number of program understanding activities. This paper presents research that demonstrates that reverse engineering technology can be used to recover software architecture representations of source code. We have developed a framework that integrates reverse engineering technology and architectural style representations. Using the framework, analysts can recover custom, dynamic documentation to fit a variety of software analysis requirements. Our goal is to establish coherent abstractions appropriate for helping analysts to understand large software systems. We discuss a code coverage metric useful for assessing the degree of program understanding achieved.