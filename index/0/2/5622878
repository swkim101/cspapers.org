In this paper, we study the maximum loads of explicit hash families in the $d$-choice schemes when allocating sequentially $n$ balls into $n$ bins. We consider the \emph{Uniform-Greedy} scheme \cite{ABKU}, which provides $d$ independent bins for each ball and places the ball into the bin with the least load, and its non-uniform variant --- the \emph{Always-Go-Left} scheme introduced by V\"ocking~\cite{Vocking}. We construct a hash family with $O(\log n \log \log n)$ random bits based on the previous work of Celis et al.~\cite{CRSW} and show the following results. 
1.This hash family has a maximum load of $\frac{\log \log n}{\log d} + O(1)$ in the \emph{Uniform-Greedy} scheme. 
2.It has a maximum load of $\frac{\log \log n}{d \log \phi_d} + O(1)$ in the \emph{Always-Go-Left} scheme for a constant $\phi_d>1.61$. 
The maximum loads of our hash family match the maximum loads of a perfectly random hash function \cite{ABKU,Vocking} in the \emph{Uniform-Greedy} and \emph{Always-Go-Left} scheme separately. Previously, the best known hash families that guarantee the same maximum loads as a perfectly random hash function in any of these schemes were $O(\log n)$-wise independent functions \cite{Vocking}, which needs $\Theta(\log^2 n)$ random bits.