We present a significantly faster algorithm for the restricted shortest path problem, in which we are given two vertices s, t, and the goal is to find the shortest path that is subject to a side constraint. More formally, rather than just having a single weight, each edge has two weights: a cost-weight, and a delay-weight. We are given a threshold T which corresponds to the maximum delay we can afford, and the goal is to find the s -- t path that minimizes total cost while still having delay-length at most T. 
 
There are many applications for this problem, as it can model situations where we need a path that has to achieve some balanced trade off between two different parameters. The exact version of the problem is known to be NP-hard [3], but there has been a series of results on (1 + e) approximations, which culminated in a O(mn) algorithm for general graphs in 1999 [4, 8]. We present the first result to break though this barrier, achieving a close to linear running time -- technically it is [EQUATION]. It does have several draw-backs, however. It is randomized (Las Vegas), it only works for undirected graphs, and it approximates both parameters (previous algorithms found a (1 + e) shortest path with delay exactly T or less, or a shortest path with delay at most (1 + e)T, whereas our algorithm incurs a (1 + e) approximation on both counts.) Our result presents an entirely new approach to the problem, which could potentially be generalized to work for directed graphs and to approximate only one of the parameters.