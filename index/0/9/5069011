We present a general framework for constructing cut sparsifiers in undirected graphs --- weighted subgraphs for which every cut has the same weight as the original graph, up to a multiplicative factor of (1 ε). Using this framework, we simplify, unify and improve upon previous sparsification results. As simple instantiations of this framework, we show that sparsifiers can be constructed by sampling edges according to their strength (a result of Benczur and Karger), effective resistance (a result of Spielman and Srivastava), edge connectivity, or by sampling random spanning trees. Sampling according to edge connectivity is the most aggressive method, and the most challenging to analyze. Our proof that this method produces sparsifiers resolves an open question of Benczur and Karger. While the above results are interesting from a combinatorial standpoint, we also prove new algorithmic results. In particular, we develop techniques that give the first (optimal) O(m)-time sparsification algorithm for unweighted graphs. Our algorithm has a running time of O(m) + ~O(n/ε2) for weighted graphs, which is also linear unless the input graph is very sparse itself. In both cases, this improves upon the previous best running times (due to Benczur and Karger) of O(m log2 n) (for the unweighted case) and O(m log3 n) (for the weighted case) respectively. Our algorithm constructs sparsifiers that contain O(n log n/ε2) edges in expectation; the only known construction of sparsifiers with fewer edges is by a substantially slower algorithm running in O(n3 m / ε2) time. A key ingredient of our proofs is a natural generalization of Karger's bound on the number of small cuts in an undirected graph. Given the numerous applications of Karger's bound, we suspect that our generalization will also be of independent interest.