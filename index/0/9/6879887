The 3SUM problem is to decide, given a set of n real numbers, whether any three sum to zero. It is widely conjectured that a trivial O(n<sup>2</sup>)-time algorithm is optimal and over the years the consequences of this conjecture have been revealed. This 3SUM conjecture implies Ω(n<sup>2</sup>) lower bounds on numerous problems in computational geometry and a variant of the conjecture implies strong lower bounds on triangle enumeration, dynamic graph algorithms, and string matching data structures. In this paper we refute the 3SUM conjecture. We prove that the decision tree complexity of 3SUM is O(n<sup>3/2</sup> √/log n) and give two subquadratic 3SUM algorithms, a deterministic one running in O(n<sup>2</sup>/(log n/ log log n)<sup>2/3</sup>) time and a randomized one running in O(n<sup>2</sup> (log log n)<sup>2</sup>/ log n) time with high probability. Our results lead directly to improved bounds for k-variate linear degeneracy testing for all odd k ≥ 3. The problem is to decide, given a linear function f(x<sub>1</sub>, ... , x<sub>k</sub>) = α<sub>0</sub> + Σ<sub>1≤1≤k</sub> α<sub>i</sub>x<sub>i</sub> and a set A ⊂ ℝ, whether 0 ∈ f(A<sup>k</sup>). We show the decision tree complexity of this problem is O(n<sup>k/2</sup> √log n). Finally, we give a subcubic algorithm for a generalization of the (min, +)-product over real-valued matrices and apply it to the problem of finding zero-weight triangles in weighted graphs. We give a depth-O(n<sup>5/2</sup> √log n) decision tree for this problem, as well as an algorithm running in time O(n<sup>3</sup>(log log n)2/ log n).