Given the n complex coecients of a degree ni 1 complex polynomial, we wish to evaluate the polynomial at a large number m n of points on the complex plane. This problem is required by many algebraic computations and so is considered in most basic algorithm texts (e.g., (A. V. Aho, J. E. Hopcroft, and J. D. Ullman, The Design and Analysis of Computer Algorithms, Addison-Wesley, 1974)). We assume an arithmetic model of computation, where on each step we can execute an arithmetic operation, which is computed exactly. All previous exact algorithms (C. M. Fiduccia, Proceedings 4th Annual ACM Symposium on Theory of Computing, 1972, pp. 88{93; H. T. Kung, Fast Evaluation and Interpolation, Carnegie-Mellon, 1973; A. B. Borodin and I. Munro, The Computational Complexity of Algebraic and Numerical Problems, American Elsevier, 1975; V. Pan, A. Sadikou, E. Landowne, and O. Tiga, Comput. Math. Appl., 25 (1993), pp. 25{30) cost at least work â€º(log 2 n) per point, and previously, there were no known approximation algorithms for complex polynomial evaluation within the unit circle with work bounds better than the fastest known exact algorithms. There are known approximation algorithms (V. Rokhlin, J. Complexity, 4 (1988), pp. 12{32; V. Y. Pan, J. H. Reif, and S. R. Tate, in Proceedings 32nd Annual IEEE Symposium on Foundations of Computer Science, 1992, pp. 703{713) for polynomial evaluation at real points, but these do not extend to evaluation at general points on the complex plane. We provide approximation algorithms for complex polynomial evaluation that cost, in many cases, near constant amortized work per point. Let k = log(jPj=), where jPj is the sum of the moduli of the coecients of the input polynomial P (z). Let ~ P (zj) be an -approx of P (z )i f upper bounds the modulus of the error of the approximation ~ P (zj) at each evaluation point zj, that is, jP (zj)i ~