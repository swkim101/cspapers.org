Since the emergence of block-based visual programming languages as a new take on programming environments, they have served as a successful entry point into programming for novice learners. Over time, they have been developed and improved to become increasingly accessible, intuitive, and easy to use. In the course of this evolution, both uncommon and entirely new language concepts have been introduced, such as the cloning of objects, or nesting of sprites. However, the question of how to teach them has yet to be answered: the mostly visual representation of program flow, output and code, and the way a user interacts with these aspects can make traditional teaching practices inadequate. Instead, block-based languages require new practices, methods, and strategies, which will be developed in this research project. To this end, new concepts must be evaluated with regards to their strengths, weaknesses, and applications. Following this step, strategies with which to teach these concepts can be developed. Therefore, this poster presents the initial findings of a research project concerned with the theory of teaching block-based programming. In this preliminary study, we have identified new concepts found in Scratch, Snap! and GP, members of the most common block-based language family. In the next phase of the project, strategies for teaching these new concepts will be developed and assessed.