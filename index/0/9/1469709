F is a typedλ-calculus with subtyping and bounded polymorphism. Typechecking for F is known to be undecidable, because the subtyping relation on types is undecidable. F μ is an extension of F with recursive types. In this paper, we show how symbolic labelled transition system techniques from concurrency theory can be used to reason about subtyping for F μ . We provide a symbolic labelled transition system for F μ types, together with an an appropriate notion of simulation, which coincides with the existing coinductive definition of subtyping. We then provide a ‘simulation up to’ technique for proving subtyping, for which there is a simple model checking algorithm. The algorithm is more powerful than the usual one for F , for example it terminates on Ghelli’s canonical example of nontermination.