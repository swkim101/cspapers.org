This paper proposes a particular style of executable specifications as a method for rapid prototyping. Using a general state-transition framework, system behavior is specified by pattern-oriented rules containing pre- and post-conditions for each transition. The specification method is introduced by two small examples in which a finite-state machine and database are modeled. The main example is an executable model of a backtracking Prolog interpreter, which is specified using five transition rules adapted from the formal-semantic literature. All models in the paper are executable and written in Prolog; minimal familiarity with Prolog is assumed.