In this paper we consider the problem of finding the approximate nearest neighbor when the data set points are the substrings of a given text <i>T</i>. Specifically, for a string <i>T</i> of length <i>n</i>, we present a data structure which does the following: given a pattern <i>P</i>, if there is a substring of <i>T</i> within the distance <i>R</i> from <i>P</i>, it reports a (possibly different) substring of <i>T</i> within distance <i>cR</i> from <i>P</i>. The length of the pattern <i>P</i>, denoted by <i>m</i>, is <i>not</i> known in advance. For the case where the distances are measured using the Hamming distance, we present a data structure which uses <i>Õ</i>(<i>n</i><sup>1+1/<i>c</i></sup>) space<sup>1</sup> and with <i>Õ</i>(<i>n</i><sup>1/<i>c</i></sup> + <i>mn</i><sup><i>o</i>(1)</sup>) query time. This essentially matches the earlier bounds of [Ind98], which assumed that the pattern length <i>m</i> is <i>fixed in advance</i>. In addition, our data structure can be constructed in time <i>Õ</i>(<i>n</i><sup>1+1/<i>c</i></sup> + <i>n</i><sup>1+<i>o</i>(1)</sup><i>M</i><sup>1/3</sup>), where <i>M</i> is an upper bound for <i>m</i>. This essentially matches the preprocessing bound of [Ind98] as long as the term <i>Õ</i>(<i>n</i><sup>1+1/<i>c</i></sup>) dominates the running time, which is the case when, e.g., <i>c</i> < 3.We also extend our results to the case where the distances are measured according to the <i>l</i><inf>1</inf> distance. The query time and the space bound are essentially the same, while the preprocessing time becomes <i>Õ</i>(<i>n</i><sup>1+1/<i>c</i></sup> + <i>n</i><sup>1+<i>o</i>(1)</sup><i>M</i><sup>2/3</sup>).