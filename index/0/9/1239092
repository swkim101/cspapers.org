We present new approximation algorithms for the problem of scheduling precedence-constrained jobs on parallel machines that are uniformly related. That is, there are n jobs and m machines; each job j requires p{sub j} units of processing, and is to be processed on one machine without interruption; if it is assigned to machine i, which runs at a given speed s{sub i}, it takes p{sub j}/s{sub i} time units. There also is a partial order {prec} on the jobs, where j {prec} k implies that job k may not start processing until job j has been completed. We shall consider two objective functions: C{sub max} = max{sub j} C{sub j}, where C{sub j} denotes the completion time of job j, and {Sigma}{sub j} {omega}{sub j}C{sub j}, where w{sub j} is a weight that is given for each job j. For the first objective, the best previously known result is an O({radical})m-approximation algorithm, which was shown by Jaffe more than 15 years ago. We shall give an O(log m)- approximation algorithm. We shall also show how to extend this result to obtain an O(log m)-approximation algorithm for the second objective, albeit with a somewhat larger constant. These results also extend tomore » settings in which each job j has a release date r{sub j} before which the job may not begin processing. In addition, we obtain stronger performance guarantees if there are a limited number of distinct speeds. Our results are based on a new linear programming-based technique for estimating the speed at which each job should be run, and a variant of the list scheduling algorithm of Graham that can exploit this additional information.« less