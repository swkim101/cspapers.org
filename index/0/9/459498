We compare the performance of shared-memory and message-passing versions of the ZEUS algorithm for astrophysical fluid dynamics on a 64-processor HP/Convex Exemplar SPP-2000. Single-processor optimization is guided by timing several versions of simple loops whose structure typifies the main performance bottlenecks. Overhead is minimized in the message-passing implementation through the use of non-blocking communication operations. Our benchmark results agree reasonably well with the predictions of a simple performance model. The message-passing version of ZEUS scales better than the shared-memory one primarily because, under shared-memory, (unless data-layout directives are utilized) the domain decomposition is effectively one-dimensional.