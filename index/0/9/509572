Software engineers use graphs to represent many types of information. This paper describes a tool which is used to rapidly extend base classes to create graph editors as a user-interface to these information domains. This paper also presents requirements for extensible graph editors. These requirements establish a basis of comparison for extensible graph editors. An object-oriented programming language and an object-oriented user interface toolkit provide a great degree of flexibility for creating graph editors. Users create instances of a graph editor by specifying global and local functionality. Global functionality takes the form of graph layout algorithms, user interaction, and interaction with other tools. Local functionality is the description of the meaning and pictorial representation of nodes and arcs. As such, this paper describes a number of example graph editors that have been developed with these mechanisms which satisfy the requirements.