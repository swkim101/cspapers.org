Exact and efficient data dependence testing is a key to success of loop-parallelizing compiler for computationally intensive programs. A number of algorithms has been created to test array references contained in parameter loops for dependence but most of them are unable to answer the following question correctly: Are references <italic>C</italic>(<italic>i</italic><subscrpt>1</subscrpt> + 10<italic>j</italic><subscrpt>1</subscrpt>) and <italic>C</italic>(<italic>i</italic><subscrpt>2</subscrpt> + 5), 0 ≤ <italic>i</italic><subscrpt>1</subscrpt>, <italic>i</italic><subscrpt>2</subscrpt> ≤ 4, 0 ≤ <italic>j</italic><subscrpt>1</subscrpt>,<italic>j</italic><subscrpt>2</subscrpt> ≤ 9 independent? The technique introduced in this paper recognizes that  <italic>i</italic><subscrpt>1</subscrpt>, <italic>i</italic><subscrpt>2</subscrpt> and <italic>j</italic><subscrpt>1</subscrpt>, <italic>j</italic><subscrpt>2</subscrpt> make different order contributions to the subscript index, and breaks dependence equation <italic>i</italic><subscrpt>1</subscrpt> + 10<italic>j</italic><subscrpt>1</subscrpt> = <italic>i</italic><subscrpt>2</subscrpt> + 10<italic>j</italic><subscrpt>2</subscrpt> + 5 into two equations <italic>i</italic><subscrpt>1</subscrpt> = <italic>i</italic><subscrpt>2</subscrpt> and 10<italic>j</italic><subscrpt>1</subscrpt> = 10<italic>j</italic><subscrpt>2</subscrpt> which then can be solved independently. Since resulting equations contain less variables it is less expensive to solve them. We call this technique  <italic>delinearization</italic> because it is reverse of the <italic>linearization</italic> much discussed in the literature.
In the introduction we demonstrate that linearized references are used not infrequently in scientific FORTRAN and C codes. Then we present a theorem on which delinearization algorithm is based and the algorithm itself. The algorithm is fairly simple and inexpensive. As a byproduct it tests equations it produces for independence as exactly as it is done by GCD-test and Banerjee inequalities combined. The algorithm has been implemented at Moscow State University in a vectorizer named VIC.