We describe a quantum mechanical heat engine. Like its classical counterpart introduced by Carnot, this entine carries out a reversible process in which an input of energy to the system results in a separation of cold and hot regions. The method begins with a reinterpretation in thermodynamic terms of a simple step introduced by van Neumann to extract fair coin flips from sequences of biased coin flips. Some of the experimental set-ups proposed for implementation of quantum computers, begin with the quantum bits of the computer initially in a mixed state. Each qubit is L polarized in the state IO) with probability 9, and in the state 11) with probability *, independently (or nearly so) of all other bits. The heat engine may be used to trans. form this initial collection of n qubits into a state in which a near-optimal m = n[ FIg(l +e) + %Ig(l -c) -o(l)] qubits are in the joint state IO”‘). These qubits can then be used as the register for a quantum computation. The heat engine is described at the level of an algorithm implementable in any quantum system capable of massive coherent states. A particular implementation is also described for a system of nuclear spins arranged in a chain. The temperature the cold qubits reach is inverse polynomial in n. Introduction A sequence of results over the last decade [11, 1, 24, 231 has provided the first credible challenge to the Extended (complexity theoretic) Church-Turing thesis. At issue is the ability of computers based on quantum physics to perform certain computations (such as factorization [23]) exponentially faster than classical computers. However, realizing quantum computation in the laboratory has proved to be a formidable challenge since it requires the isolation of the computer from the effects of environmentally induced decoherence, while being able to operate upon its state to perform elementary operations. In this paper, we concentrate on one aspect of this problem namely the initialization of the state of the quantum computer. The task here is that in some experimental set-ups, the quantum bits in the computer are initially in a mixed state (where each qubit is L polarized in the state IO) with probability F, and II) with probability *), independently of all other bits’, whereas we would like the bits to be in the joint state IO”). Since quantum mechanics is time reversible, any initialization algorithm is necessarily constrained to extract at most (1 H(r))n purfied bits, where H(z) = F lg & + * lg & i.e. the optimal performance is extraction of the state IO(‘-H(‘)1”). The challenge is to extract as close as possible to this number of purified bits, without access to any scratch bits, as efficiently as possible, and using only very simple elementary device operations. In this paper, we give n procedure that extracts the asymptotically optimal fraction of purified bits. We give a quasi-linear time implementation of our procedure in a model motivated by NMR quantum computing. Recently, small scale quantum computation (on two to three qubits) (see e.g. [4, 9, 51) has been successfully demonstrated in the laboratory, using conventional NMR systems. The qubits in question are the nuclear spins associated with the atoms of a molecule. A major difficulty is that conventional NMR systems operate upon a macroscopic sample, rather than a single molecule. At room temperature, and in thermal equilibrium, such a sample must be regarded as constituting a statistical mixture of pure states (rather than the state IO”) in which we would like to start the computation). A major breakthrough in the use of NMR techniques in quaturn computation came about in [15, 81, where a scheme was given for embedding a small dimensional ‘virtual’ pure state within the density matrix describing the bulk sample, by exploiting the structure present in thermal equilibrium. (Some of the experimental results cited are based on this scheme.) Although this approach provides a very important proof of concept demonstration for quantum computation, it does not scale the strength of signal output by the NMR quantum computer degrades exponentially in the number of quantum bits n in the system. Thus the exponential speedup promised by quantum computation is offset by an exponential increase in the effort required to detect the out-