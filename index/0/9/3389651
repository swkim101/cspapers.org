This study examines the results of establishing a rubric for design in freshmen computer science courses. The rubric consists of six categories (Understanding the Problem, Relationship Among Parts, Logic, Diagrams, Code Present, Testing) on a binary scale indicating if the category was included or not. The analysis examines four terms of data, one course per term, where students are required to submit a program design a week before they submit their assignment code. The terms differ in population (traditional and non-traditional), content (CS 1 and CS 2) and the level of design guidance (increased guidance/details in the syllabus). Each qualitative design was evaluated using the same rubric to facilitate comparisons between different courses, correlation to assignment grades and overall course grades, there were notable differences between what the populations included in their designs and how frequently the populations included the various categories of the rubric over time. In particular, non-traditional students tend to include more diagrams, logic and relationship among parts than traditional students, and in a CS 1 class without object oriented programming (OOP) versus a CS 2 class with OOP, CS 2 students tend to provide a more global picture of the program than specific details outlined in CS 1 designs, which lacked a big-picture perspective. These insights allow us to better understand how students from varying populations and different course content approach problem solving and design in computer science differently.