1 MOTIVATION Building applications on top of application frameworks can be a painful job. Even if a framework promises higher reuse and better application design, the engineering often has to be done at source-code level using a simple development environment. We had this experience using our JWAM framework (see [3]), a Javabased application framework for large-scale software development using the Tools & Materials approach (see [1]). The JWAM framework consists of a number of black-box and white-box (see [2]) sub-frameworks. Our experiences with these models suggest that they are not efficient enough. Often the application developer uses a normal development environment that is not especially designed to support exactly this framework. At first glance, this seems like a fine idea: The development environment should be independent of the used application framework and the application framework should be independent of the used development environment. This promises a high reusability and gives the developer as much freedom of choice as possible. But in practice, the lack of framework-specific support inside the development environment is obvious and painful. From the beginning of the development process to the end the developer has to work on the level of classes, interfaces, methods and other elements of the blackand/or white-box frameworks and the programming language.