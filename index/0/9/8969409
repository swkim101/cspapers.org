We consider the problem of discovering the structure of an unknown hierarchical network by means of measuring the maximum flow between the root and selected subsets of leaf nodes. More precisely, we are given a root node and a set of n leaf nodes, each identified by a unique label. The leaf nodes are the leaves of a capacitated hierarchical network. We do not have any additional information about the structure of the network, including the degrees of any internal nodes, the edge capacities, or which leaf nodes are in the same subtree. Our goal is to infer the structure of the network (up to certain equivalences discussed below) by using only a simple test operation, in which we "switch on" a selected subset of the leaf nodes, causing these nodes to transmit data to the root at maximum speed, and then measure the total rate of data arriving at the root. We will refer to this operation as a flow test. In this note, we derive upper and lower bounds for the number of flow tests required to determine the structure of a tree network. This result is not only of Discrete Math interest, but also of importance in hands-on systems engineering: (1) inferring disk structure in parallel databases, (2) inferring congestion in IP networks, and (3) inferring network structure in hierarchical bus architectures [5]. Due to space constraints, we motivate the description using (1) only. The problem we consider arises in shared-disk parallel database systems (see, e.g., [2]). In this scenario, we are given a set of processors and a number of storage devices that are connected to the processors by a hierarchical system of buses consisting, e.g., of different levels of SCSI buses plus a system I/O-bus at the highest level. In order to efficiently schedule large parallel accesses to the data (e.g., scans in OLAP workloads), it is advantageous for the database system to know the structure of the bus system, so that any bottlenecks in the I /O architecture can be avoided by appropriate placement and scheduling decisions. However, there is currently no general way to inquire the complete structure of a multi-level hierarchy from the operating system. One