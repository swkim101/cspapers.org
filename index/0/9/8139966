We show how to search <i>N</i> items arranged on a √<i>N</i> × √<i>N</i> grid in time <i>O</i>(√<i>N</i> log <i>N</i>), using a discrete time quantum walk. This result for the first time exhibits a significant difference between discrete time and continuous time walks without coin degrees of freedom. since it has been shown recently that such a continuous time walk needs time Ω(<i>N</i>) to perform the same task. Our result improves on a previous bound for quantum local search by Aaronson and Ambainis. We generalize our result to 3 and more dimensions where the walk yields the optimal performance of <i>O</i>(√N) and give several extensions of quantum walk search algorithms and generic expressions for its performance for general graphs. The coin-flip operation needs to be chosen judiciously: we show that another "natural" choice of coin gives a walk that takes Ω(<i>N</i>) steps. We also show that in 2 dimensions it is sufficient to have a two-dimensional coin-space to achieve the time <i>O</i>(√<i>N</i> log <i>N</i>).