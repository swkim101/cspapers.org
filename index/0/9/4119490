Suneel Jain MIPS Computer Systems, Inc. 928 Arques Avenue Sunnyvale, CA 94086 email: suneel@nlips.com With the advent of cleeply pipelined RISC processors, static instruction scheduling by the compiler has become extremely important to obtain high processor performance. This is especially true for floating point code, since in general floating point operations have longer Mencies compared to integer operations. This paper suggests using a new algorithm called circular scheduling, to perform software pipelining. .Software pipelining has previously been investigated mostly for VLIW architectures. The algorithm clescribecl in this paper is shown to be quite effective for a scalar architecture. Register renaming, an idea that originates from dynamic instruction scheduling, is used in conjunction with this algorithm to augment its performance. The techniques described here have been implemented as part of a commercial, production quality optimizing compiler for a RISC architecture. ‘rhc resulting performance improvement has verifiecl the feasibility and practicality of the techniques. Permission to copy without fee all or part of this material ia granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear. and notice is given that copying is by permiaaion of the Association for Computing Machinery. To COPY otherwisa, or to republish, requires a fee andkw spacific permission. e 1991 ACM 0-89791-428-7191/00051021 9...$1.50 Proceedings of the ACM SIGPLAN ‘91 Conference on Programming Language Design and Implementation. Toronto, Ontario, Canada, June 26-28, 1991.