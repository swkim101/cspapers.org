When debugging an SDN application, diagnosing the problem is merely the ﬁrst step: the operator must still ﬁnd a ﬁx that solves the problem, without causing new problems elsewhere. However, most existing debuggers focus exclusively on diagnosis and offer the network operator little or no help with ﬁnding an effective ﬁx. Finding a suitable ﬁx is difﬁcult because the number of candidates can be enormous. In this paper, we propose a step towards automated repair for SDN applications. Our approach consists of two elements. The ﬁrst is a data structure that we call meta provenance , which can be used to efﬁciently ﬁnd good candidate repairs. Meta provenance is inspired by the provenance concept from the database community; however, whereas standard provenance can only reason about changes to data , meta provenance can also reason about changes to programs . The second element is a sys-tem that can efﬁciently backtest a set of candidate repairs using historical data from the network. This is used to eliminate candidate repairs that do not work well, or that cause other problems. We have implemented a system that maintains meta provenance for SDNs, as well as a prototype debugger that uses the meta provenance to automatically suggest repairs. Results from several case studies show that, for problems of moderate complexity, our debugger can ﬁnd high-quality repairs within one minute.