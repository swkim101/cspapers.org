Computationally efficient motion planning must avoid exhaustive exploration of configuration space. We argue that this can be accomplished most effectively by carefully balancing exploration and exploitation. Exploration seeks to understand configuration space, irrespective of the planning problem, while exploitation acts to solve the problem given the available information obtained by exploration. We present an exploring/exploiting tree (EET) planner that balances its exploration and exploitation behavior. The planner acquires workspace information and subsequently uses this information for exploitation in configuration space. If exploitation fails in difficult regions, the planner gradually shifts its behavior towards exploration. We present experimental results demonstrating that adaptive balancing of exploration and exploitation leads to significant performance improvements compared to other state-of-the-art sampling-based planners.