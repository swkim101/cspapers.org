We study the running time of a particular path-vector protocol for distributively and asynchronously computing shortest paths in a network to a given target node t. We study two cases. In both, the protocol starts with each node possibly knowing some path to t, subject to conditions discussed in the paper. In the first case, the "withdrawal case," all edges incident to the target are cut. We prove that in this case, the protocol always terminates but may need exponential time to do so, if the nodes "fire" (i.e., execute) in an adversarially chosen order, even if the initial paths are shortest. If the graph is a clique, the protocol terminates in polynomial time. If, on the other hand, the nodes fire in random order, and the graph is arbitrary, then the algorithm terminates in polynomial expected time. In the second case, the "announcement case," in which new edges incident to t appear, we prove that the protocol terminates in polynomial time, regardless of the firing order.This protocol is interesting since it models the shortest-path protocol used by BGP, the interdomain routing protocol of the Internet, in the absence of policy.