Content Delivery Networks (CDNs) cache and serve a majority of the user-requested content on the Internet, including web pages, videos, and software downloads. We propose two TTL-based caching algorithms that automatically adapt to the heterogeneity, burstiness, and non-stationary nature of real-world content requests. The first algorithm called d-TTL dynamically adapts a TTL parameter using a stochastic approximation approach and achieves a given feasible target hit rate. The second algorithm called f-TTL uses two caches, each with its own TTL. The lower-level cache adaptively filters out non-stationary content, while the higher-level cache stores frequently-accessed stationary content. We implement d-TTL and f-TTL and evaluate both algorithms using an extensive nine-day trace consisting of more than 500 million requests from a production CDN server. We show that both d-TTL and f-TTL converge to their hit rate targets with an error of about 1.3%. We also show that f-TTL requires a significantly smaller cache size than d-TTL to achieve the same hit rate, since it effectively filters out rarely-accessed content.