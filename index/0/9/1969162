Abstract BEE++ is an object-oriented application framework for the dynamic analysis of distributed programs. The main objective of BEE++ is to provide a common platform for monitoring and debugging. BEE++’s class library consists of a rich set of classes for event processing to support a variety of visualization, monitoring and debugging needs. It also provides for customizability of event processing through inheritance. Users can derive customized graphi-cal debugging and visualization systems from a set of base classes. BEE++’s other design goals are the support of dynamic program analysis for distributed heterogenous target applications at runtime with predictable overhead. The design is based on a symmetric peer-to-peer architec-ture, including the ability to dynamically conﬁgure target applications and monitoring tools. The dynamic analysis tools can be distributed across nodes, which provides sig-niﬁcant performance gains for visualization applications. In addition, the framework can be instantiated for a variety of communication protocols.A TCP/IP based instance of the framework has been ported to several machine archi-tectures including Sun, Vax and Cray-YMP. BEE++ is based on BEE[10], a portable platform for monitoring implemented in C but has been completely reengineered in C++ using the object-oriented design methodology OMT. Performance measurements indicate that the runtime over-head of the object-oriented version is not signiﬁcant when compared with the C version.