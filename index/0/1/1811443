Much interest is being shown in reducing program development costs and increasing program reliability. The large number of potential applications which are still not computerized attests to user dissatisfaction with the high cost of developing and maintaining software. These unimplemented applications form a backlog which is slowing the growth of computerization. (A recent survey showed that many mature user installations are facing a three-year applications backlog.) These problems beg for a solution.
 This paper briefly describes the most popular short-term solution for these problems: the so-called IBM programming productivity techniques. These techniques include the Chief Programmer Team approach to programming project organization, top-down development, structured coding and interactive programming.
 Next, the paper describes several independent attempts to measure the effectiveness of these programmer productivity techniques in reducing costs and increasing reliability. Difficulties encountered in these attempts are discussed, and the quantitative results of these 'experiments are interpreted. Then an expected improvement factor is established for use in estimating the cost impact of adopting these techniques.
 Finally, the long-term role of these techniques in reducing the applications backlog is projected.