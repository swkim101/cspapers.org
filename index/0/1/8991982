The chip heat dissipations defeat the clock speed increment. Multi-core clusters and the heterogeneous platforms including accelerators become a main trend recently. Parallel programming paradigms surfs on these diverse platforms: CUDA C, CUDA Fortran, OpenCL, OpenACC, OpenMP, MPI, pthread, MapReduce, and so on. The quantitative performance indexes help get a good picture of parallel programming paradigms for the applications. This study employ two examples: Pennes bioheat equations to simulating local hyperthermia destroying tumor cells and Navier-Stokes equations to simulating driven cavity flow at high Reynolds numbers via parallel programming paradigms: CUDA C, CUDA Fortran, OpenMP and MPI. Parallel programming in MPI for Pennes bioheat equations shows super-linear speedup on NCHC (National Center for High-performance Computing) ALPS and significantly faster than the original author, whereas Parallel programming in CUDA C framework for Navier-Stokes equations achieves around 24 times speedup on a NVIDIA C1060 GPU. We hope these results to support useful suggestions.