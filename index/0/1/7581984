This paper describes an approach towards the definition and implementation of a synchronization service on top of a remote object model offered by an unicast real-time remote object paradigm. Also an architecture model based on the RTSJ (real-time specification for Java) and the distribution middleware RMI (remote method invocation) specifications is proposed in order to give support to the model, defining a convergence layer that manages the underlying resources involved in a master-slave communication through a new API. Finally, preliminary results from an implementation prototype show the feasibility of the model and provide an initial estimation of jitters and the performance of the synchronization service