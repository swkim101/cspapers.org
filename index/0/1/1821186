We design a randomized polynomial time algorithm which, given a 3-tensor of real numbers A={a<sub>ijk</sub>}<sub>ij,k=1</sub> <sup>n</sup> such that for all i,j,kisin{1,...,n} we have a<sub>ijk</sub>=a<sub>ikj</sub>=a<sub>kji</sub>=a<sub>jik</sub>=a<sub>kij</sub>=a<sub>kji</sub> and a<sub>iik</sub>=a<sub>ijj</sub>=a<sub>iji</sub>=0, computes a number Alg(A) which satisfies with probability at least 1/2, Omega(radic(logn/n))ldrmax<sub>xisin{-1,1}</sub> <sup>n</sup> Sigma<sub>i,j,k=1</sub> <sup>n</sup>a<sub>ijk</sub>x<sub>i</sub>x<sub>j</sub>x<sub>k</sub>lesAlg(A)lesmax<sub>xisin{-1,1}</sub> <sup>n</sup> Sigma<sub>i,j,k=1</sub> <sup>n</sup>a<sub>ijk</sub>x<sub>i</sub>x<sub>j</sub>x<sub>k</sub>. On the other hand, we show via a simple reduction from a result of Hastad and Venkatesh that under the assumption NPnsubeDTIME(n<sup>(logn)</sup> <sup>O(1)</sup>),for every epsiv>0 there is no algorithm that approximates max<sub>xisin{-1,1}</sub> <sup>n</sup> Sigma<sub>i,j,k=1</sub> <sup>n</sup>a<sub>ijk</sub>x<sub>i</sub>x<sub>j</sub>x<sub>k</sub> within a factor of 2(logn)<sup>t-epsiv</sup> in time 2<sup>(logn)</sup> <sup>O(1)</sup>. Our algorithm is based on a reduction to the problem of computing the diameter of a convex body in R<sup>n</sup> with respect to the L<sub>1</sub> norm. We show that it is possible to do so up to a multiplicative error of O(radic(n/logn)), while no randomized polynomial time algorithm can achieve accuracy O(radic(n/logn)). This resolves a question posed by Brieden, Gritzmann, Kantian, Klee, Lovasz and Simonos. We apply our new algorithm improve the algorithm of Hastad and Venkatesh or the Max-E3-Lin-2 problem. Given an over-determined system epsiv of N linear equations modulo 2 in nlesN Boolean variables, such that in each equation appear only three distinct variables, the goal is to approximate in polynomial time the maximum number of satisfiable equations in epsiv minus N/2 (i.e. we subtract the expected number of satisfied equations in a random assignment). Hastad and Venkatesh obtained an algorithm which approximates this value up to a factor of O(radicN). We obtain a O(radic(n/logn)) approximation algorithm. By relating this problem to the refutation problem for random 3-CNF formulas we give evidence that obtaining a significant improvement over this approximation factor is likely to be difficult.