Enterprise JavaBeans (EJB) technology has become a staple in distributed object and component architectures. However, like most technologies, EJB provides technology tradeoffs that must be weighted by the architect contemplating its use. Furthermore, like most technologies, EJB cannot save a poor system design.
Design issues surrounding an enterprise system, in particular design issues of an EJB system, can be addressed at two levels. EJB design at the “macro” level is concerned with system architectural issues such as determining whether EJB technology is right for a project, how to model EJBs, and how to select an appropriate EJB server. EJB design from a “micro” level perspective concentrates on the use and organization of the various EJB types in an application. These “micro” issues include: when and where to use entity versus session beans, the granularity (fine or coarse) of EJBs, and the impact of the underlying database on bean design.