Given a sequence of <i>k</i> polygons in the plane, a start point <i>s</i>, and a target point, <i>t</i>, we seek a shortest path that starts at <i>s</i>, visits in order each of the polygons, and ends at <i>t</i>. If the polygons are disjoint and convex, we give an algorithm running in time <i>O(kn log (n/k))</i>, where <i>n</i> is the total number of vertices specifying the polygons. We also extend our results to a case in which the convex polygons are arbitrarily intersecting and the subpath between any two consecutive polygons is constrained to lie within a simply connected region; the algorithm uses <i>O(nk<sup>2</sup> log n)</i> time. Our methods are simple and allow shortest path queries from <i>s</i> to a query point <i>t</i> to be answered in time <i>O(k log n + m)</i>, where <i>m</i> is the combinatorial path length. We show that for nonconvex polygons this "touring polygons" problem is NP-hard.The touring polygons problem is a strict generalization of some classic problems in computational geometry, including the safari problem, the zoo-keeper problem, and the watchman route problem in a simple polygon. Our new results give an order of magnitude improvement in the running times of the safari problem and the watchman route problem: We solve the safari problem in <i>O(n<sup>2</sup> log n)</i> time and the watchman route problem (through a fixed point <i>s</i>) in time <i>O(n<sup>3</sup> log n)</i>, compared with the previous time bounds of <i>O(n<sup>3</sup>)</i> and <i>O(n<sup>4</sup>)</i>, respectively.