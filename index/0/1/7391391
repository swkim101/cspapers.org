We give a polynomial time algorithm that given a graph which admits a bisection cutting a fraction (1 − e) of edges, finds a bisection cutting a (1 − g(e)) fraction of edges where g(e) → 0 as e→ 0. One can take g(e) = O( 3 √ e log(1/e)). Previously known algorithms for Max Bisection could only guarantee finding a bisection that cuts a fraction of edges bounded away from 1 (in fact less than 3/4) in such graphs. The known Unique-Games hardness results for Max Cut imply that one cannot achieve g(e) 6 C √ e for some absolute constant C. Likewise, for the Min Bisection problem, if the graph has a bisection cutting at most e-fraction of the edges, our methods enable finding a bisection cutting at most O( 3 √ e log(1/e))-fraction of the edges. The algorithms can also find cuts that are nearly-balanced (say with imbalance of at most 0.01) with value at least 1 − O( √ e) (for Max Bisection) and at most O( √ e) (for Min Bisection). These guarantees are optimal up to constant factors in the O( √ e) term under the Unique Games and related conjectures. Our general approach is simple to describe: First, we show how to solve the problems if the graph is an expander or if the graph consists of many disjoint components, each of small measure. Then, we show that every graph can be decomposed into disjoint components that are either expanders or have small measure, and how the cuts on different pieces may be merged appropriately.