In this paper, we propose a methodology for schema integration where the semantics of updates is preserved during the view integration process. We propose to divide view integration into three steps: combination, restructuring, and optimization. In the view combination step, we define the combined schema that contains all original views, plus a new set of constraints that express how data in distinct views are interrelated. The restructuring step is devoted to normalizing the views so that merging becomes possible. The optimization step tries to reduce redundancy and the size of the schema. Our methodology defines a set of transformation primitives that allows schema integration to be realized in a safe (information preserving) and algorithmic way. In the proposed transformation primitives, the relationship between the original and transformed schema is formally specified by the instance and update mappings. We introduce the notion of an update semantics preserving transformation, which guarantees that the relationships between each view and the global schema, originated during the view integration process, reflect exactly the relationships between the views as defined by the combined schema. In our approach, the view definition mappings and the view update translator can be directly defined from the instance and update mappings between the different intermediate schemas generated during the view integration process.