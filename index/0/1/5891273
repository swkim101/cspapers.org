The graph-based SLAM (Simultaneous Localization and Mapping) method uses a graph to represent and solve the SLAM problem. The SLAM allows building a map of an unknown environment and simultaneously localizing the robot on this map. This paper presents a temporal analysis of the 3D graph-based SLAM method. We also propose an efficient implementation, on an OMAP embedded architecture, which is a widely used open multimedia applications platform. We provide an optimized data structure and an efficient memory access management to solve the nonlinear least squares problem related to the algorithm. The algorithm takes advantage of the Schur complement to reduce the execution time. We will present an optimized implementation of this task. We also take advantage of the multi-core architecture to parallelize the algorithm. To evaluate our implementation, we will compare the computational performances to the well known framework g2o. This work aims to demonstrate how optimizing data structure and multi-threading can decrease significantly the execution time of the graph-based SLAM on a low-cost architecture dedicated to embedded applications.