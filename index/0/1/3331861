We consider the fundamental derandomization problem of deterministically finding a satisfying assignment to a CNF formula that has many satisfying assignments. We give a deterministic algorithm which, given an n-variable \poly(n)-clause CNF formula F that has at least &#x2265; 2^n satisfying assignments, runs in time \[ n^{\tilde{O}(\log\log n)^2} \] for &#x2265; \ge 1/\polylog(n) and outputs a satisfying assignment of F. Prior to our work the fastest known algorithm for this problem was simply to enumerate over all seeds of a pseudorandom generator for CNFs; using the best known PRGs for CNFs \cite{DETT10, this takes time n^{\tilde{&#x03A9;}(\log n)} even for constant &#x2265;. Our approach is based on a new general framework relating deterministic search and deterministic approximate counting, which we believe may find further applications.