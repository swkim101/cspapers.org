A striking example of practical tradeoffs between storage space and execution time is provided by the IBM 1401 Fortran compiler.
 On another level, there is an interesting relation between the time and storage required to recognize context free languages. The recognition algorithm in [Y] requires time no more than 0(n<supscrpt>3</supscrpt>), but requires at least linear storage, whereas the algorithm in [LI requires recognition space no more than 0((log n)<supscrpt>2</supscrpt>) and requires more than polynomial time. An intriguing question is whether (log n)<supscrpt>2</supscrpt> space is enough to recognize all languages recognizable in deterministic polynomial time.
 The above question has been narrowed down in [C] to the storage required to recognize a particular language called SP.
 This paper presents further evidence in support of the conjecture that SP cannot be recognized using storage (log n)<supscrpt>k</supscrpt> for any k. In section 2 we consider a game on directed acyclic graphs (dags) and show that at least 0(n<supscrpt>1/4</supscrpt>) markers are needed to play the game on some n node dags. The 0(n<supscrpt>1/4</supscrpt>) bound is used in section 3 to show that a fairly general machine to recognize SP also requires 0(n<supscrpt>1/4</supscrpt>) storage.