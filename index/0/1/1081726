Recovery activities, like logging, checkpointing and restart, are used to restore a database to a consistent state after a system crash has occurred. Recovery related overhead is particularly troublesome in a mainmemory database where I/O activities are performed for the sole purpose of ensuring data durability. In this paper we present a recovery technique for main-memory databases, whose benefits are as follows. First, disk I/O is reduced by logging to disk only redo records during normal execution. The undo log is normally resident only in main memory, and is garbage collected after transaction commit. Second, our technique reduces lock contention on account of the checkpointer by allowing action consistent checkpointing to do so, the checkpointer writes to disk relevant parts of the undo log. Third, the recovery algorithm makes only a single pass over the log. Fourth, our technique does not require the availability of any special hardware such as non-volatile RAM. Thus our recovery technique combines the benefits of several techniques proposed in the past. The ideas behind our technique can be used to advantage in disk-resident databases aa well. Permission Lo copy without fee all or part of this material is granted provided that the copies are not made or distriluled for dinxt commercial advantage, the VLDB copyright notice and the We of Ihe pullicaGon and its date appear, and notice is given Ihal copying ir by permission of the Very Large Data Base Endowmenk To copy otherwise, or lo republish, requires a fee and/or special permission jkrn Ihe Endowmrrlt. Proceedings of the 19th VLDB Conference Dublin, Ireland, 1993