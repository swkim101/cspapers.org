We consider the all-or-nothing multicommodity flow problem in general graphs. We are given a capacitated undirected graph <i>G</i>=(<i>V,E,u</i>) and set of <i>k</i> pairs <i>s</i><inf>1</inf> <i>t</i><inf>1</inf>, <i>s</i><inf>2</inf><i>t</i><inf>2</inf>, …, <i>s<inf>k</inf>t<inf>k</inf></i>. Each pair has a unit demand. The objective is to find a largest subset <i>S</i> of 1,2,…,<i>k</i> such that for every <i>i</i> in <i>S</i> we can send a flow of one unit between <i>s<inf>i</inf></i> and <i>t<inf>i</inf></i>. Note that this differs from the <i>edge-disjoint path</i> problem (<sc>EDP</sc>) in that we do not insist on integral flows for the pairs. This problem is NP-hard, and APX-hard, even on trees. For trees, a 2--approximation is known for the cardinality case and a 4--approximation for the weighted case. In this paper we build on a recent result of Räcke on low congestion oblivious routing in undirected graphs to obtain a poly-logarithmic approximation for the all-or-nothing problem in <i>general</i> undirected graphs. The best previous known approximation for all-or-nothing flow problem was <i>O</i>(min(<i>n</i><<sup>2/3</sup>, √<i>m</i>)), the same as that for <sc>EDP</sc>. Our algorithm extends to the case where each pair <i>s<inf>i</inf>t<inf>i</inf></i> has a demand <i>d<sup>i</sup></i> associated with it and we need to completely route <i>d<sup>i</sup></i> to get credit for pair <i>i</i>. We also consider the <i>online admission control</i> version where pairs arrive online and the algorithm has to decide immediately on its arrival whether to accept it or not. We obtain a randomized algorithm with a competitive ratio that is similar to the approximation ratio for the offline algorithm.