There exist some real-time solutions for x86 personal computers. Most of them involve adding real-time extensions or modifying kernels to make operating systems be able to run real-time tasks. We provide another real-time solutions for x86 personal computers by proposing a model consisting of a non-real-time operating system for non-real-time tasks, a separated real-time operating system for running real-time tasks, and a Xen hypervisor for virtualization of the two operating systems and communication between them. We choose FreeRTOS, an open-source real-time kernel, as the real-time operating system in our model. FreeRTOS has many ports, including an IA32 port. However, the IA32 port runs on a system on a chip called Galileo, and is not able to run on x86 personal computers. In this paper, we focus on modifying the Galileo port to run on x86 personal computers, and demonstrate the execution result of our modified port to show the success. Our result can be regarded as a porting example to help the people who have no porting experience to understand the porting process on bare metal as well as virtualized platform.