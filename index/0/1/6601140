In constraint logic programming (CLP) systems, the standard technique for dealing with hard constraints is to delay solving them until additional constraints reduce them to a simpler form. For example, the CLP (7?) system delays the solving of nonlinear equations until they become linear, when certain variables become ground. In a naive implement ation, the overhead of delaying and awakening constraints could render a CLP system impractical. In this paper, a framework is developed for the specification of wakeup degrees which indicate how far a hard constraint is from being awoken. This framework is then used to specify a runtime structure for the delaying and awakening of hard constraints. The primary implementation problem is the timely awakening of delayed constraints in the context of temporal backtracking, which requires changes to internal data structures be reversible. This problem is resolved efficiently in our struct ure, Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice end the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to rewblish, reauires a fee andlor snecific r)ermission. @“l 991 ACM O-89791 -4i8-7/$jl /0005 /0306 ...$1 .50 1 [ I Proceedings of the ACM SIGPLAN ’91 Conference cm I 1