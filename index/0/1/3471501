In parallel programming, there is a shift away from the single execution path of sequential programming to situations where non-deterministic operation force consideration of multiple paths of execution. Compared to the substantial computer science education literature on helping students to learn sequential programming, there are fewer studies of the cognitive difficulties that students follow when learning parallel programming. To address this, we created a computer game, Parallel involving concurrent situations. The game is an abstract representation of concurrency problems where players are asked to solve a progression of puzzles involving arrows moving concurrently on tracks. Play does not require coding. The goals of our research were to 1) explore how students acquire skills in the design of solutions with parallelism, and 2) explore how interactive games can substitute or compliment conventional parallel programming courses. Through two user studies of the game (n=7) where students played the game and used a talk-aloud protocol alongside a researcher, three major themes emerged, that of non-determinism where students were able to make the connection of non-deterministic behavior in parallel programming to the game, self-efficacy where students were stating they felt their knowledge of parallel programming increased after playing the game, and expertise where researchers learned that expertise was important to successful connection of the game to parallel programming concepts These findings show that students are beginning to see the connection between the game/s presentation of concurrency to programming concepts such as non-determinism.