When computers first appeared, input-output commands were minor afterthoughts to cohesive, often well crafted and occasionally pretentious programming languages. Today, these commands occupy over 70 percent of a programming system's instructions. Yet they, along with the user interface structures that they define, are far from cohesive, and, at least up until now, immune to standardization. We must therefore turn our thinking around and create a new breed of programming languages that are first and foremost input-output oriented and that integrate traditional processing commands into new user-oriented structures. And just as we know today that traditional commands fall into a handful of fixed categories - decision, repetition, naming, procedure definition and use — we need to search for and identify the corresponding natural classes of commands for user interfaces.
But even if user interfaces were ideally programmed in divine new languages, they would still be ineffective, under our current mindset. For it is an unfortunate fact that despite a great deal of hype about look and feel, today's user interfaces have not appreciably reduced the difficulty of interaction between humans and machines. How can we explain, for example, the disturbing paradox that although computing accounts for some 10 percent of the U.S. G.N.P., it has not resulted in any measurable gains in conventionally measured productivity except in very few areas, like computer aided design. In fact, among office workers, net productivity seems to have decreased during the same period that computer purchases and uses have surged.
Let us then ask what we should do in tomorrow's user interfaces to increase productivity and empower people, as the theme of this conference charges. In simpler terms, let us turn our attention on what we can do to help ordinary mortals who are trying to get a job done in spite of the well meaning efforts of hardware and software designers and managers. I, for one, believe that we can do a great deal and can improve immensely human-computer productivity.
For example, we can ensure that people do not succumb to the additive fault of doing in the computer age, all that they did before plus a whole set of new actions — this is one of the most common ways of wasting human work. We should also avoid the learning fault by trying to reduce radically the amount of new knowledge that must be learned and retained by information workers, even if the resultant power and flexibility loom seductively before us. And we should design our systems and procedures so that they do not encourage the perfection fault, i.e. working on our systems well beyond the point of diminishing returns, in the interest of perfection.
Much more can and should be done, for example by making user interfaces smarter so that they can anticipate, even small portions of our intent, instead of brutally forcing us through a litany of repetitive and dumb rituals. And we should ensure that our machines enable and enhance rather than fight human-to-human interaction and coordination, which is such an important part of our everyday productive activity.
These issues and observations raise serious questions of balance among extremes that are today either addressed indirectly or downright ignored. For example, in tomorrow's interface, will users crave for aesthetics or intelligence? Flexibility and power, or simplicity? Integration or isolation of disparate user systems? A brave new world of flat screens, 3-d CRT goggles and speech and gesture detectors, — or more effective use of blander systems? And what are we going to do to plan, measure and ensure that the vocabulary of user intent is well matched by the vocabulary of interface actions?
It is these kinds of questions that we need to address from the common-sense perspective of making computers effective and useful to ordinary people. No one is potentially better suited for doing this than the professional whose responsibility is the interface between people and machines. But to do this, we need to redefine the profession, from its current narrow confines of dealing with windows, mice and ergonomic factors to a far broader discipline that encompasses and seeks to improve everything that humans and computers do together, including purpose — in other words the total user interface of and for tomorrow.