We consider two questions related to functional part families: a) how to characterize function in a computational framework, and b) how does the structure-to-function model generalize when the design changes, e.g. by changing the set of design variables? For the first, we observe that function is defined on the space of behaviours of the part, whereas structure is defined in the space of design parameters. For mechanical assemblies, as the design parameters change, their effect on the motion parameters can be complex, and cannot be automated in full generality. Thus, the mapping from structure-to-function involves considerable designer knowledge. For computational purposes, we quantify this function by defining part-family-specific Configuration Space (C-space) constructions, and also a metric that operates on these C-spaces to define each function. When the design is changed, either by changing the design space (structure), or by the user expectation (function), can existing design knowledge from the earlier part family migrate to the new product family? We make a start towards exploring how this knowledge can be modified when the part family is evolved, for example by introducing additional design variables, or by changing functional roles. Using examples from several lock designs, we present a small prototype for this process of modeling function and design change, implemented on a commercial CAD engine.Copyright Â© 2008 by ASME