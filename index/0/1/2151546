(MATH) We study one of the most basic problems in online scheduling. A sequence of jobs has to be scheduled on $m$ identical parallel machines so as to minimize the makespan. Whenever a new job arrives, its processing time is known in advance. The job has to be scheduled immediately on one of the machines without knowledge of any future jobs. In the sixties Graham presented the famous List scheduling algorithm which is $(2-{1\over m})$-competitive. In the last ten years deterministic online algorithms with an improved competitiveness have been developed. The first algorithm with a performance guarantee asymptotically smaller than 2 was 1.986- competitive. The competitive ratio was first improved to 1.945 and then to 1.923 and 1.9201. Randomized competitive algorithms that are better than (known) deterministic algorithms were proposed for specific values of $m$, i.e. for $m\in\{2,\ldots,7\}$.(MATH) In this paper we present the first randomized online algorithm that performs better than known deterministic algorithms for general $m$. The algorithm is a combination of two deterministic scheduling strategies $A_1$ and $A_2$. Initially, when starting the scheduling process, a scheduler chooses $A_i$, $i\in\{1,2\}$, with probability ${1\over 2}$ and then serves the entire job sequence using the chosen algorithm. The new randomized algorithm is 1.916-competitive. We prove that this performance cannot be achieved by a deterministic algorithm based on analysis techniques that have been used in the literature so far: Using know techniques (or generalizations) it is impossible to prove a competitiveness smaller than 1.919 for any deterministic online algorithm. Our results strictly limit the performance that can be achieved with existing techniques.