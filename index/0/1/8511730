The area of mechanism design is fundamental to economics and game theory. Research in this area is concerned with the design of multi-agent interactions in ways that lead rational agents to desired behavior [Fudenberg and Tirole, 1991; Kreps, 19901. The design of protocols is fundamental to Computer Science, and is concerned with the design of multiagent interactions in computational settings, in order to satisfy a given system specification. At first glance, it seems that mechanism design and protocol design deal with the same issues, but a further study shows that these areas have been concerned with different aspects of multi-agent interactions. Work in mechanism design has been mostly concerned with rational behavior in non-cooperative systems, where the agents' utilities play a major role. Work on the design of protocols has been concerned with multi-agent interactions in distributed systems, where issues such as security, network topology, fault tolerance, and formal specification and verification play a major role. In addition, the mathematical techniques used in these areas have been vastly different. While real analysis is the standard tool for the study of economic mechanisms, logic, combinatorics, and graph theory are the standard tools for the analysis of protocols. This situation leaves us with a significant challenge: in order to design protocols to be used in non-cooperative computational environments, such as the Internet, all aspects of mechanism and protocol design should be integrated into a coherent theory.