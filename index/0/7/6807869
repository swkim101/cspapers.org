In this paper we provide the first compression booster that turns a zeroth order compressor into a more effiective <i>k</i>-th order compressor <i>without any loss in time efficiency</i>. More precisely, let <b>A</b> be an algorithm that compresses a string <i>s</i> within λ|<i>s</i>|<i>H</i>*<inf>0</inf>(<i>s</i>)+μ bits of storage in <i>O</i>(<i>T</i> (|<i>s</i>|)) time, where <i>H*<inf>0</inf>(s)</i> is the zeroth order entropy of the string <i>s</i>. Our booster improves <b>A</b> by compressing <i>s</i> within λ|<i>s</i>|<i>H</i>*<inf>0</inf>(<i>S</i>) + log<inf>2</inf> |<i>s</i>| + <i>g<inf>k</inf></i> bits still using <i>O(T (|s|))</i> time, where <i>H*<inf>k</inf>(s)</i> is the <i>k</i>-th order entropy of s.The idea of a "compression booster" has been very recently introduced by Giancarlo and Sciortino in [7]. They combined the Burrows-Wheeler Transform [3] with dynamic programming and achieved our same compression bound but with running time <i>O</i>(<i>T</i> (|<i>s</i>|)) + Ω(|<i>s</i>|<sup>2</sup>). We start from the same premises of [7], but instead of using dynamic programming we design a <i>linear time</i> optimization algorithm based on novel structural properties of the Burrows-Wheeler Transform.