We study novel scheduling problems that arise when a data server broadcasts data items requested by users. Two or more users may have pending requests for the same data item at any given time such "common" requests may be satisfied by broadcasting that data once. Hence, in contrast to the classical scheduling scenario, the scheduling problems arising in the broadcast case have the property that the work done for one job may satisfy some o f the others. We formulate the broadcast data delivery model and the scheduling problems that arise. We present polynomial time, near-optimal, offline algorithms, as well as tight bounds on the competitive ratio of the online algorithms for the basic problem of minimizing the maximum response time of a request. Background. High-bandwidth links are becoming available both on terrestrial networks via Cable Television, satellite, and on wireless networks. Much of this enhanced infrastructure inherently relies on broadcasting, rather than the traditional point-to-point or unicast paradigm. When a data item is broadcast, all outstanding/pending requests for that data item are simultaneously satisfied. In contrast, in unicast case, each request must be individually satisfied. The increase in broadcast capacity is complemented by the growth of information-centric applications. For example, there are internet service providers in the broadcast setting. Hughes's DirecPC provides internet access for homes: users make requests over phone lines which are satisfied by data delivered via satellite. Also, there are currently traffic information systems in place in many areas that provide updated traffic and landmark information in response to mobile user requests [SL94]. Similarly, AirMedia [Air97] provides news, sport s and entertainment updates via a wireless broadcast interface. The applications above show considerable commonality among user requests which makes broadcasting desirable. These applications are also pull-based, i.e., they provide on-demand data access in response to explicit client requests. Some of these applications above can also be supported in a "push-based" broadcast setting. In that approach, the server delivers data using a periodic broadcast program based on precompiled access profiles and typically, without any active user intervention [AFZ95, Won88]. We focus on the on-demand case since many emerging applireached at yai rbOmath, t au. ac. i i. I AT&T Labs Research, Plorham muthu@research, att. com. Park, NJ. SERVER T a b b d e a c l, lc 1.