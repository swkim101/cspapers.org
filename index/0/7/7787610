We present a new approach to the polymorphic typing of data accepting in-place modiflcation in ML-like languages. This approach is based on restrictions over type generalization, and a reflned typing of functions. The type system given here leads to a better integration of imperative programming style with the purely applicative kernel of ML. In particular, generic functions that allocate mutable data can safely be given fully polymorphic types. We show the soundness of this type system, and give a type reconstruction algorithm.