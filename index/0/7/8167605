Given a finite set of texts <italic>S</italic> &equil; {ω<subscrpt>1</subscrpt>, ..., ω<subscrpt>k</subscrpt>} over some fixed finite alphabet &Sgr;, a complete inverted file for <italic>S</italic> is an abstract data type that provides the functions <italic>find</italic>(ω), which returns the longest prefix of ω which occurs in <italic>S; freq</italic>(ω), which returns the number of times ω occurs in <italic>S;</italic> and <italic>locations</italic>(ω) which returns the set of positions at which ω occurs. We give a data structure to implement a complete inverted file for <italic>S</italic> which occupies linear space and can be built in linear time, using the uniform cost RAM model. Using this data structure, the time for each of the above query functions is optimal. To accomplish this, we use techniques from the theory of finite automata to build a deterministic finite automaton which recognizes the set of all sub words of the set <italic>S.</italic> This automaton is then annotated with additional information and compacted to facilitate the desired query functions.