The design of modern desktop operating systems is based on the assumption that a single user controls input and output devices at a time. This is also the case for access control, where applications inherit the privileges from the user that started them. This is not sufficient for multi-user collaboration on Single Display Groupware (SDG) or tabletop systems. For these we suggest a more fine-grained access control method based on the user that is interacting with an application. In our ongoing work of building a multi-user multitouch system we developed a technique we call event backtracking that exploits the asynchronous behavior of modern desktop applications on the Mac OS X platform. Event backtracking follows the execution of a program and tags threads with user IDs taken from the input events of users. This information is subsequently used to dynamically restrict applications' access rights. Our implementation works within applications as well as across application borders, transparent to the applications themselves.