This paper presents online algorithms for routing and bandwidth allocation which simultaneously approximate fair and max-throughput solutions. In fact, the algorithms solve a more difficult problem: for any bandwidth b, the number of sessions that get bandwidth b in the online algorithm is not smaller than the number of sessions receiving ?b offline, where ? is the competitive ratio. This problem is provably harder than the problem of maximizing throughput (e.g., 4) or the problem of maximizing the bandwidth assigned to the most starved session (e.g., 3). For the case where the algorithm assigns bandwidths, we present an O(log2nlog1+?U/?)-competitive algorithm, for any ?, where U is the minimum (over all choices of routes) of the maximum number of sessions routed along any single link. We also show an ?(log1+?U/?) lower bound in this model. For a more practically interesting model where the algorithm assigns routes and weights, and where these weights are used to drive the Weighted Fair Queuing policy in the routers, we present an O(log2nlogU)-competitive algorithm. We also show that the dependence on U is necessary by presenting an ?(logU) lower bound. Previous upper and lower bounds for online maximization of throughput become invalid if we are allowed to assign weights. We prove an ?(logn) lower bound for this model and present an O(lognloglogn)-competitive online algorithm. We present preliminary simulation results which show that our algorithm is effective in attaining high throughput without significantly sacrificing fairness.