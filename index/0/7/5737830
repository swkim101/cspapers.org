\f e conslcier the problem of efficiently couphrrg multiple cfataparakl programs at Irrntime. We propose an approach that establishes mappings between data structures m different flat a-parallel programs and implements a user-specified com wmencv model. Mappings are established at rnntlrne and can be added and deleted while the programs being coupled are in execution. Mappings, or the icleutity of the processors involved, do not ha~,r TObe kno~vn at compile-time or even link-time. Pro,gramh ran be m adc to interact tvith different granularities of interaction without requiring any re-cociing. A-priori knowledge of consistency requirements allows buffering of data as well as concurrent execution of the coupled applications. Efficient data movement is achii=w=d b~p] e-computing an optimized schedule. ~~e describe our ])lorotype mrpiernent,atiou and evaluate lts performance usLMga wt of svnthetrc “benchmarks. \Ve examme the varlat]on of performance with varlatlon in t he conslstenc} reqrrme[nent W+ demonstrate That the cost of’ the tlexibiht}pro~,lded hl our coupling scheme is not prolubltl~,e whel Lronpared with a monolithic program that performs the sam~ computatlou.