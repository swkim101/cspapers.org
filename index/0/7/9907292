RAID5 disk arrays provide high performance and high reliability for reasonable cost. However RAID5 suffers a performance penalty during block updates. In order to overcome this problem, the use of dynamic striping was proposed. This method buffers a number of updates, generates a new stripe composed of newly updated blocks, and then writes the new full stripe back to disks. In this paper, we examine the effect of access locality on the dynamic striping method. To further improve performance in such an environment, we introduce the dynamic clustering policy for hot blocks. Performance analysis with various access localities shows that this method has higher performance than ordinary methods. Performance is also examined for localities that change over time. The dynamic clustering of hot blocks follows locality transitions, showing that under dynamic conditions performance improves.