In this paper we describe an implementation of a temporal relational database management system based on attribute timestamping. The algebraic language of the system includes relational algebra operators, restructuring operators and temporrd operators. We then use this system to carry out experiments on the performance of different types of temporal databases: databases using attribute timestamping, databases using tuple timestamping where relations are in temporal normal form and databases using tuple timestamping where a single relation is used. We run sample queries against these types of temporal databases and measure the processing time of these queries. This study verifies that the major performance trade off between different types of temporaf databases is between the restructuring (unpack) operation needed in temporal databases using attribute timestamping and the join operation needed in temporal databases using tuple timestamping. Furthermore, the experiments show that keeping all temporal tuples in one single relation does not prove to be an effective alternative for temporal databases which use tuple timestamping.