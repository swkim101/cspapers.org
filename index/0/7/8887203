Computer science is a discipline which has swiftly evolved since its inception in the 1950s. This has invariably meant that new courses introduced into a curriculum are often of the bleeding-edge sort: genetic algorithms, parallel processing, mobile-based applications. Programming languages too have changed as progress ensues. Yet little is discussed of the darker side of computer science - the huge repositories of what some term legacy software running our financial, scientific and engineering systems. This paper looks at the introduction of a course which teaches legacy languages and the process of re-engineering with the aim to instill a reverence for the role legacy software plays in the modern world.