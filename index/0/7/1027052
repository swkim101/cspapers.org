Parallel processing has mostly been applied to well-defined and a priori partitioned problems, and not much has been done to introduce parallelism into serial algorithms. This paper introduces a new concept of pseudoparallelism in which the serial algorithm is partitioned into several noninteractive independent subtasks so that parallelism can be used within each subtask level. This novel approach is illustrated by taking motion analysis as an example. Complete details of such a pseudoparallel architecture with a distributed operating system (no master control) have been worked out. Problems encountered in the course of designing such a system are outlined, and necessary justifications provided. A detailed scheme indicating various memory modules, processing elements, and their data-path requirements is included, and ways to provide continuous flow of partitioned information in the form of a synchronized pipeline are described. Finally, the performance of the proposed scheme is evaluated. The basic strategy appears to be useful in designing such parallel systems for other unexplored complex problems.