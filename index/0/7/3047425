The central idea behind interface-based design is to describe components by a component interface. In contrast to a component description that describes what a component does, a component interface describes how a component can be used. A well designed component interface provides enough information to decide whether two or more components can work together properly in a system. In this work, we expand the idea of interface-based design to the area of real-time system design. Here, the term of 'working together properly' refers to questions like: Does the composed system satisfy all requested real-time properties such as delay and throughput constraints? For this, we introduce Real-Time Interfaces, that connect the principles of Real-Time Calculus with Interface-based Design. In contrast to traditional real-time system design, in interface-based real-time system design the compliance to real-time constraints is checked at composition time. This leads to faster design processes and partly removes the need for the classical binary search approach to find an economically dimensioned system. Further, interface-based real-time system design also benefits from the properties of incremental design and independent implementability.