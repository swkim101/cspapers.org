Program testing metrics are based on criteria for measuring the completeness of a set of program tests. Branch testing measures the percentage of program branches that are traversed during a set of tests. Mutation testing measures the ability of a set of tests to distinguish a program from similar programs. A criterion for test completeness is introduced in this paper which measures the ability of a set of tests to distinguish between functions which are implemented by parts of programs. The criterion is applied to functions which are implemented by different kinds of programming language statements. It is more effective than branch testing and incorporates some of the advantages of mutation testing. Its effectiveness can be discussed formally and it can be described as part of an integrated approach to testing. A tool can be used to implement the method.