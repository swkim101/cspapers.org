We consider the problem of efficiently representing sets <i>S</i> of size <i>n</i> from an ordered universe <i>U</i> = {0,...,<i>m</i>-1}. Given any ordered dictionary structure (or comparison-based ordered set structure) <i>D</i> that uses <i>O</i>(<i>n</i>) pointers, we demonstrate a simple blocking technique that produces an ordered set structure supporting the same operations in the same time bounds but with <i>O</i>(<i>n</i> log <i>m</i>+<i>n</i>/<i>n</i>) bits. This is within a constant factor of the information-theoretic lower bound. We assume the unit cost RAM model with word size Ω(log |<i>U</i>|) and a table of size <i>O</i>(<i>m</i><sup>α</sup> log<sup>2</sup> <i>m</i>) bits, for some constant α > 0. The time bound for our operations contains a factor of 1/α.We present experimental results for the STL (C++ Standard Template Library) implementation of Red-Black trees, and for an implementation of Treaps. We compare the implementations with blocking and without blocking. The blocking variants use a factor of between 1.5 and 10 less space depending on the density of the set.