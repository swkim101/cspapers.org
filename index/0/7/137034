In this paper, we present a hybrid scheme for detecting AND-parallelism in Prolog programs, in which data dependency analysis is conducted partly at runtime and partly at compile time. The philosophy reflected in the hybrid scheme is to do as much as possible at compile time and leave only things that must be dynamically accomplished to runtime. With tolerable runtime overhead, our methodology can achieve sufficient accuracy and can thus remedy the weakness both in dynamic detection and in static data dependency analysis (SDDA). In addition, the hybrid scheme greatly supports the combining exploitation of AND- and OR-parallelism of Prolog.