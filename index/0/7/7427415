In this paper, we introduce a user-level threads package called the Threaded Communication Library which provides primitives to support programs under a multi-threaded program execution model. We present some preliminary experiments compariug the performance of benchmarks using the dual-processor TCL implementation to a single-processor version in which all computation, synchronization, and communication are performed on one processor of a node. Our results indicate that: 1) for applications with highly asynchronous fine-grain communication demands, the dual-processor implementation can effectively overlap communication and computation for faster execution; and 2) with more regular communication requirements, the cache effect ou the computation processor should not be ignored. In some benchmark programs in which the data to be communicated between processors can be kept on the on-chip cache of the computation processor, the single processor version of TC L may yield better performance due to the avoided cache misses which the dualprocessor version encounters.