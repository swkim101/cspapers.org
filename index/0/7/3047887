With the advent of high-performance microprocessors and high-speed local area networks, networks of workstations (NOW) are now capable of delivering sustained computational performance comparable to that of a supercomputer. Distributed shared virtual memory (DSVM) offers a prornming abstraction that hides the underlying networkgra ing details and thus greatly improves parallel programming productivity y on a NOW environment. This paper describes the architecture and design of a novel DSVM system called Locust that can effectively take advantage of the data dependency information gathered at compile time to reduce performance overhead. Locust features a generation-based cache coherence scheme that greatly minimizes unnecessary coherence tratlic. It supports object granularity cache coherence, thus eliminating the false sharing problem. In addition, Locust exploits data-dependency information to support pt-oducer-initiated data tTansfer and afinit y scheduling. Finally, Locust provides a synchronization mechanism that reduces synchronization-induced network tratlic to its minimum. Locustâ€™s underlying communication subsystem is an active messages like system. We discuss in detail how these mechanisms are integrated into Locust and present the initial implementation and some performance measurements of the communication subsystem.