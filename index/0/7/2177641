This paper describes a method of analysing rule-based systems, which models the procedural semantics of such languages. Through a process of 'abstract interpretation', the program, AbsPS, derives a description of the mapping between a rule base's inputs and outputs. In contrast to earlier approaches, AbsPS can analyse the effects of: conflict resolution, closed-world negation and the retraction of facts. This considerably reduces the size of the search space because, in the abstract domain, AbsPS takes advantage of the very same control information which guides the inference engine in the concrete domain. AbsPS can detect redundancies which would be missed if the procedural semantics were ignored. Furthermore, the abstract description of a rule base's input-output mapping can be used to prove that the rule base meets its specification.