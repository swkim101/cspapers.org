Given a set Z of n positive integers and a target value t, the S ubset S um problem asks whether any subset of Z sums to t. A textbook pseudopolynomial time algorithm by Bellman from 1957 solves S ubset S um in time O(nt). This has been improved to O(n max Z) by Pisinger [J. Algorithms'99] and recently to [EQUATION] by Koiliaris and Xu [SODA'17]. Here we present a simple and elegant randomized algorithm running in time O(n+t). This improves upon a classic algorithm and is likely to be near-optimal, since it matches conditional lower bounds from S et C over and k-C lique . We then use our new algorithm and additional tricks to improve the best known polynomial space solution from time O(n3t) and space O(n2) to time O(nt) and space O(n log t), assuming the Extended Riemann Hypothesis. Unconditionally, we obtain time O(nt1+e) and space O(nte) for any constant e > 0.