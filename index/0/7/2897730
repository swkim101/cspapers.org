With increased processor speed and improved robotic and AI technology, researchers are beginning to design programs that can behave intelligently and interact in the real world. A large increase in processing power has come from parallel machines, but taking advantage of this power is challenging. In this paper we address the issues in designing planners for real-time AI and robotic applications, and provide guiding principles. These principles were designed to minimize the difference between the new real-time model and the standard off-line model. Applying these principles yields a better-structured application, easier design and implementation, and improved performance. The focus of the paper is on a design methodology for implementing effective planners in real-world applications. Using Ephor (our runtime environment), and applying the described planner principles, we demonstrate improved performance in a real-world shepherding application.