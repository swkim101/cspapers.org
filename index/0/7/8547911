As exploratory queries become more and more popular, the study of how to select k items based on fuzzy matching and ranking of database tuples (i.e. top-k queries) has attracted much attention recently. However, taking the topk tuples based on their scores computed independently is inadequate for modeling some complex queries finding the best k tuples based on some selection criteria involving a global measure on multiple selected tuples (e.g., tuple redundancy or compatibility). In this paper, we introduce and study such best-k queries, and further model a database selection problem generally as a decision problem, in which a database system would respond to a query by selecting a subset of tuples that optimize a certain utility function defined globally. Accordingly, we present a general formal framework for database selection, which covers the boolean query search, the top-k query search, and the best-k query search all as special cases. We prove that finding answers to a general best-k query is an NP-hard problem. We propose an anytime algorithm, which allows a user to stop the algorithm at any time to achieve a flexible tradeoff between the result optimality and the running time, to execute a bestk query efficiently. Experiment results show that the algorithm can be used to efficiently answer a best-k query.