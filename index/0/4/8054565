An alternative to the class-based object-orient language model has emerged in recent years. In this protoype-based paradigm there are no classes in the traditional sense. In object-oriented programming, a class usually provides a particular set of functionality: an object is created by instantiation of the class, the behavior for instances is held by the class, and the number and name of instance variables is specified by the class. In most prototype-based systems however, a new object is made by copying, behavior can be held directly in an individual object or inherited from others, and what an object implements by instance variables or by methods is not proscribed.