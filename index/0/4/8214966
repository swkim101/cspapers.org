We introduce a first-order version of Categorial Grammar, based on the idea of encoding syntactic types as definite clauses. Thus, we drop all explicit requirements of adjacency between combinable constituents, and we capture word-order constraints simply by allowing subformulae of complex types to share variables ranging over string positions. We are in this way able to account for constructions involving discontinuous constituents. Such constructions involving discontinuous constituents. Such constructions are difficult to handle in the more traditional version of Categorial Grammar, which is based on propositional types and on the requirement of strict string adjacency between combinable constituents.We show then how, for this formalism, parsing can be efficiently implemented as theorem proving. Our approach to encoding types as definite clauses presupposes a modification of standard Horn logic syntax to allow internal implications in definite clauses. This modification is needed to account for the types of higher-order functions and, as a consequence, standard Prolog-like Horn logic theorem proving is not powerful enough. We tackle this problem by adopting an intuitionistic treatment of implication, which has already been proposed elsewhere as an extension of Prolog for implementing hypothetical reasoning and modular logic programming.