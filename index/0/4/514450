The knowledge analysis of a device and a task, when written in an external Instruction Language and translated into rules for a programmable cognitive architecture, enables a designer to predict conceptual errors in device usage. This kind of prediction lies outside the scope of GOMS-based models. The cognitive architecture, which is referred to as a “Programmable User Model” (PUM), incorporates a limited problem-solving capability based upon means-ends analysis and multiple problem spaces. The example presented, concerning a simple text editor, illustrates the application of a PUM and demonstrates that a correct description of local knowledge does not necessarily lead to correct behaviour. This can serve to alert the designer to difficulties with the usability of a proposed interface.