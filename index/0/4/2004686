Computational Thinking (CT), now widely recognized as a necessary skill for today's generation of learners, is typically being introduced to students in middle and high school (and even at the college level) in the context of programming in visual, block-based, drag-drop environments such as Scratch, Alice, Blockly, Tynker, Agentsheets and Kodu. How well are these first experiences preparing students to apply their learning successfully to future computational experiences, which are likely to be in the context of higher-order, text-based programming languages? How can we teach so as to facilitate successful 'transfer of learning' to future contexts? The art of teaching for transfer, or mediating transfer, has been actively studied for decades in education research. Pedagogies such as 'bridging', 'hugging', and 'preparation for future learning' (PFL) have shown promise in the context of education research in STEM domains at the secondary level. This fun lightning talk will shed light on these very pertinent ideas that CS education will benefit from, and share concrete strategies that can be employed in K-12 and college-level introductory programming classrooms to prepare students for better success with future computational experiences. The broader goal is to get CS educators and researchers thinking about an important aspect of teaching introductory programming and get a conversation started.