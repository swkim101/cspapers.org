SCL (structural constraint language) is a language and a checker aimed to help express developer intent and check that code continues to comply with the intent. SCL works directly on source code, in much the same way as a compiler. But unlike a compiler, SCL is open and, thus, can be used to express intent specific to an application. SCL treats a program as a model made of facts extracted from source code. In addition to basic facts such as inheritance, containment, and attributes of program elements, to express more sophisticated intent, SCL also makes use of control and data flow and dependences. To write formulas (a.k.a structural constraints) about the program model, SCL adopts the formalism of first-order logic. Furthermore, SCL can be extended by adding to the program model extra facts obtained from other sources (e.g., dynamic analysis) and new operations to the SCL language.