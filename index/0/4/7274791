A dynamic geometric data stream consists of a sequence of <i>m</i> insert/delete operations of points from the discrete space 1,…,Δ<i><sup>d</sup></i> [26]. We develop streaming (1 + ε)-approximation algorithms for <i>k</i>-median, <i>k</i>-means, MaxCut, maximum weighted matching (MaxWM), maximum travelling salesperson (MaxTSP), maximum spanning tree (MaxST), and average distance over dynamic geometric data streams. Our algorithms maintain a small weighted set of points(a coreset) that approximates with probability 2/3 the current point set with respect to the considered problem during the <i>m</i> insert/delete operations of the data stream. They use poly (ε<sup>-1</sup>, log <i>m</i>, log Δ) space and update time per insert/delete operation for constant <i>k</i> and dimension <i>d</i>Having a coreset one only needs a fast approximation algorithm for the weighted problem to compute a solution quickly. In fact, even an exponential algorithm is sometimes feasible as its running time may still be polynomial in <i>n</i>. For example one can compute in poly(log <i>n</i>, exp(<i>O</i>((1+log (1⁄ε)⁄ε)<sup><i>d</i>-1</sup>))) time a solution to <i>k</i>-median and <i>k</i>-means [21] where <i>n</i> is the size of the current point set and <i>k</i> and <i>d</i> are constants. Finding an implicit solution to MaxCut can be done in poly(log <i>n</i>, exp((1⁄ε)<sup>O(1)</sup>)) time. For MaxST and average distance we require poly(log <i>n</i>, ε<sup>-1</sup>) time and for MaxWM we require O(<i>n</i><sup>3</sup>) time to do this.