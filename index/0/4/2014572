Code maintenance, tuning or parallelization on high performance computers are very time consuming. They usually involve many program transformations. These transformations range from very simple ones (i.e. changing array accesses) to very complex ones (i.e. parallelism and data locality optimizations [ll, 21). Furthermore these transformations are usually based on information extracted either statically (i.e. data flow and data dependence analysis [S]) or dynamically (i.e. via program instrumentation [5]). Most of the currently available tools, compiler, parallelizer, preprocessor, profilers, etc. cover part of the needs but they suffer from a major drawback: they cannot be easily extended. Extensibility allows the user (i.e. an application developer in our case) to add new program transformations specific to his application context. However adding new features must be possible without having an intimate knowledge of the tool implementation nor having to modify the source code or to link to it. In this paper we present a new program transformation infrastructure, called TSF, for application developers. This infrastructure is build on top of an existing Fortran engineering tool named FORESYS [23]. In the following we overview the related tools and the main features of the TSF transformation scripts. We conclude this section by an overview of the paper.