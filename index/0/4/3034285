1. SUMMARY Automatic grading of programming assignments has been a feature of computer science courses for almost as long as there have been computer science courses [1]. However, contemporary autograding systems in computer science courses have extended their scope far beyond performing automated assessment to include gamification [2], test coverage analysis [3], managing human-authored feedback, contest adjudication [4], secure remote code execution [5], and more. Many of these individual features have been described and evaluated in the computer science education literature, but little attention has been given to the practical benefits and challenges of using the systems that implement these features in computer science courses.