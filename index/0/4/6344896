In this report, we present Gecko, a framework for the model-based development of embedded systems, focusing on light-weight fault-tolerance and dependability aspects. Given a high-level sketch of the system, including models of the hardware, software, expected faults, and a set of predefined mechanisms, Gecko can perform a series of refinement processes, including model annotation and concretization over specified mechanisms, to generate executable code over dedicated platforms. To supplement the design flow, several analysis techniques are embedded or experimented in Gecko as modules, including (a) generation of dependability models acceptable by verification engines, (b) worst-case transmission time calculation for networks demonstrated on the example of CAN bus, and (c) generation of integrity constraints using program analysis to estimate the effect of sensor imprecision. Gecko also interfaces standardized ESL design methodology by generating SystemC fragments (currently loosely timed TLM 2.0 models) to support detailed analysis.