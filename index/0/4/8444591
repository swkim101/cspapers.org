The possibility is pursued that a single mental program underlies both sentence comprehension and generation. The Horn-logic formalism is exploited here to modelize the mental representation of the linguistic knowledge, as a bundle of constraints rather than as a patchwork of procedures. A notion of dependency in a Horn program is defined so that eliminating dependency amounts to solving the problem (of sentence comprehension or generation) represented in terms of that program. Thus, formulated is a problem-solving paradigm called Dependency Propagation (DP): Local dependency in some parts of the program invokes execution, which may cause dependency again in some neighboring parts, which in turn invokes further execution, and so on. DP subsumes both sentence comprehension and generation, because, under DP, no heuristics are necessary about when and how to use most efficiently which piece of linguistic knowledge; The major difference between the two processes is in such alleged heuristics, whereas the declarative knowledge is largely shared. Another advantage of DP is that it captures not only short-term execution but also long-term transformation of programs. Some light is thus shed upon the evolution or acquisition of the mental grammar and lexicon.