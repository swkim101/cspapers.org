A multiparty interaction is a set of 1/0 actions executed jointly by a number of processes, each of which must be ready to execute its own action for any of the actions in the set to occur. An attempt to participate in an interaction delays a process until all other participants are available. After the actions are executed, the participating processes continue their local computation, usually asynchronously. Languages like C SP and Ada support interaction ordy between two processes. However, for many applications a higher level of abstraction can be obtained by permitting interaction among an arbitrary number of processes. For example, consider the well-known dining philosophers problem. The natural unit of process interaction in this setting is between a philosopher and its two neighboring forks; i.e., a multiparty synchronization involving three processes. It is useful to distinguish between ze~oth-oder multiparty interactions where the participants are fixed in advance, and jirst-onier multiparty interactions where the participants may vary dynamically. For example, a zeroth-order multicast interaction in which process .P sends a message m to Q and B is captured by the code: