Researchers in recent years have developed many graph algorithms that are fast in the worst case, but little work has been done on graph algorithms that are fast on the average. (Exceptions include the work of Angluin and Valiant [1], Karp [7], and Schnorr [9].) In this paper we analyze the expected running time of four algorithms for solving graph connectivity problems. Our goal is to exhibit algorithms whose expected time is within a constant factor of optimum and to shed light on the properties of random graphs.
 In Section 2 we develop and analyze a simple algorithm that finds the connected components of an undirected graph with n vertices in O(n) expected time. In Sections 3 and 4 we describe algorithms for finding the strong components of a directed graph and the blocks of an undirected graph in O(n) expected time. The time required for these three problems is Î©(m) in the worst case, where m is the number of edges in the graph, since all edges must be examined; but our results show that only O(n) edges must be examined on the average.*@@@@
 In Section 5 we present an algorithm for finding a minimum weight spanning forest in an undirected graph with edge weights in O(m) expected time.