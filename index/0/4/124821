The development of software systems is a complex process involving a variety of individual tasks, collaborative work, and lifecycle management of the resulting products and product parts. Software development teams are supported in their work by a number of methods for the various production phases, and by appropriate tools of varying degrees of sophistication. Due to the immaterial nature of software, its development can be regarded as the goal-oriented production of a heterogeneous set of mostly highly-structured, interrelated units of informationNinformation that usually needs to be persistently stored and managed to meet various quality and reliability criteria. Database technology, over the past 30 years, has provided a wealth of concepts, methods, systems and tools that exactly address this problemNalbeit for information as it is typically encountered in more business and bookkeeping kinds of environments. Database management systems are in everyday use widely today, and have recently extended their range of application areas to engineering and scientific fields. Thus it looks very promising to investigate how database technology might be beneficially used in software engineering, and indeed many such approaches have been taken during the last decade and a half. To be fair, success so far has been rather limited. In this paper, we summarize the various requirements software engineering poses on database technology, then briefly describe past and present achievements, and discuss the challenges that need to be met in order to better achieve the goals in the future.