We use support vector machines (SVMs) to compute the actions which maintain a dynamical system within a defined subset of its state space. The principles of our method are inspired by the viability theory. We use SVMs to approximate the viability kernel which is the set of states from which it is possible to maintain the system. The actions to perform on the system can then be easily computed from the SVM, whatever the starting point. The major limitation of the approach is the exponentially growing number of training examples when the dimension of the state space increases. We use active learning to limit this number.