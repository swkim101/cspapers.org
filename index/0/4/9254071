Software developers often complain that researchers in the field of software engineering propose new ideas without testing these ideas in practical applications. The Architecture Research Facility (ARF) was developed utilizing several software engineering techniques in order to discover their usefulness in actual software system developments. Such techniques as the complete design and documentation of the individual components and interfaces prior to coding, design reviews, code specification in a pseudo-language, code-reading prior to testing, information-hiding modules, run-time error checking mechanisms, strong-typing and the use of support software tools are discussed. We describe the motivation for using the techniques as well as how these techniques were applied to ARF's development. Staff reactions to using these techniques were favorable although at the time some frustration at the lack of apparent coding progress was felt. Our results would prove useful to software developers planning to use new development techniques since we highlight many of these techniques' strengths and weaknesses.