In the private workspace model of concurrency con-trol the transaction manager, TM, maintains a private workspace for each transaction. Data items accessed by a transaction, regardless of access mode, are cached in this workspace. At transaction commit time updates are made permanent in the database. 
 
This paper addresses two basic issues. First, the feasibility of the model is exhibited by introducing a relatively straightforward and efficient parallel commit phase algorithm in which no I/O operations are associ-ated with a critical section of the TM.Second, by simula- tion experiments, a concurrency control method in which readers use certification whereas writers use 2PL and do not wait for readers is shown to usually outper- form the "standard" 2PL method within the private workspace context. The detailed physical model used in the simulation captures the basic properties of the private workspace idea.