Object detection using Haar-like features is formulated as a maximum likelihood estimation. Object features are described by an arbitrary Bayesian Network (BN) of Haar-like features. We proposed variable translation techniques transform the BN into the likelihood for the object detection. The likelihood is a BN which includes a node that represents the object’s position, angle and scale. The object detection can be achieved by inference for the node. Introduction Viola et al. have proposed a multi-stage classification procedure that reduces the processing time substantially while achieving almost the same accuracy as compared to a much slower and more complex single stage classifier(Viola & Jones 2001). This paper extends their rapid object detection framework in two important ways: Firstly, a Bayesian Network (BN) based representation of Haar-like feature is introduced. Secondly, we formulate detecting an object described by the BN as an optimization problem argmaxu p(u), where, u is a transformed representation of an object position, angle and scale. p is a probability of u. The optimization problem can be solved by Bayesian inference for the BN. Reparameterization of Haar-like Feature Haar-like feature is a linear combination of sums of pixels intensities, within few rectangular regions. We approximate Haar-like feature by using the difference of two rectangular regions. The approximated Haar-like feature is showed in Fig. 2. In this figure, Haar-like feature is approximated as the difference between a rectangular region filled with an oblique line pattern and a region filled with an a vertical line pattern. The approximated Haar-like feature is represented by three vertexes (x1, y1), (x2, y2), (x3, y3) and parameters α1, α2. Here, the parameters α1, α2 represent relative location of the smaller rectangle from the larger rectangle. Using these 8 parameters x = (x1, ŷ1, x2, ŷ2, x3, ŷ3, α1, α2) , an object’s feature distribution can be formulated as a conditional probability P (z|x) = N (μ+ Λx,Ψ), (1) Copyright c © 2006, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. relative location x1 window location u x2 absolute location x1 origin