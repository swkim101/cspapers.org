There is an enormous body of software implemented on the common CPU architectures of today, such as Intel 8080, DEC PDP-11, and IBM System/370. For computer vendors in a profit-seeking environment, future products must not only support this existing software, but also exploit hardware and software technologies that are being, and will be, developed. The computer architect must balance the changes made to support new software with the requirement for cost-effective execution of old software. This problem is independent of the execution speed of the processor and the size of the system of which it is a part.
 The process of striking a balance between advancement and compatibility will be presented. Strengths and weaknesses of various types of solutions will be described using examples from commercial vendors. Reasons why certain well-known concepts in computer architecture have not been included in the products of commercial vendors will be discussed. The impact of management-level personnel on changes in computer architecture will also be explored. Future computer architectures must be engineered to meet the needs and concepts of those who use and control computers. Therefore, the process of its development within the industry must necessarily occur in orderly and constrained steps, rather than random leaps.