Simulating schema evoiution using views offers many advantages over the direct modification of the schema. However, this view approach towards transparent schema evolution has not yet been implemented. One reason for this may be that views can â€˜t simulate capacity-augmenting schema changes due to the inherent limitation of view mechanisms that do not augment the underlying schema. One potential solution for this problem is to develop capac@augmenhngview support. However, existing 00 view mechanisms do currently not support this capacityaugmenting feature. This paper thus proposes an alternative, more practical, solution to this problem. This solution is neither confined to object-preserving schema changes nor requires capacdy-augmentmg views. Note that our proposed solution is the first to aJso support hard changes such as converting values into an object, splitting two classes vertically, etc., in a transparent fashion. We demonstrate the feasibility of our solution by presenting general algorithms for hard schema changes as well as primitive ones.