Abstract In this paper, we analyze the properties and efficiency of three basic local enumeration and three storage compression schemes for cyclic ( m ) data distributions in High Performance Fortran (HPF). The methods are presented in a unified framework, showing the relations between the various methods. We show that for array accesses that are affine functions of the loop bounds, efficient local enumeration and storage compression schemes can be derived. Furthermore, the basic set enumeration and storage techniques are shown to be orthogonal, if the local storage compression scheme is collapsible. This allows choosing the most appropriate method in parts of the computation and communication phases of parallel loops. Performance figures of the methods show that programs with cyclic ( m ) data distributions can be executed efficiently even without compile-time knowledge of the relevant access, alignment, and distribution parameters.