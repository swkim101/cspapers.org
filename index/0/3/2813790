The Domain Name System (DNS) is used to map easy to remember hostnames to Internet Protocol (IP) addresses in the Internet. When a user enters a URL in the browser window its cache is first checked for this mapping. If it results in a cache miss the request is passed to the configured local name server (LNS). If the LNS cache, too, cannot resolve the URL it recursively contacts several name servers on the user’s behalf. This recursive resolution is time consuming and overloads frequently visited name servers. In order to overcome these drawbacks we propose an approach called ”Cooperative DNS Caching”. In this approach LNS’s of several autonomous networks pool their caches together in a centralized cache, which is then available to all the participants (LNS’s). The intuition is that this central cache will behave analogous to an L2 cache in a microprocessor, thus leading to an increase in cache hit rate. As a result, we expect a reduction in the mean response time as seen by the user. Furthermore, the central caches, if extensively deployed, are also expected to ease the load on frequently visited name servers (e.g. root name servers, .edu name server, .com name server). In this paper, we present the design and implementation of CacheMakers, a distributed decentralized system which exploits reference locality in DNS requests to reduce latency due to DNS lookups.