The term "application profile" has recently become highly topical. Heery and Patel [1] define application profiles as metadata schemas which consist of metadata elements drawn from one or more namespaces, combined together by implementers and optimised for a particular local application. They state that the principal characteristics of an application profile are that: it may draw on one or more existing namespaces; does not introduce new metadata elements; it can specify permitted schemes and values; and it can refine standard metadata elements. Significant new initiatives such as TV-Anytime [2], MPEG-21 [3] and the Open Archives Initiative (OAI) [4] are demanding application profiles which combine elements from a number of different existing standardized metadata schemas whilst maintaining interoperability and satisfying their own specific requirements through refinements, extensions and additions. So far approaches to application profiles have been based on either RDF Schemas [5] or XML Schemas [6,7,8]. The SCHEMAS project [9] has adopted a purely RDF Schema approach. Justification for a pure XML Schema approach to application profiles is given in [10]. Despite high level assurances of unification from the W3C [11, 12], a purist and competitive attitude has prevailed amongst implementers. This has been because the demarcation of roles and the interface between these two disparate W3C Candidate Recommendations has been fuzzy; no low level details or implementations describing interface mechanisms have been provided; and implementers have been afraid of compromising interoperability. In this paper we describe a hybrid collaborative approach which combines the semantic knowledge of RDF Schemas with the explicit structural, cardinality and datatyping constraints provided by XML Schemas in a complementary manner. First we describe our view of how XML Schema and RDF Schema fit into the overall web metadata architecture. We then describe possible schema interface mechanisms. Finally using examples and mapping implementations based on XSLT and a metadata ontology, we demonstrate how interoperability between application profiles can be enhanced by using a dual schema approach.