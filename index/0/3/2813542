While much work has been done to date on the study of task-scheduling schemes for shared memory machines, little of the knowledge gained has been transferred to distributed memory systems. In this paper we discuss the implementation and performance evaluation of various scheduling schemes (which have been widely used on shared memory systems) on the Intel iPSC/2 hypercube. Two benchmarks representing the two ends of the spectrum with respect to task sizes were used to carry out the experiments. The primary goal of this work was to test the performance of guided self-scheduling (GSS) [PoKu87] against other commonly used schemes, and implement an efficient dynamic loop scheduling mechanism on a hypercube. The results suggest that GSS would be a far more efficient and consistent scheduling mechanism for hypercube architectures, and across the range of applications.