Convex relaxations based on different hierarchies of linear/semi-definite programs have been used recently to devise approximation algorithms for various optimization problems. The approximation guarantee of these algorithms improves with the number of rounds r in the hierarchy, though the complexity of solving (or even writing down the solution for) the r'th level program grows as n<sup>Ω(r)</sup> where n is the input size. In this work, we observe that many of these algorithms are based on local rounding procedures that only use a small part of the SDP solution (of size n<sup>O(1)</sup>2<sup>O(r)</sup> instead of n<sup>Ω(r)</sup>). We give an algorithm to find the requisite portion in time polynomial in its size. The challenge in achieving this is that the required portion of the solution is not fixed a priori but depends on other parts of the solution, sometimes in a complicated iterative manner. Our solver leads to n<sup>O(1)</sup>2<sup>O(r)</sup> time algorithms to obtain the same guarantees in many cases as the earlier n<sup>O(r)</sup> time algorithms based on r rounds of the Lasserre hierarchy. In particular, guarantees based on O(log n) rounds can be realized in polynomial time. For instance, one can (i) get O(1/λ<sub>r</sub>) approximations for graph partitioning problems such as minimum bisection and small set expansion in n<sup>O(1)</sup>2<sup>O(r)</sup> time, where λ<sub>r</sub> is the r'th smallest eigenvalue of the graph's normalized Laplacian; (ii) a similar guarantee in n<sup>O(1)</sup>k<sup>O(r)</sup> for Unique Games where k is the number of labels (the polynomial dependence on k is new); and (iii) find an independent set of size Ω(n) in 3-colorable graphs in (n2<sup>r</sup>)<sup>O(1)</sup> time provided λ<sub>n-r</sub> <; 17/16. We develop and describe our algorithm in a fairly general abstract framework. The main technical tool in our work, which might be of independent interest in convex optimization, is an efficient ellipsoid algorithm based separation oracle for convex programs that can output a certificate of infeasibility with restricted support. This is used in a recursive manner to find a sequence of consistent points in nested convex bodies that “fools” local rounding algorithms.