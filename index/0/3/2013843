The Microsoft Repository is an object-oriented repository that ships as a component of Visual Basic (Version 5.0). It includes a set of ActiveX interfaces that a developer can use to define information models, and a repository engine that is the underlying storage mechanism for these information models. The repository engine sits on top of a SQL database system. The repository is designed to meet the persistent storage needs of software tools. Its two main technical goals are: . compatibility with Microsoft’s existing ActiveX object architecture consisting of the Component Object Model (COM) and Automation and that a developer can use to define information models, and a repository engine that is the underlying storage mechanism for these information ‘models. (Znformurion model is repository terminology for database schema [3].) The repository engine sits on top of either Microsoft SQL Server or Microsoft Jet (the database system in Microsoft Access) and supports both navigational access via the object-oriented interfaces and direct SQL access to the underlying store. In addition, the Repository includes a set of information models that cover the data sharing needs of software tools. . extensibility by customers and independent software vendors who need to tailor the repository by adding functionality to objects stored by the repository engine and extending information models provided by Microsoft and others. The two main technical goals of Microsoft Repository are 1. COMZActiveX Compatibility It should fit naturally into Microsoft’s existing object architecture, consisting of COM and Automation (now subsumed under ActiveX). Thus, the repository should use existing ActiveX interfaces and implementation technology wherever possible and minimize the number of new concepts that the large community of ActiveX users needs to learn. This paper explains how the Repository attains these goals by providing an object-oriented database (OODB) architecture based on Microsoft’s binary object model (COM) and type system of Visual Basic (Automation).