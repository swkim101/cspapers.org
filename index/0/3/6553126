We introduce a programming paradigm in which statements are constraints over partial orders. A <italic>partial order programming problem</italic> has the form minimize <italic>u</italic> subject to <italic>u</italic><subscrpt>1</subscrpt> ⊒ <italic>v</italic><subscrpt>1</subscrpt>, <italic>u</italic><subscrpt>2</subscrpt> ⊒ <italic>v</italic><subscrpt>2</subscrpt>, ··· where <italic>u</italic> is the <italic>goal,</italic> and <italic>u</italic><subscrpt>1</subscrpt> ⊒ <italic>v</italic><subscrpt>1</subscrpt>, <italic>u</italic><subscrpt>2</subscrpt> ⊒ <italic>v</italic><subscrpt>2</subscrpt>, ··· is a collection of constraints called the <italic>program</italic>. A solution of the problem is a minimal value for <italic>u</italic> determined by values for <italic>u</italic><subscrpt>1</subscrpt>, <italic>v</italic><subscrpt>1</subscrpt>, etc. satisfying the constraints. The domain of values here is a <italic>partial order,</italic> a domain <italic>D</italic> with ordering relation ⊒.
The partial order programming paradigm has interesting properties:
<list><item>It generalizes mathematical programming and also computer programming paradigms (logic, functional, and others) cleanly, and offers a foundation both for studying and combining paradigms.
</item><item>It takes thorough advantage of known results for continuous functionals on complete partial orders, when the constraints involve expressions using only continuous and monotone operators. The semantics of these programs coincide with recent results on the relaxation solution method for constraint problems.
</item><item>It presents a framework that may be effective in modeling, or knowledge representation, of complex systems.
</item></list>