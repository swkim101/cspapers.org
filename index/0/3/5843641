Function type signatures are important for binary analysis, but they are not available in COTS binaries. In this paper, we present a new system called E KLAVYA which trains a recurrent neural network to recover function type signatures from disassembled binary code. E KLAVYA assumes no knowledge of the target instruction set semantics to make such inference. More importantly, E KLAVYA results are “explicable”: we ﬁnd by analyzing its model that it auto-learns relationships between instructions, compiler conventions, stack frame setup instructions, use-before-write patterns, and operations relevant to identifying types directly from binaries. In our evaluation on Linux binaries compiled with clang and gcc , for two different architectures (x86 and x64), E KLAVYA exhibits accuracy of around 84% and 81% for function argument count and type recovery tasks respectively. E KLAVYA generalizes well across the compilers tested on two different instruction sets with various optimization levels, without any specialized prior knowledge of the instruction set, compiler or optimization level.