Fast access to backend services is crucial for many mobile apps. For example, emerging augmented-reality devices such as Google Glass require fast access to powerful servers to achieve seamless interactivity with the real world; and online gaming clients need to communicate in real-time through centralised game services. A major obstacle to achieving this hyper responsiveness is the performance of the underlying network that interconnects mobile clients and services. Network e↵ects cannot be anticipated, let alone controlled, due to the unpredictability of wide-area networks and the fact that users roam between di↵erent networks. Over time, organisations have gone to great lengths to reduce access latency to backend services by moving them “closer” to end users. In 2010, Google spent $1.9 billion on a data centre in New York, despite real estate prices being amongst the highest in the world, to gain direct access to local and global networks [5]. Similarly, cloud service providers such as Amazon AWS have rolled out new infrastructure in edge locations. Proactive measures against high network latencies, however, are limited by the fact that network proximity in a mobile setting is unknown a priori. To enable hyper-responsive mobile apps, Balan et al. [1] first proposed cyber-foraging, i.e. the use of remote resources to augment smartphone capabilities. This led to proposals such as Cloudlets [7], which treat smartphones as thin clients served by virtual device clones, and systems such as MAUI [4] and CloneCloud [2], which apply a more finegrained app partitioning to reduce response times. In general, the above approaches can only improve application responsiveness to the extent that computation delays dominate performance. It remains a challenge to control the impact of high network latencies, especially when users roam between wireless networks of di↵erent operators.