, Current languages for distributed memory machines tend to directly reflect the underlying hardware and thus provide little support for implementing data parallel algorithms. This paper describes a programming environment, Kali, which provides a global name space and allows direct access to remote data values. In order to retain efficiency, Kali provides a system of annotations allowing the user to control aspects of the program critical to performance, such as data distribution and load balancing. We present a series of examples showing how Kali can easily express data parallel algorithms. We also discuss some of the issues raised in translating such programs for execution on distributed memory systems and show performance results for well-known numerical algorithms written in Kali.