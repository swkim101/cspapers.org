In the engineering and scientific marketplaces, the workstation-server model of computing is emerging as the standard of the 1990s. Implementing an object-oriented database system in this environment immediately presents the design choice of how to partition database functionality between the server and workstation processor. To better understand the alternatives to this fundamental design decision, we analyze three different workstation-server architectures. The three approaches are labeled object server, in which individual objects pass between the server and workstation, puge server, in which a disk page is the unit of transport and the server buffers pages, andfrle server, where whole pages are transferred as well, but they are accessed directly by the workstation process via a remote file service (namely, NFS). Our main conclusions are that the page-server and file-server architectures benefit most from clustering, that the relative performance of the pageand object-server architectures is very sensitive to the degree of database clustering and the size of the workstationâ€™s buffer pool relative to the size of the database, and that, while the file-server architecture dominates the page-server architecture on read-intensive operations, the opposite is true on write-intensive operations.