Nowadays parallel object-relational DBMS are envisioned as the next great wave but there is still a lack of efficient implementation concepts for some parts of the proposed functionality. One of the current goals for parallel object-relational DBMS is to move towards higher performance. In our view the main potential for performance increases lies in providing additional optimization and execution information for ADTs, as queries can be executed much more efficiently if the developer teaches the DBMS part of the ADT semantics. Based on this insight we develop a framework that allows to process user-defined functions using data-parallelism, a topic not covered up to now. We describe the class of partitionable functions that can be processed in parallel with a good speedup. We also propose an extension which allows to speedup the processing of another large class of functions using parallel sorting. Functions that can be processed using our framework are for example often used in decision support queries on large data volumes like e.g. data warehouses. Hence a parallel execution is indispensable.