Summary form only given. The purpose of this paper is to analyze the performance of the Highest Entropy First (HEF) scheduling algorithm for real-time tasks. The contributions of this paper are: · Generate multiple task sets by implementing the programs from the Seoul National University (SNU) real-time benchmark in Wind River Workbench 3.3 to calculate the WCET and generating the periods by using a linear programming solution aiming to maximize the utilization of the system based on a predefined hyper-period. We implemented the SNU programs (sqrt.c, fibcall.c, crc.c, minver.c and select.c) on a server with an Intel i7-3770 processor running at 3.4 GHz, with 16 GB of RAM and 2 TB hard drive using Wind River Workbench 3.3 to calculate the worst case execution time (WCET). We run each program 100 times to average the results. We created 4 task sets with 2, 3, 4, and 5 tasks respectively. For each task set we used 100 ms as the hyper-period to calculate the periods of the tasks. We implemented a system with implicit deadlines. · Measure the performance of HEF algorithm to schedule real-time tasks using as metrics the number of context switches and deadline-miss ratio. The results from the preliminary performance evaluation show that the number of context switches is directly proportional to the number of tasks in the task set. For the deadline-miss ratio, HEF was able to schedule all the task sets without missing any deadline. Further analysis must be made to confirm that the deadline-miss ratio depends on the utilization of the system (U ≤ 1 = no deadline misses). The HEF algorithm has some similarities with the earliest deadline first algorithm (EDF), therefore we propose as future work to compare the performance of HEF against EDF using the task sets generated by the methodology proposed in this paper.