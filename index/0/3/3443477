We describe the Auto-Tuning Framework (ATF) -- a simple-to-use, generic framework for automatic program optimization by choosing the most suitable values of program parameters, such as number of parallel threads, tile sizes, etc. ATF combines four major advantages over the state-of-the-art auto-tuners: i) it is generic regarding the programming language, application domain, tuning objective, and search technique; ii) it can auto-tune a broader class of applications by allowing tuning parameters to be interdependent, e.g., when a parameter is divisible by another parameter; iii) it allows tuning parameters to have substantially larger ranges by implementing an optimized search space generation process; and iv) it is arguably simpler to use: the ATF user prepares an application for auto-tuning by annotating its source code with simple tuning directives. Our experimental results demonstrate that ATF shows significantly better tuning results as compared to the state-of-the-art auto-tuners OpenTuner and CLTune.