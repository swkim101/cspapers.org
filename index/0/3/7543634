This paper addresses the problem of cache consistency in a client-server database environment. We assume the server provides shared database access for multiple client workstations and that client workstations may cache a portion of the database. Our primary goal is to investigate techniques to maintain the consistency of the client cache and to improve server throughput. We propose a new cache consistency algorithm for client caches. The algorithm is a simple extension to twophase locking and consists of three additional lock modes that must be supported by the server lock manager. For comparison, we devised a second cache consistency algorithm based on notify locks. A simulation model was developed to analyze the performance of the server under the two cache consistency algorithms and under noncaching two-phase locking. The results show that both consistency algorithms can significantly improve server performance over basic two-chase lo&ins. The notifv locks algorithm? at times, ou<performs theâ€™ cache locks *algorithm. But, it IS very sensitive to data contention and server load. Cache locks is always better than two-phase locking and is much more stable than notify locks under all conditions.