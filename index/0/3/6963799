Over the past decade the number of CAD tools used in the design of a complex electronic system has increased significantly. With this increase has come a nightmare of design data management, tool integration problems, design-flow management, and multiple, inconsistent user interfaces. 'CAD Frameworks' promise to solve many or all of these problems by providing a flexible environment for customizing design flow and user-interface, while managing component versions and using a common data model for many or all tools.
But do the existing CAD Frameworks really solve all of these problems or do they only solve the 'easy ones'? Is a single, integrated data model really necessary? Does it even help? What about the role of configuration management? How big do these databases get, anyway? Wouldn't it be better to wait for object-oriented' software technology to solve this problem rather than investing in a framework today? Can third-party tools be added to the framework easily or does the integrator end up writing translators anyway? If a user puts all of their design data into a particular framework, how can they extract it if they want to move to a new framework later? Will there ever be a 'Standard Data Management Interface'? Where do EDIF, VHDL, and other standards fit in? What happens if the existing tools run on a variety of computer types and operating systems?