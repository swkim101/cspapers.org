Many problems of practical interest can be solved using tree search methods because carefully tuned successor ordering heuristics guide the search toward regions of the space that are likely to contain solutions. For some problems, the heuristics often lead directly to a solution— but not always. Limited discrepancy search addresses the problem of what to do when the heuristics fail. Our intuition is that a failing heuristic might well have succeeded if it were not for a small number of "wrong turns" along the way. For a binary tree of height d, there are only d ways the heuristic could make a single wrong turn, and only d(d-i)/2 ways it could make two. A small number of wrong turns can be overcome by systematically searching all paths that differ from the heuristic path in at most a small number of decision points, or "discrepancies." Limited discrepancy search is a backtracking algorithm that searches the nodes of the tree in increasing order of such discrepancies. We show formally and experimentally that limited discrepancy search can be expected to outper-form existing approaches. 1 Introduction In practice, many search problems have spaces that are too large to search exhaustively. One can often find solutions while searching only a small fraction of the space by relying on carefully tuned heuristics to guide the search toward regions of the space that are likely to contain solutions. For many problems, heuristics can lead directly to a solution—most of the time. In this paper, we consider what to do when the heuristics fail. We will focus our attention on procedures for tree search. Our objective is simple: For search problems with heuristically ordered successors, we will develop a search procedure that is more likely to find a solution in any given time limit than existing methods such as chronological backtracking and iterative sampling [Lan-gley, 1992]. The outline of this paper is as follows: In the next section, we discuss existing algorithms. Limited discrepancy search (LDS) is introduced in Section 3 and compared to existing techniques in Section 4. We discuss variations of LDS that we believe will be useful for solving realistic problems in Section 5. We conclude by presenting our experimental results in Section 6. 2 Existing Strategies Consider a tree search problem for which the successor ordering heuristic is so good that it almost always leads directly to a solution. Such problems are common both …