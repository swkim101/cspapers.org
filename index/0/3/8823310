This paper describes an advanced undergraduate course taught at Ohio University which provided students with a meaningful introduction to Ada even though they had no access to an Ada compiler. The course project was to design and implement a parser for an incomplete Ada language. This project effectively united the two course objectives: (i) to understand the relation of language design and software design and development, and (2) to gain some degree of competence in Ada. Appendices contain material which would be of value to others wishing to teach a similar course. Included are useful test programs and a set of syntax diagrams for our Project Ada Languag$. These diagrams, suitable for an LL(1) parser, define a language of approprlate size to base a single-term project. This language is sufficiently complete to capture the essence of the packaging constructs of sequential Ada.