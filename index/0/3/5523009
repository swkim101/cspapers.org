In this paper we study the problem of computing a spanning tree T in a connected graph G = (V, E) so as to maximize the number of vertices of full degree (FDST). These are vertices whose degree in the tree T is the same as their degree in the graph G. First mentioned by Lewinter [5], this problem is central in the work of Pothof and Schut [7], which has to do with water distribution networks. By placing water pressure meters at every vertex of a cotree (set of edges that are the complement of a tree), one can infer the water pressure in every pipe in the network. Thus we are looking for a cotree that is incident on as few vertices as possible (to minimize cost). The savings is exactly the number of full degree vertices in a spanning tree, since these vertices have zero degree in the corresponding cotree and we do not have to install pressure meters at these vertices. Hence we would like to maximize the number of vertices of full degree. Previous Work: Pothof and Schut [7] suggest the following heuristic to maximize the number of full degree vertices. Define the weight of each edge to be the sum of the degrees of the incident vertices, and compute a minimum weight spanning tree. As discussed in their paper, there are cases when their algorithm does very poorly. Consider a wheel graph (a cycle with an additional central vertex with edges to all.vertices on the cycle), then their algorithm may find no vertices of full degree! In fact, for this particular graph our full degree spanning tree algorithm (for arbitrary graphs) finds a spanning tree with f vertices of full degree. Our Results: We provide a brief summary of our results [I] in this extended abstract. This problem is NP-hard even when restricted to planar graphs by a reduction from the MaximumIndependent Set problem, which is known to be NP-complete for planar graphs [3].