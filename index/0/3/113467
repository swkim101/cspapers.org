The Lovász Local Lemma [5] (LLL) is a powerful result in probability theory that states that the probability that none of a set of bad events happens is nonzero if the probability of each event is small compared to the number of events that depend on it. It is often used in combination with the probabilistic method for non-constructive existence proofs. A prominent application is to <i>k</i>-CNF formulas, where LLL implies that, if every clause in the formula shares variables with at most <i>d</i> ≤ <i>2<sup>k</sup> / e</i> other clauses then such a formula has a satisfying assignment. Recently, a randomized algorithm to efficiently construct a satisfying assignment was given by Moser [13]. Subsequently Moser and Tardos [14] gave a randomized algorithm to construct the structures guaranteed by the LLL in a very general algorithmic framework. We address the main problem left open by Moser and Tardos of derandomizing these algorithms efficiently. Specifically, for a <i>k</i>-CNF formula with <i>m</i> clauses and <i>d</i> ≤ <i>2<sup>k/(1+ε)</sup> / e</i> for some ε ε (0, 1), we give an algorithm that finds a satisfying assignment in time <i>Õ(m</i><sup>2(1+1ε)</sup>). This improves upon the deterministic algorithms of Moser and of Moser-Tardos with running times <i>m</i>Ω(<i>k</i><sup>2</sup>) and <i>m</i>Ω(<i>k</i>·1/ε) which are superpolynomial for <i>k</i> = ϖ(1) and upon other previous algorithms which work only for <i>d</i> ≤ 2<sup><i>k</i>/16</sup> / <i>e</i>. Our algorithm works efficiently for the asymmetric version of LLL under the algorithmic framework of Moser and Tardos [14] and is also parallelizable, i.e., has polylogarithmic running time using polynomially many processors.