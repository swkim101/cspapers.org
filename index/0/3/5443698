input abstract event stream abstract resource stream performance component resource interface Figure 6: A simple performance network related to the example in Fig. 1 t ≥ 0. In a similar way, the resource streams are characterized using service functions βu(∆), βl(∆) ∈ R≥0, ∆ ∈ R≥0 provide upper and lower bounds on the available service in any time interval of length ∆. The unit of service depends on the kind of the shared resource, for example instructions (computation) or bytes (communication). Note that as defined above, the VCC’s ᾱu(∆) and ᾱl(∆) are expressed in terms of events (this is marked by a bar on their symbol), while the VCC’s βu(∆) and βl(∆) are expressed in terms of workload/service. A method to transform event-based VCC’s to workload/resource-based VCC’s and vice-versa is presented later in this chapter. All calculations and transformations presented here are valid both with only event-based or with only workload/resource-based VCC’s, but in this chapter mainly the event-based formulation is used. Figure 7 shows arrival curves that specify the basic classical models shown in Fig. 4. Note that in case of sporadic patterns, the lower arrival curves are 0. In a similar way, Figure 8 shows a service curve of a simple TDMA bus access with period T , bandwidth b and slot interval τ . Note that arrival curves can be approximated using linear approximations, i.e. a piecewise linear function. Moreover, there are of course finite representations of the arrival and service curves, for example by decomposing them into an irregular initial part and a periodic part. Where do we get the arrival and service functions from, e.g. those characterizing a processor (CPU in Fig. 6), or an abstract input (Sensor in