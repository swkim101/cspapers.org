Functional dependencies play an important role in relational database design. They are defined in the context of a single relation which at all times must contain tuples with non-null entries. In this paper we examine an extension of the functional dependency interpretation to handle null values, that is, entries in tuples that represent incomplete information in a relational database. A complete axiomatization of inference rules for extended functional dependencies is also presented. Only after having such results is it possible to talk about decompositions and normalization theory in a context of incomplete information. Finally, we show that there are several practical advantages in using nulls and a weaker notion of constraint satisfiability.