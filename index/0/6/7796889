Data Decomposition involves the mapping of array elements to processors of a Distributed Memory Machine with the goal to obtain the best possible performance of a programby keeping communicationcosts low while exploiting parallelism. Data decomposition is typically divided into two subproblems: alignment and partitioning. Alignment deals with the relative allocation of di(cid:11)erent arrays. Partitioning is concerned with the actual distribution of the array elements among processors. Con(cid:13)icting alignments may cause communication. This paper presents a technique for reducing communication by honoring multiple alignments and applies this approach in a distributed memory implementation of the strict functional language Sisal. Multiple alignment leads to recomputation and replication of array elements, which is safe in a functional, and hence side e(cid:11)ect free, setting. We present performance improvements of up to 80% for one dimensional arrays, and up to 50% for two dimensionalarrays, compared to single alignment implementations on a cluster of work-stations.