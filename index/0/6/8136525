We investigate information flow for three distinct kinds of VLSI problems. Included among our results are the following. • The VLSI complexity of sorting-related problems, such as element uniqueness, is analyzed. The chief issue is what proof methodologies can substitute for the literal transport of output data that has been traditionally used to certify information flow for these kinds of problems. • An infinite hierarchy of generalized fooling set information measures is established, and an exponential gap is shown to exist between adjacent levels in the hierarchy. Although this hierarchy provides new proof strategies which can simplify alternative arguments , its basic contribution is to expose hidden weaknesses intrinsic to fooling set formalizations. • The area-time tradeoff is analyzed for a VLSI problem with fewer input bits than data flow. The chief issue turns out to be a nonuniformity in the circuit specification, which impedes the use of Kolmogorov complexity. Transitivity and approximate correct-ness are used to eliminate these irregularities. • We give one of the first methods to account fully for families of networks where the limitations to information flow cannot be analyzed by separator theory. In the process of analyzing these problems, we develop a better understanding of the issues underlying information transfer in VLSI circuits, and develop new ways to account for the intrinsic complexity of VLSI problems and the inherent bottlenecks in some communication networks. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. The question of lower bounds for VLSI sorters is essentially completely solved in the collections of results by [Bilardi andingly, all of the lower bounds proofs need a massive number of output bits (at least an amount proportional to the internal information flow.) Are so many output bits really necessary? We show that essentially the same hounds apply to sorting-like problems which produce far fewer output bits. (The only exception is an AT/IogA tradeoff, due to Bilardi and Preparata, which results, in part, from a flow of output bits that necessarily exceeds the size of the circuit, and which must therefore be pipelined.) We …