In this paper, we solve a widely publicised open problem posed by Peter Winkler in 1988. The problem is to decide whether or not it is possible to partition the vertices of a graph into four non-empty sets A, B, C, and D, such that there is no edge between the sets A and C, and between the sets B and D; and that there is at least one edge between any other pair of sets. Winkler asked whether this problem is NP-complete. He was motivated by a general problem that we explain after introducing the following definitions. In the following, let G and H be graphs. A homomorphism f : G -) H, of G to H, is a mapping f of the vertices of G to the vertices of H, such that if g and g’ are adjacent vertices of G then f(g) and f(g’) are either adjacent vertices of H or the same vertex of H. Note that we have deviated slightly from the usual definition of a homomorphism by allowing two adjacent vertices of G to map to the same vertex of H. A compaction c : G -* H, of G to H, is a homomorphism of G to H, such that for every vertex x of H, there exists a vertex v of G with C(V) = x, and for every edge hh’ of H, there exists an edge gg’ of G with c(g) = h and c(d) = h’. Notice that the first part of the definition for a compaction (the requirement for every vertex x of H) follows from the second part unless H has isolated vertices. If there exists a compaction of G to H then G is said to compact to H. Now suppose that H is an induced subgraph of G. A retraction r : G ‘+ H, of G to H, is a homomorphism of G to H, such that r(h) = h, for every vertex h of H. If there exists a retraction of G to H then G is said to retract to H, and H is said to, be a retract of G. We shall denote a k-cycle by Ck. The problem of deciding the existence of a compaction to a fixed graph H, called the compaction problem for H, and denoted as COMP-IT, is the following : Instance : A graph G. Question : Does G compact to H? Note that Winkler’s problem is the problem COMPCJ. When both G and H are input graphs (Le., H is not fixed), the problem of deciding whether or not G -01 of Computing Science, Simon Fraser &iversity, Bum‘aby, British Columbia, Canada V5A lS6. compacts to H has been studied by Almira Karabeg and Dino Karabeg. The problem of deciding the existence of a retraction to a fixed graph H, called the retraction problem for H, and denoted as RET-H, asks whether or not an input graph G, containing H as an induced subgraph, retracts to H _ Retraction problems have been of continuing interest in graph theory and have considerable literature. It is not difficult to show that for every fixed graph H, if RET-H is solvable in polynomial time then COMPH is also solvable in polynomial time. Is the converse true? This was the general problem that motivated Winkler. It turns out that RET-C4 is NP-complete, but for any graph H, other than Cd, with at most four vertices: RET-H is polynomial time solvable. In other words, the unique smallest graph H for which RETH is NP-complete is C4. This observation was made by Tomas Feder and Peter Winkler, and led Winlrler to ask specifically the following question in 1988 which has been a popular open problem : Is COMP-Cd NPcomplete? We show that COMP-C4 is NP-complete. To show this, we give a transformation from RET-Cd to COMP-Cd, using the technique explained below. Let a graph G containing H as an induced subgraph be an instance of RET-H. When we give a transformation from RET-H to COMP-H, we do the following. We construct in time polynomial in the size of G, a graph G’ (containing G as an induced subgraph), such that the following statements (i), (ii), and (iii) are equivalent : (i) G retracts to H. (ii) G’ retracts to H. (iii) G’ compacts to H. Thus if RET-H is NP-complete, this shows that COMPHis also NP-complete. It is this technique that we have used throughout, when giving a transformation from RET-H to COMP-H, for any graph H. We prove the equivalence of the above statements by showing that (i) is equivalent to (ii), and (ii) is equivalent to (iii). Feder extended the proof of NP-completeness of RET-C4 to apply to any cycle Ck, k 1 4 (the same result was proved independently by Gary MacGillivray). Correspondingly, we show that COMP-Ck is also NPcomplete, for all k 2 4. We show this by giving a