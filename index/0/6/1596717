Patterns are a valuable method for communicating software engineering expertise about proven solutions for common problems. This paper evaluates the use of domain-independent patterns in a case study of Etherware, a middleware for networked control with a real-time, safety-critical applications model. The case study illustrates the positive and negative impact that four existing patterns have on availability, reliability, and robustness for real-time, safety-critical systems. In particular, we observe Etherware's specialized usage of the filter pattern, confirm this usage among other middleware technologies, and subsequently present the adaptive control filter, a design pattern for real-time, safety-critical middleware which can mitigate timing dependencies in networked control