A central problem in parameterized algorithms is to obtain algorithms with running time <i>f</i>(<i>k</i>) · <i>n</i><sup><i>O</i>(1)</sup> such that <i>f</i> is as slow growing function of the parameter <i>k</i> as possible. In particular, the first natural goal is to make <i>f</i>(<i>k</i>) single-exponential, that is, <i>c</i><sup><i>k</i></sup> for some constant <i>c</i>. This has led to the development of parameterized algorithms for various problems where <i>f</i>(<i>k</i>) appearing in their running time is of form 2<sup><i>O</i>(<i>k</i>)</sup>. However there are still plenty of problems where the "slightly superexponential" <i>f</i>(<i>k</i>) appearing in the best known running time has remained non single-exponential even after a lot of attempts to bring it down. A natural question to ask is whether the <i>f</i>(<i>k</i>) appearing in the running time of the best-known algorithms is optimal for any of these problems.
 In this paper, we examine parameterized problems where <i>f</i>(<i>k</i>) is <i>k</i><sup><i>O</i>(<i>k</i>)</sup> = 2<sup><i>O</i>(<i>k</i> log <i>k</i>)</sup> in the best known running time and for a number of such problems, we show that the dependence on <i>k</i> in the running time cannot be improved to single exponential. More precisely we prove following tight lower bounds, for three natural problems, arising from three different domains:
 • The pattern matching problem Closest String is known to be solvable in time 2<sup><i>O</i>(<i>d</i> log <i>d</i>)</sup> · <i>n</i><sup><i>O</i>(1)</sup> and 2<sup><i>O</i>(<i>d</i> log|Σ|)</sup> · <i>n</i><sup><i>O</i>(1)</sup>. We show that there is no 2<sup><i>o</i>(<i>d</i> log <i>d</i>)</sup> · n<sup><i>O</i>(1)</sup> and 2<sup><i>o</i>(<i>d</i>log|Σ|)</sup> · <i>n</i><sup><i>O</i>(1)</sup> time algorithm, unless Exponential Time Hypothesis (ETH) fails.
 • The graph embedding problem Distortion, that is, deciding whether a graph <i>G</i> has a metric embedding into the integers with distortion at most <i>d</i> can be done in time 2<sup><i>O</i>(<i>d</i> log <i>d</i>)</sup> · <i>n</i><sup><i>O</i>(1)</sup>. We show that there is no 2<sup><i>o</i>(<i>d</i> log <i>d</i>)</sup> · <i>n</i><sup><i>O</i>(1)</sup> time algorithm, unless ETH fails.
 • The Disjoint Paths problem can be solved in time in time 2<sup><i>O</i>(<i>w</i> log <i>w</i>)</sup> · <i>n</i><sup><i>O</i>(1)</sup> on graphs of treewidth at most <i>w</i>. We show that there is no 2<sup><i>o</i>(<i>w</i> log <i>w</i>)</sup> · <i>n</i><sup><i>O</i>(1)</sup> time algorithm, unless ETH fails.
 To obtain our result we first prove the lower bound for variants of basic problems: finding cliques, independent sets, and hitting sets. These artificially constrained variants form a good starting point for proving lower bounds on natural problems without any technical restrictions and could be of independent interest. We believe that many further results of this form can be obtained by using the framework of the current paper.