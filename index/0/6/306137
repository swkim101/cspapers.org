Array bound checking and array dependency analysis (for parallelization) have been widely studied. However, there are much less results about analyzing properties of array <i>contents</i>. In this paper, we propose a way of using abstract interpretation for <i>discovering</i> properties about array contents in some restricted cases: one-dimensional arrays, traversed by simple "for" loops. The basic idea, borrowed from [GRS05], consists in partitioning arrays into symbolic intervals (e.g., [1,<i>i</i> -- 1], [<i>i</i>,<i>i</i>], [<i>i</i> + 1,<i>n</i>]), and in associating with each such interval <i>I</i> and each array <i>A</i> an abstract variable <i>A</i><sub><i>I</i></sub>; the new idea is to consider <i>relational</i> abstract properties ψ(<i>A</i><sub><i>I</i></sub>, <i>B</i><sub><i>I</i></sub>, ...) about these abstract variables, and to interpret such a property pointwise on the interval <i>I</i>: ∀<i>l</i> ∈ <i>I</i>, ψ(<i>A</i>[<i>l</i>], <i>B</i>[<i>l</i>],...). The abstract semantics of our simple programs according to these abstract properties has been defined and implemented in a prototype tool. The method is able, for instance, to discover that the result of an insertion sort is a sorted array, or that, in an array traversal guarded by a "sentinel", the index stays within the bounds.