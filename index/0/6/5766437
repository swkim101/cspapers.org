Search engines provide a mapping from queries to documents.Additionally, that mapping is often considered to be one-to-many,as, in most cases, many documents are considered relevant by asearch engine to a given query. However, that mapping is reallymany-to-many, as a particular document is often consideredrel-evant to many queries. More speciﬁcally, the mapping may beviewed as a directed bipartite graph where a set of queries mapsto a set of documents.Mining that graph permits the discovery of meaningful relation-ships of entities in the graph. For example, related URLs can befound in a two-step graph exploration (as shown by the ﬁrst twosteps in Figure 1). Finding related queries can be performed analo-gously, starting with the given query.The savvy content provider realizes the potential for a searchengine to send trafﬁc to a website. As a result, content provi derswill often attempt to optimize particular pages to rank highly inthe results of a particular query. By analyzing Web server logs, thecontent provider is able to determine which queries are successfullysending visitors to the site. However, the content provider has onlya narrow view of what queries might be utilized to ﬁnd the site— the queries found in the web site log and intuition about oth erpossible queries. The content provider does not have a global viewof what queries are made, and in particular does not know whatrelevant queries exist that probably should rank his site highly, butdo not.Our system is able to suggest such queries. Westart with a mech-anism that ﬁnds related Web sites, but extend it one addition al step(as illustrated in Figure 1). We take the related URLs and ﬁnd theset of queries that generate them, and remove those queries that alsoinclude the starting site. We rank this set of queries by the numberof URLs that the query has in common with the set of URLs relatedto the starting URL.