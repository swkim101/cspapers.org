It is well established that access patterns to encrypted data can leak a considerable amount of sensitive information [13]. Oblivious RAM (or ORAM for short) [5–11, 14, 18–20, 26, 28], originally proposed by Goldreich and Ostrovsky [8], is a cryptographic construction that allows a client to access encrypted data residing on an untrusted storage server, while completely hiding the access patterns to storage. Particularly, the sequence of physical addresses accessed is independent of the actual data that the user is accessing. To achieve this, existing ORAM constructions [5–11,14,18–20, 26,28] continuously re-encrypt and and reshuffle data blocks on the storage server, to cryptographically conceal the logical access pattern. Aside from storage outsourcing applications, ORAM (in combination with trusted hardware in the cloud) has also been proposed to protect user privacy in a broad range of online services such as behavioral advertising, location and map services, web search, and so on [4, 15]. While the idea of relying on trusted hardware and oblivious RAM to enable access privacy in cloud services is promising, for such an approach to become practical, a key challenge is the practical efficiency of ORAM. ORAM was initially proposed and studied mostly as a theoretic concept. However, several recent works demonstrated the potential of making ORAM practical in real-world scenarios [15, 25, 28, 29].