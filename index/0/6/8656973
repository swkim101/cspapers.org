This paper describes a LISP program that can learn English syntactic rules The key idea is that the learning can be made easy, given the right initial computational structure: syntactic knowledge is separated into a fixed mterpicter and a variable set of highly constrained pattern-action grammar rules Only the grammar rules are learned, via induction from example sentences presented to the program. The interpreter is a simplified version of Marcus's parser for English [I], which parses sentences without backup. The currently implemented program acquires about 707 of a simplified core grammar of English What seems to make the induction easy is that the rule structures and their actions are highly constrained: there are only four actions, and they manipulate only very local parts of the parse tree.