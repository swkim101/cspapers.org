In this paper, we formulate and provide optimal solutions for abroad class of problems in which a decisionmaker is required to select from among numerous competing options. The goal of the decision-maker is to select the option that will have the best future performance. This task is made difficult by the constraint that the decision-maker has no way to predict the future performance of any of the options. Somewhat surprisingly, we find that the decision-maker can still (at least in several important scenarios) pick a winner with high probability y. Our result has several applications. For example, consider the problem of scheduhng background jobs on a network of workstations (NOW) when very little is known about the future speed or availability of each workstation. In this problem, the goal is to schedule each job on a workstation which will have enough idle capacity to complete the j ob within a reasonable or specified amount of time. This task is complicated by the fact that any particular workstation might become saturated by higher priority jobs shortly after one of our jobs is assigned to it, in which case progress will not ● Johns Hopkins University and Lab. for Computer Science, MIT Supported by Air Force Contract TNDGAFOSR-86-O078, ARO contract DAAL03-86-K-0171, NSF contract 9114440-CCR, DARPA contract NOOO14-J-92-1799, and a special grant from IBM. E-Mail: baruch@theory.lcs. mit,edu. tDepartment of Computer Science, Tel Aviv University. EMad azar~math. tau.ac.il. Research supported in part by AlIon Fellowship and by the Israel Science Foundation administered by the Israel Academy of Sciences tDepartment of Computer Science, Tel-Aviv University, Israel E-Mail fiat@?math. tau ac 11. Research supported m part by the Israel Sc]ence Foundation admimstered by the Israel Academy of Sciences. SMathematics Department and Lab for COmPuter SCIence. MIT E-Mad: ftl@math.mit.edu Research SUDDOrted in part ‘by ARPA Contract NOO014-95-1-1246 and Arm~’Contract DAAH04-95-1-0607. be made on our job. Thus, in order to complete the jobs within a specified amount of time, we need to be able to accurately guess (or predict) which workstations will be idle and when. Somewhat surprisingly, it is possible to make such guesses with a very high degree of accuracy, even though very little is assumed about the future availability y of the workstations. For example, if at least k of n workstations will be available for at least D units of time each (spread out over some interval of 1 units of time), then with probability at least 1 – 0(1/n), we will be able to complete k log n jobs with duration !2(D/ log n) within the interval. The result holds for all k, d, n, and 1, and only knowledge of n is needed in order to schedule the tasks. For small values of k, the result is far superior to the (seemingly optimal) “dartthrowing” approach in which each job is assigned to a random workstation in the hope that it will be idle. Our results can also be used to provide the first competitive algorithm for the video-on-demand scheduling problem as well as the more general on-line set cover problem. The results may also be of int crest in the context of investment planning, strategic planning, and other areas where it is important to be able to predict the future moves of an adversary or a market.