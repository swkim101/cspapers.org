Given an undirected unweighted graph <i>G = (V, E)</i> and an integer <i>k</i> ≥ 1, we consider the problem of computing the edge connectivities of all those (<i>s, t</i>) vertex pairs, whose edge connectivity is at most <i>k</i>. We present an algorithm with expected running time <i>Õ</i>(<i>m</i> + <i>nk</i><sup>3</sup>) for this problem, where |V| = <i>n</i> and |<i>E</i>| = <i>m</i>. Our output is a weighted tree <i>T</i> whose nodes are the sets <i>V</i><inf>1</inf>, <i>V</i><inf>2</inf>,..., <i>V l</i> of a partition of <i>V</i>, with the property that the edge connectivity in <i>G</i> between any two vertices <i>s</i> ε <i>V</i><inf><i>i</i></inf> and <i>t</i> ε <i>V</i><inf><i>j</i></inf>, for <i>i</i> ≠ <i>j</i>, is equal to the weight of the lightest edge on the path between <i>V</i><inf><i>i</i></inf> and <i>V</i><inf><i>j</i></inf> in <i>T</i>. Also, two vertices <i>s</i> and <i>t</i> belong to the same <i>V</i><inf><i>i</i></inf> for any <i>i</i> if and only if they have an edge connectivity greater than <i>k</i>. Currently, the best algorithm for this problem needs to compute all-pairs min-cuts in an <i>O</i>(<i>nk</i>) edge graph; this takes <i>Õ</i>(<i>m</i> + <i>n</i><sup>5/2</sup><i>k</i>min{<i>k</i><sup>1/2</sup>, <i>n</i><sup>1/6</sup>}) time. Our algorithm is much faster for small values of <i>k</i>; in fact, it is faster whenever <i>k</i> is <i>o</i>(<i>n</i><sup>5/6</sup>).
 Our algorithm yields the useful corollary that in <i>Õ</i>(<i>m</i> + <i>nc</i><sup>3</sup>) time, where <i>c</i> is the size of the global min-cut, we can compute the edge connectivities of all those pairs of vertices whose edge connectivity is at most α<i>c</i> for some constant α. We also present an <i>Õ</i>(<i>m</i> + <i>n</i>) Monte Carlo algorithm for the approximate version of this problem. This algorithm is applicable to weighted graphs as well. Our algorithm, with some modifications, also solves another problem called the minimum T-cut problem. Given T ⊆ <i>V</i> of <i>even</i> cardinality, we present an <i>Õ</i>(<i>m</i> + <i>nk</i><sup>3</sup>) algorithm to compute a minimum cut that splits T into two odd cardinality components, where <i>k</i> is the size of this cut.