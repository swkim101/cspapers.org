While the integration of refactoring tools into many development environments has increased, the usability of these tools has remained stagnant. Specifically, when refactorings fail, tools communicate the failure to the programmer poorly, causing the programmer to restructure slowly, conservatively, and without preserving behavior. In the accompanying poster, I show how refactoring correctness, speed, and user satisfaction can be measurably increased by improving the usability of refactoring tools. In the long run, better usability will aid in the adoption and utilization of refactoring tools.