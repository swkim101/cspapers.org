Reed-Muller codes are some of the oldest and most widely studied error-correcting codes, of interest for both their algebraic structure as well as their many algorithmic properties. A recent beautiful result of Saptharishi, Shpilka and Volk showed that for binary Reed-Muller codes of length $n$ and distance $d = O(1)$, one can correct $\operatorname{polylog}(n)$ random errors in $\operatorname{poly}(n)$ time (which is well beyond the worst-case error tolerance of $O(1)$). 
In this paper, we consider the problem of `syndrome decoding' Reed-Muller codes from random errors. More specifically, given the $\operatorname{polylog}(n)$-bit long syndrome vector of a codeword corrupted in $\operatorname{polylog}(n)$ random coordinates, we would like to compute the locations of the codeword corruptions. This problem turns out to be equivalent to a basic question about computing tensor decomposition of random low-rank tensors over finite fields. 
Our main result is that syndrome decoding of Reed-Muller codes (and the equivalent tensor decomposition problem) can be solved efficiently, i.e., in $\operatorname{polylog}(n)$ time. We give two algorithms for this problem: 
1. The first algorithm is a finite field variant of a classical algorithm for tensor decomposition over real numbers due to Jennrich. This also gives an alternate proof for the main result of Saptharishi et al. 
2. The second algorithm is obtained by implementing the steps of the Berlekamp-Welch-style decoding algorithm of Saptharishi et al. in sublinear-time. The main new ingredient is an algorithm for solving certain kinds of systems of polynomial equations.