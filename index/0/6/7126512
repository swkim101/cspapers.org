Over the past ten years a broad consensus has developed that decomposing applications into separate computational and interface modules is desirable. The motivations for modularity in user interfaces are similar to those elsewhere in computer science, and center around the benefits of hiding internal implementations from other modules in a system. Modularity allows reuse of each component with compatible versions of the other components, and allows separate development processes for each component. In user interfaces, modularity allows the reuse of applications with different interfaces, perhaps for different user classes, window systems, or devices. Modularity also allows application and interface experts, including human factors engineers and graphic designers, to cooperate while minimizing the coordination required among them.