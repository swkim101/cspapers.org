A Simple (constructive Computability Theorem for wait-free ~omputation In modern shared-memory multiprocessors, processes can be halted or delayed without warning by interrupts, pre-emption, or cache misses. In such environments, it is desirable to design synchronization protocols that are wait-free: any processes that continues to run will finish the protocol in a fixed number of steps, regardless of delays or failures by other processes. Not all synchronization problems have wait-free solutions. In this paper, we give a new, remarkably simple necessary and sufficient combinatorial condition characterizing the problems that have wait-free solutions using shared read/write memory. We associate the range of possible input and output values for any synchronization problem with a high-dimensional geometric structure called a simplicial complex. We show that a synchronization problem has a wait-free solution if and only if its input complex can be continuously “stretched and folded” to cover its output complex. The key to the new theorem is a novel “simplex agreement” protocol, allowing processes to converge asynchronously to a common simplex of a simplicial complex. The proof exploits a number of classical results from algebraic and combinatorial topology. Permission to copy without fee all or part of thk material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association of Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. STOC 945/94 Montreal, Quebec, Canada @ 1984 ACM 0-89791 -663-8/84/0005..$3.50 Nir Shavit Computer Science Department Tel-Aviv University shanir@math. tau. ac.il