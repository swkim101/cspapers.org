The Java platform facilitates to dynamically load and execute code from remote sources which can threaten the security and integrity of a system and the privacy of its users. To address these problems, Java includes a security architecture which is based on a closed policy model. Although this model is su cient to specify arbitrary policies, it easily may become cumbersome to use and is not well-suited for administering a consistent security policy for a complete network. The Java Secure Execution Framework (JSEF) overcomes these drawbacks: it introduces higher-level abstractions which enhance the expressiveness of policy rules; it simpli es the maintenance of security con gurations; and it provides additional functionality and tools to make administration less error-prone. In JSEF we propose a hybrid policy model which supports additive and subtractive permissions with a denial-take-precedence rule to resolve conicts. Security pro les can be expressed in terms of hierarchical groups where a subgroup inherits the policy de ned by its parent. All members of a group share the same set of permissions and users can be members of an arbitrary number of groups. JSEF's administrative model supports the de nition of a network-wide policy which users can tailor to their needs but not break. At runtime JSEF enforces the de ned security policy and supports security negotiation in case of insu cient permissions. A set of graphical tools supports the user in de ning security policies and con guring JSEF.