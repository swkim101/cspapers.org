of the Forest Management Advisory Systems Yousong Chang and Donald Nute Artificial Intelligence Programs University of Georgia Athens, GA 30602 E-mail:ychang@ai.uga.edu Expert system technology is a powerful tool for enhancing the decision making capabilities of nonexperts with reasonable knowledge of a domain to expert level in that domain. U.S.D.A. Forest Service has been working on forest management expert systems for several years. However, building different expert systems for each kind of forest is a demanding task. To develop a complete expert system in a high level language, we think the best approach to take is the toolkit approach. The idea is to develop separate modules for different kinds of inferencing, different kinds of user interaction, and different kinds of explanatory facilities. So we developed a toolkit mostly in Prolog for building expert systems for forest management. The first components of the toolkit were developed in Visual Basic, Hypertxt for Windows, Windows Notepad, and LPA Prolog for Windows to support development of a management system for red pine forests. This first system is called Red Pine Forest Management Advisory System (RPFMAS). The same tools used in RPFMAS were then used to develop a system for aspen forests . Our toolkit architecture includes three logical levels: a domain level, a tactical level, and a strategic level. The domain level should support as many different knowledge representation schemes as possible. We now support three structures. (1) facts and rules with or without MYCIN-like certainty factors (2) Prolog databases (3) procedures The tactical level includes the inference engines and the user interface. We now have: (1) backward chaining (2) forward chaining (3) mixed backward and forward chaining Backward and forward chaining will support reasoning with incomplete or uncertain information using either MYCIN-like certainty factors or defeasible rules. The RPFMAS supports incomplete but certain information. The user interface provides a variety of methods for collecting task-specific information from the user and for communicating conclusions to the user. The user interface of RPFMAS allows reasonable opportunity for the user to review and to change responses without the need to restart the consultation. The explanatory facility, controlled by Visual Basic through DDE to Hypertxt for Windows, provides explanations for questions asked and for conclusions offered. The strategic level includes tools combining different components of the tactical level to produce-a consultation driver suitable for a particular application. It is at this level that the control structure for an entire system is developed. This level includes a variety of tools to help the developer test and tune systems at the domain, the tactical, and the strategic levels. The basic architecture for our toolkit is a blackboard system implemented in Prolog. Each module reads the blackboard and becomes active when appropriate. Non-Prolog modules are activated by Prolog demons which read the blackboard for them. The major modules in the RPFMAS are shown below. All the modules are written in Prolog except “Growth simulator” in Visual Basic, “Explanatory facilities” in Visual Basic and Hypertxt, “Trace” in Windows Notepad. Figure 1: RPFMAS architecture