This paper presents a new model of object database applications for use in performance modeling. Uncler our approach, the essential features of the application source code wit h respect to persistent data access are captured in a graphical form. This graph is annotated with statistics representative of a typical application execution and with hints about expected patt ems of locality in data access. The graph is then traversed while the cache contents at the application client are estimated for each node in the graph, eventually producing an estimate of disk page fetches and netwc,rk messages for a page-server object database. The novel features of this approach, compared to the usual approach based on object reference traces, are its efficiency in performance modeling due to the compact representation of application execution, the ease with which it can be used to identify bottleneck areas in application code, and the ability to tune the accuracy of the applicationâ€™s representation so that bottleneck areaa are modeled more precisely. In addition, our approach allows the software engineer to locate performance problems early in the design of the object database application, and easily estimate the effect of high-level changes in application code.