ion is appfied to individud events. Hence, the output of the abstraction layer is a set of abstracted events. The represent ation of the output events is free of sensor dependencies. EJI = {E~, .... E.} = {abstrE{), .... abstrE~)} = {abstr(71, T;, L;, 01)),..., abstr(Tn, T;, L;, O;))} = {(T1,L1, 01), .... (T*, L”, On)} 7.1 Translation properties At this point, we would fike to devote some attention to the translation functions (time, 10C,obj). To be useM, these functions must satisfy correctness and complete ness properties. Let P ~ {time’, 10C’, obj’} be a translation finction, and represent ation domains D’ and D ~~~tr,such that ~: D’ + Do~,tr. We compose dl P for a set of sensor types T into a single function: f.h,tr: (T, d’) * ~(d’), d’ ~ D’ and T E T ktuitively, a correct translation does not change the semantic meaning of the translated symbols. This notion of correctness is mathematically expressed as a 208 homomorphism, a relationship-preserving mapping. h our case, the relevant relationships are semantic equivalence =S (relating symbols corresponding to the same red-fife entity), and semantic ordering <~ (relating symbols which refer to objects that are semmticdy ordered). Property 1 A translation function f.b~~, is correct, if, and only if, it satisfies the following constraints: (VT1,T2 c T).(Vd” c D“).(Vd”2 E D’2). (f=~~~,(T~, d’1) =. fOb,,,(T~, dT2)) & (d~’ =, dT2) (VTI,T2 G T).(Vd’l c D’1).(Vd’2 c D’2). (fa~,tr(T1, dTl)<. fa~,~r(T~, d72))e (d~l<, d72)