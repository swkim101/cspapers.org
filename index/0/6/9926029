Most extensible database systems support addition of new indexes or new data types. However, the reference patterns exhibited by these new indexes may not be efficiently supported by existing buffer replacement strategies. In this paper, we propose a new mechanism that allows an index method to pass replacement hints to the buffer manager by assigning priority values to the buffer pages to reflect the desired replacement criteria. The proposed approach provides more flexible control over the replacement criteria as different semantics can be encoded using priority values which can also be changed dynamically. Buffer replacement thus becomes extensible since it is possible to customize a strategy to exploit lmowledge about the reference pattern of the application. This extensibility also facilitates the design and fine tuning of better replacement strategies. The approach is illustrated with a hierarchical index example. Experimental results show that a customized priority-based replacement strategy outperforms the commonly used LRU stra-