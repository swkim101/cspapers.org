We present a general approximation technique for a large class of graph problems. Our technique mostly applies to problems of covering, at minimum cost, the vertices of a graph with trees, cycles or paths satisfying certain requirements. In particular, many basic combinatorial optimization problems fit in this framework, including the shortest path, minimum spanning tree, minimum-weight perfect matching, traveling salesman and Steiner tree problems.
Our technique produces approximation algorithms that run in <italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt> log <italic>n</italic>) time and come within a factor of 2 of optimal for most of these problems. For instance, we obtain a 2-approximation algorithm for the minimum-weight perfect matching problem under the triangle inequality. Our running time of <italic>O</italic>(<italic>n</italic><supscrpt>2</supscrpt> log <italic>n</italic>) time compares favorably with the best strongly polynomial exact algorithms running in <italic>O</italic>(<italic>n</italic><supscrpt>3</supscrpt>) time for dense graphs. A similar result is obtained for the 2-matching problem and its variants.We also derive the first approximation algorithms for many NP-complete problems, including the non-fixed point-to-point connection problem, the exact path partitioning problem and complex location-design problems. Moreover, for the prize-collecting traveling salesman or Steiner tree problems, we obtain 2-approximation algorithms, therefore improving the previously best-known performance guarantees of 2.5 and 3, respectively [4].