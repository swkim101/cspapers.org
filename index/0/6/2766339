This paper is concerned with distributed algorithm for finding shortest paths in an asynchronous communication network. For the problem of Breadth First Search, the best previously known algorithms required either &THgr;(<italic>V</italic>) time, or &THgr; (<italic>E</italic> + <italic>V</italic> · <italic>D</italic>) communication. We present new algorithm, which requires <italic>O</italic>(<italic>D</italic><supscrpt>1+ε</supscrpt>) time, and <italic>O</italic>(<italic>E</italic><supscrpt>1+ε</supscrpt>) messages, for any ε > 0. (Here, <italic>V</italic> is number of nodes, <italic>E</italic> is number of edges and <italic>D</italic> is the diameter.) This constitutes a major step towards achieving the lower bounds, which are &OHgr;(<italic>E</italic>) communication and &OHgr;(<italic>D</italic>) time.
For the general (weighted) shortest paths problem, previously known shortest-paths algorithms required <italic>O</italic>(<italic>k</italic> · <italic>V</italic><supscrpt>2</supscrpt>) messages and <italic>O</italic>(<italic>V</italic> · log<subscrpt><italic>k</italic></subscrpt> <italic>V</italic>) time. Our algorithm requires <italic>O</italic>(<italic>E</italic><supscrpt>1 + ε</supscrpt> · log <italic>W</italic>) messages and <italic>O</italic> (<italic>V</italic><supscrpt>1 + ε</supscrpt> · log <italic>W</italic>) time.
Our results enable to improve significantly solutions for other basic network problems (e.g. leader election).