This study investigated the difficulties encountered by novice Alice programmers. The researchers conducted one-on-one clinical interviews with 22 10th-grade students at a senior high school in Taipei, Taiwan. The participants were offered nine Alice programming tasks, each requiring the use of a different set of programming constructs, which included objects, primitive methods, expressions, built-in functions, variables, conditional execution, repetition control, arrays, user-defined methods, and parameter passing. Each participant was observed closely as s/he worked through the given tasks. Whenever an impasse occurred while a student was trying to solve a problem, the observer would intervene by asking a sequence of questions with increasing specificity, ranging from strategic prompts to hints to provides, in order to determine the cause of the impasse. This study summarized the common difficulties for each of the Alice programming constructs used by the participants in the programming tasks, and students' difficulties were categorized into four types: connection, location, usage, and math-and-other difficulties. Students having connection difficulties were unable to apply appropriate programming constructs to implement the actions required; location difficulties indicated students? inability to locating, in the Alice interface, the programming constructs they needed; usage difficulties referred in general to semantic errors in a student's programs; whereas math-and-other difficulties were caused mainly by students' inadequate math knowledge. It is hoped that the findings of this research will help Alice instructors to improve their students' performance by familiarizing themselves with the existence of the identified difficulties, and by addressing the missing conceptions or misconceptions underlying those difficulties.