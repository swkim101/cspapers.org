There is an increasing spread of flexible software applications that can be modified by adding components (sometimes called plug-ins or add-ons). A popular example in the software development domain is Eclipse, a flexible development environment that can be extended with literally thousands of different plug-ins. However, searching, installing and configuring new plug-ins requires complex overhead work that is only weakly addressed by existing support mechanisms. Recent research has highlighted the related practices of learning about new plug-ins and tailoring software tools as being highly cooperative, situated, socially embedded, and often connected to particular work situations. Based on an empirical study in small software enterprises, we develop an understanding of appropriation as a social and collaborative activity. We then suggest design principles for appropriation support that are grounded in the practices we have found in the field, and present a prototypical implementation of the concept that extends existing mechanisms of sharing tools and tool-knowledge.