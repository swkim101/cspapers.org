We present space-time tradeoffs for approximate spherical range counting queries. Given a set <i>S</i> of <i>n</i> data points in R<sup>d</sup> along with a positive approximation factor ε, the goal is to preprocess the points so that, given any Euclidean ball <i>B</i>, we can return the number of points of any subset of <i>S</i> that contains all the points within a (1 - ε)-factor contraction of <i>B</i>, but contains no points that lie outside a (1 + ε)-factor expansion of <i>B.</i>In many applications of range searching it is desirable to offer a tradeoff between space and query time. We present here the first such tradeoffs for approximate range counting queries. Given 0 < ε ≤ 1/2 and a parameter γ, where 2 ≤ γ ≤ 1/ε, we show how to construct a data structure of space <i>O</i>(<i>n</i>γ<sup><i>d</i></sup> log (1/ε)) that allows us to answer ε-approximate spherical range counting queries in time <i>O</i>(log(<i>n</i>γ) + 1/(<i>εγ</i><sup><i>d</i>-1</sup>). The data structure can be built in time <i>O</i>(<i>nγ</i><sup><i>d</i></sup> log (<i>n</i>/ε)) log (1/ε)). Here <i>n</i>, ε, and γ are asymptotic quantities, and the dimension <i>d</i> is assumed to be a fixed constant.At one extreme (low space), this yields a data structure of space <i>O</i>(<i>n</i> log (1/<i>e</i>)) that can answer approximate range queries in time <i>O</i>(log<i>n</i> + 1/(<i>e</i><sup>d-1</sup>) which, up to a factor of <i>O</i>(<i>n</i> log (1/<i>e</i>) in space, matches the best known result for approximate spherical range counting queries. At the other extreme (high space), it yields a data structure of space <i>O</i>((<i>n</i>/<i>e</i><sup><i>d</i></sup>) log(1/ε)) that can answer queries in time <i>O</i>(log<i>n</i> + 1/ε). This is the fastest known query time for this problem.We also show how to adapt these data structures to the problem of computing an ε-approximation to the <i>k</i>th nearest neighbor, where <i>k</i> is any integer from 1 to <i>n</i> given at query time. The space bounds are identical to the range searching results, and the query time is larger only by a factor of <i>O</i>(1/(εγ)).Our approach is broadly based on methods developed for approximate Voronoi diagrams (AVDs), but it involves a number of significant extensions from the context of nearest neighbor searching to range searching. These include generalizing AVD node-separation properties from leaves to internal nodes of the tree and constructing efficient generator sets through a radial decomposition of space. We have also developed new arguments to analyze the time and space requirements in this more general setting.