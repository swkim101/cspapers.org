Let <i>G</i> be an <i>n</i>-vertex plane graph with non-negative edge weights, and let <i>k</i> terminal pairs be specified on <i>h</i> face boundaries. We present an algorithm to find <i>k</i> non-crossing walks in <i>G</i> of minimum total length that connect all terminal pairs, if any such walks exist, in 2<sup>O(h<sup>2</sup>)</sup><i>n</i> log <i>k</i> time. The computed walks may overlap but may not cross each other or themselves. Our algorithm generalizes a result of Takahashi, Suzuki, and Nishizeki [<i>Algorithmica</i> 1996] for the special case <i>h</i> ≤ 2. We also describe an algorithm for the corresponding geometric problem, where the terminal points lie on the boundary of <i>h</i> polygonal obstacles of total complexity <i>n</i>, again in 2<sup>O(h<sup>2</sup>)</sup><i>n</i> time, generalizing an algorithm of Papadopoulou [<i>Int. J. Comput. Geom. Appl</i>. 1999] for the special case <i>h</i> ≤ 2. In both settings, shortest non-crossing walks can have complexity exponential in <i>h</i>. We also describe algorithms to determine in <i>O</i>(<i>n</i>) time whether the terminal pairs can be connected by <i>any</i> non-crossing walks.