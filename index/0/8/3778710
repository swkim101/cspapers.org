In this paper, we consider the problem of file synchronization when a mobile host shares files with a backbone file server in a network file system. Several diff schemes have been proposed to improve upon the transfer overheads of conventional file synchronization approaches which use full file transfer. These schemes compute the binary diff of the new file with respect to the old copy at the server and transfer the computed diff to the server for file-synchronization. However, Lee et al. have shown that the performance of diff can be significantly improved upon by shipping user operations as opposed to the data itself. Using this as motivation, we present a purely application-unaware approach called Mimic that relies on transferring raw user activity to the server for file synchronization. Through a simple prototype of the proposed approach, we show that Mimic can outperform diff under many common conditions. We also identify conditions under which diff based approaches do perform better than the proposed approach, but show that detection of such conditions is straightforward, thus enabling both schemes to be used in tandem with a mobile file system for bandwidth-efficient file synchronization.