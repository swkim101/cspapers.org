Mutation analysis is a software testing methodology designed to substantiate the correctness of a program &PHgr;. The mutation approach is to induce syntactically correct changes in &PHgr;, thereby creating a set of mutant programs. The goal of a tester is to construct a set of test data T that distinguishes the output of &PHgr;(T) from that of all mutant programs. Test data sensitive enough to distinguish al1 mutant programs is deemed adequate to infer the probable correctness of &PHgr;.
We propose an algorithm designed to exploit the architecture of a vector processor like the Cyber 205 or Cray X/MP. The algorithm manages the simultaneous execution of multiple mutant FORTRAN 77 programs. This is accomplished by viewing the execution of these mutants as a sequence of vector instructions. The algorithm promises potential to greatly increase the performance of a mutation based testing system, as well as points towards a general method of simultaneous program execution against multiple data sets.