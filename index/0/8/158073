Unit testing frameworks like JUnit are a popular and effective way to prevent developer bugs. We are investigating two ways of building on these frameworks to prevent more bugs with less effort. First, theories are developer-written statements of correct behavior over a large set of inputs, which can be automatically verified. Second, characterization tools summarize observations over a large number of directed executions, which can be checked by developers, and added to the test suite if they specify intended behavior. We outline a toolset that gives developers the freedom to use either or both of these techniques, and frame further research into their usefulness.