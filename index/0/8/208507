In a generalised distributed database system with decentralised controls and heterogeneous and pre-existing nodes, queries can be very complex, particularly if they provide a data integration facility. We describe here an algorithm for the optimal decomposition of such queries into subqueries, taking into consideration the availability of nodal operations (some nodes may not be able to perform all operations) and other factors. This algorithm is being implemented in the PRECI* system. In a distributed database system, an efficient query processing strategy is essential for ameliorated performance. In general there will be many possible strategies for processing a particular query, and ideally each of these should be evaluated in order to determine the best strategy. Unfortunately, however, the,problem of selecting optimal strategies for complex queries 1s NP-complete, so it is not feasible to evaluate every strategy for such queries. Many query decomposition algorithms have therefore been designed to produce optimal or near-optimal strategies only under a set of highly restrictive assumptions that apply to a particular implementation (1, 2). The only algorithm developed for a DDB which allows heterogeneous pre-existing databases as nodes is that of the MULTIBASE project (3). They Permission 10 copy without fee all or part of this material is gmnted provided that the copies are not made or distributed for direct commercial advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice Zr given that copying is by pennksion of the Very Lave Data Lkse Endowment. To copy otherwise, or to repubhh, requbes a fee and/or special permission from the Endowment. Proceedings of the Tenth Intematlonal Conterence on Very Large Dats Bsses. evaluate strategies in terms of data movement and local processing, disregarding response time. All final processing is done at the result node, so that there is little parallel processing. In PRECI* (4, 6) we have aimed to achieve a higher degree of parallelism while still taking account of data movement and local processing. Recognising the NP completeness of the general problem, we propose to tackle it in two stages: optimal decomposition of a query into subqueries and the subsequent allocation of the subqueries optimally to nodes, taking into account the presence of replicated data and network characteristics. We believe that for complex queries in heterogeneous DDBs, this two-staged approach is most fruitful although it may not yield the optimal strategy. In this paper, we present Only the decomposition strategy which involves determining the order of operations to be performed, applying transformations to the original query expression in order to reduce the total cost (in terms of data movement and local processing) or to reduce response time by increasing parallelism without increasing the total cost. Operations are then grouped into subqueries. For the node allocation stage, we decide where each subquery should be executed, evaluating each possible strategy according to the total cost and response time. There may be many possible strategies since, in PRECI*, operations on external data (data sent from another node) may be performed at any node which supports an appropriate interface, unlike in MULTIBASE where only the result node is used for such operations. We assume that a given node may not be able to perform all PAL operations, and this is taken into consideration in the query decomposition strategy. PRECI* is a generalised distributed database management system supporting heterogeneous,. possibly pre-existing, databases as nodes (4, 5). It also allows data replication under global supervision. Any database may join PRECI* as a node, provided it supplies a minimal relational interface, and any network could be used to link the nodes. Queries to the DDB are expressed in the PRECI algebraic language (PAL), Singapore, August, 1994