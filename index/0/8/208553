In the classical k-median problem the goal is to select a subset of at most k facilities in order to minimize the total cost of opened facilities and established connections between clients and opened facilities. We consider the capacitated version of the problem, where a single facility may only serve a limited number of clients. We construct approximation algorithms slightly violating the capacities based on rounding a fractional solution to the standard LP. 
 
It is well known that the standard LP (even in the case of uniform capacities) has unbounded integrality gap if we only allow violating capacities by a factor smaller than 2, or if we only allow violating the number of facilities by a factor smaller than 2. It is also known that violating capacities by a factor of 2 + e is sufficient to obtain constant factor approximation of the connection cost in the case of uniform capacities. In this paper we substantially extend this result in the following two directions. On one hand, we obtain a 2+e capacity violating algorithm to the more general k-facility location problem with uniform capacities, where opening facilities incurs a location specific opening cost. On the other hand, we show that violating capacities by a slightly bigger factor of 3 + e is sufficient to obtain constant factor approximation of the connection cost also in the case of the non-uniform hard capacitated k-median problem. 
 
Our algorithms first use the clustering of Charikar et al. to partition the facilities into sets of total fractional opening at least 1âˆ’1/l for some fixed l. Then we exploit the technique of Levi, Shmoys, and Swamy developed for the capacitated facility location problem, which is to locally group the demand from clients to obtain a system of single node demand instances. Next, depending on the setting, we either work with stars of facilities (for non-uniform capacities), or we use a dedicated routing tree on the demand nodes (for non-uniform opening cost), to redistribute the demand that cannot be satisfied locally within the clusters.