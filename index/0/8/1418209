Data dependence information, in some form, is used in compilers and environments for parallel computers to decide what transformations and optimizations can be applied to a program. Here we focus on loop optimization, also called loop restructuring; loop restructuring is often used to automatically (or manually) improve the performance of scientific programs on high performance computer systems. The benchmarking process undertaken by the Perfect Club is one of identifying software transformations that improve performance; many of the transformations used are loop restructuring transformations. Generally, the most commonly used such transformation is loop interchanging, which can improve parallelism and memory hierarchy performance. Our research program is exploring the potential of loop restructuring transformations from three points of view: (1) What kinds of transformations can be performed? (2) What information is necessary to decide when a transformation is legal? (3) What performance improvement can be attained from each transformation? To support this research we have begun implementation of a loop restructuring tool. This paper de*Supported by NSF Grant CCR-8906909. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copvright notice and the tida of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. @ 1991 ACM 0-89791-434-1/911000610321 . ..S1 .50 scribes our experiences with the second question above; in particular, we will describe somewhat disappointing results with respect to current data dependence abstractions and more advanced loop restructuring transformations.