Checkpointing is an important mechanism for limiting crash recovery times. This paper describes a new checkpointing algorithm that was implemented in Oracle 8.0. This algorithm efJiciently JWS buffers which need to be written for checkpointing and easily scales to very large buffer cache sizes: it has been tested with buffer caches as large as six million buffers. Based on this algorithm, we have implemented a new checkpointing mechanism which we refer to as the incremental checkpointing mechanism. Incremental checkpoints are continuous, low overhead checkpoints that wnâ€™te buffers as a background activity. Incremental checkpointing is able to continuously advance the database checkpoint, i.e., the starting position in the redo log for crash recovery, resulting in dramatic improvements in recovery time while imposing minimal overhead during normal processing. The rate of bu$er writes for incremental checkpointing can be controlled by the user to balance checkpoint writing overhead with recovery time requirements. In this paper; we describe the new data structures and algorithms that have been implemented for checkpointing and for incremental checkpointing in Oracle 8.0. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Very Large Database Endowment. To copy otherwise, or to republish, requires a fee and/or special permission from the Endowment. Proceedings of the 24th VLDB conference, New York, USA, 1998