Two common objectives for evaluating a schedule are the makespan, or schedule length, and the average completion time. In this note, we give improved bounds on the existence of schedules that simultaneously optimize both criteria. In a scheduling problem, we are given n jobs and m machines. With each job j we associate a nonnegative weight wj . A schedule is an assignment of jobs to machines over time, and yields a completion time Cj for each job j. We then define the average completion time as ∑n j=1 wjCj and the makespan as Cmax = maxj Cj . We use C opt max and ∑ wjC ∗ j to denote the optimal makespan and average completion time. We will give results which will hold for a wide variety of combinatorial scheduling problems. In particular, we require that valid schedules for the problem satisfy two very general conditions. First, if we take a valid schedule S and remove from it all jobs that complete after time t, the schedule remains a valid schedule for those jobs that remain. Second, given two valid schedules S1 and S2 for two sets J1 and J2 of jobs (where J1 ∩ J2 is potentially nonempty), the composition of S1 and S2, obtained by appending S2 to the end of S1, and removing from S2 all jobs that are in J1 ∩ J2, is a valid schedule for J1 ∪ J2. For the rest of this note we will make claims about “any” scheduling problem, and mean any problem that satisfies the two conditions above. In addition, if a schedule has Cmax ≤ αC opt max and ∑