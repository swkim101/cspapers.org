One problem with taking advice arises when the advice is expressed in terms of data or actions unavailable to the advice-taker. For example, in the card game Hearts, the advice "don't lead a suit in which some opponent has no cards left" is non-operational because players cannot see their opponents' cards. Operationalization is the process of converting such advice into an executable (perhaps heuristic) procedure. This paper describes an interactive system, called BAR. that operationalizes advice by applying a series of program transformations. By applying different transformation sequences, BAR can operationalize the same advice in very different ways. 
 
BAR uses means-ends analysis and planning in an abstraction space. Rather than using a hand-coded difference table, BAR analyzes the transformations to identify transformation sequences that might help solve a given problem. Thus new transformations can be added without modifying the problem-solver itself. Although user intervention is required to select among alternative plans, BAR reduces the number of alternatives by 103 compared to an earlier operationalizer.