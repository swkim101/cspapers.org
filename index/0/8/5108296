This paper describes a “toolkit” (a software function library) for synthesizing conversions between different transport interfaces. The method employed involves classifying these interfaces according to their “transport abstraction type.” Each actual interface is converted to or from a canonical form depending on its type, and the library also contains sufficient “abstraction converters” to convert between all of the canonical forms. The overall conversion is accomplished by combining some number of elementary conversions which execute in series. The paper describes the toolkit, contrasts it with other approaches, and shows how it can be used to solve various problems in protocol conversion and the “migration” of distributed services to new network contexts.