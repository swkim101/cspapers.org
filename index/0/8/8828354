Web applications are often based on the client-server model which relies on concurrent execution of asynchronous processes. Enforcing correctness of concurrent software is notoriously difficult. In general, automatic verification checks if a given system has a certain property, while supervisory control enforces the same property by restricting system behavior. Supervisor control problems are often computationally more tractable to solve than verification problems. Most verification problems are NP -hard, while some supervisory control problems can be solved in polynomial time with the appropriate representation. Here we present two algorithms, one for enforcing mutual exclusion and the other for deadlock prevention for web applications written in Java. We combine these two methods in order to guarantee that a web application or web service comply with given safety properties including freedom from deadlock and system specific mutual exclusion properties.