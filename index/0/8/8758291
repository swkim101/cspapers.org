The development of reliable software is a challenging task, especially in a business environment that forces developers to focus on meeting tight deadlines instead of producing quality software. Researchers and practitioners are exploring various approaches for addressing this problem, such as autonomic computing and conscientious autopoietic software. These approaches describe software systems that are capable of managing and preserving themselves. In this paper, we propose a new, concrete self-managing software architecture based on the biological concept of commensalistic symbiosis and the notion of autopoietic software. We present a detailed description of our architecture, and a working prototype of a minimal commensalistic system. In addition, we specify a new programming language, examine usage scenarios and discuss implementation issues for realizing a working commensalistic system on a larger scale.