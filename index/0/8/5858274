The SDEM code models systems of interacting blocks of rock using the distinct element (DE) method, which represents these systems as discontinuums with each block acting under Newton's laws of motion. The data structures associated with the DE method make the task of obtaining performance gains through vectorisation difficult. Typical systems, however, contain thousands of blocks and there is the potential to perform calculations associated with groups of blocks in parallel.
This paper details the analysis and program refinement steps used in implementing a parallel version of SDEM on the Kendall Square Research KSR-1 distributed memory multiprocessor. Performance gains from a simple translation of the original Cray FORTRAN code are poor, but satisfactory performance is obtained, with minimum changes to the code, by addressing specific sources of overhead. The refinement steps focus on reducing lock costs, ensuring data locality and improving load balance.