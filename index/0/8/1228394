Performance is a major issue in the acceptance of object-oriented database management systems (OODBMS). The nested index and path index schemes have been criticized for their heavy costs and poor handling of update operations. This paper re-evaluates three index schemes (nested index, path index, and multi-index) applicable to queries on nested attributes. Among these, we found that a multi-index scheme is best supported in the object-oriented or extended relational DBMS environment. Multi-index schemes not only provide a better balance between retrieval and update costs than do the nested or path indices, but they also scale well for update when the number of indices increases. In this paper, we propose a multi-index design that reuses the single-table index structures already present in a DBMS. Our performance study extends previous models by permitting attributes to be multi-valued as well as single-valued. We also suggest that a combination of nested index and multi-index schemes offers a feasible solution to the support of queries on nested objects.