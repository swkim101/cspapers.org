Caching (paging) is a well-studied problem in online algorithms, usually studied under the assumption that all pages have a uniform size and a uniform fault cost (uniform caching). However, recent applications related to the web involve situations in which pages can be of di(cid:11)erent sizes and costs. This general caching problem seems more intricate than the uniform version. In particular, the of-(cid:13)ine case itself is NP-hard. Only a few results exist for the general caching problem [8, 17]. This paper seeks to develop good o(cid:15)ine page replacement policies for the general caching problem, with the hope that any insight gained here may lead to good online algorithms. Our (cid:12)rst main result is that by using only a small amount of additional memory, say O(1) times the largest page size, we can obtain an O(1)-approximation to the general caching problem. Note that the largest page size is typically a very small fraction of the total cache size, say 1%. Our second result is that when no additional memory is allowed, one can obtain an O(log(M + C))-approximation where M and C denote the cache size and the largest page fault cost, respectively. Our results use a new rounding technique for linear programs which may be of independent interest. We also present a randomized online algorithm for the Bit Model [8] which achieves a competitive ratio of O(ln(1 + 1=c)) while using M(1 + c) memory.