The paper presents an efficient method for manipulating very large shared binary decision diagrams (SBDDs) which are too large to be stored within main memory. In contrast that the conventional depth-first algorithm causes random access of memory, the proposed method is intended to cause sequential access of memory. The main idea of our method is level-by-level manipulation of shared quasi-reduced BDD's (SQBDD's) upon a breadth-first algorithm. A garbage collection algorithm based on sliding type compaction is also introduced in order to reduce page faults in succeeding manipulation. We implemented and evaluated the proposed method on the workstation Sun SPARC Station 10 and 64 Mbyte main memory and a 1 Gbyte hard disk drive. As a result it took only 5.6 h to obtain an SQBDD of more than 12 million nodes, which represents all the primary outputs of a 15-bit multiplier, from its circuit description. If we use the conventional SBDD manipulator instead, it is estimated that it would take about 1900 h.