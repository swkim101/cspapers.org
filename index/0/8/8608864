An object-oriented database system (ODBS) provides persistence and transaction management for objects. Inter-object references are typically represented by 32-bit pointers in programming language implementations, but this is too restrictive for database systems. For this reason, ODBSS typically use object ids (oids) of 64 to 96 bits. Different ODBS architectures follow from the ways in which the mapping between the larger and smaller address spaces is implemented. The choice of an architecture is highly relevant to ODBS users, as the selected architecture influences the performance characteristics of the ODBS, ease of use (i.e. application development), the size of an application's executable, and both source and binary compatibility of existing libraries. This talk will describe time solutions to the problem of representing inter-object references.