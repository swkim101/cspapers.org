The Ulam distance between two permutations of length n is the minimum number of insertions and deletions needed to transform one sequence into the other. Equivalently, the Ulam distance d is n minus the length of the longest common subsequence (LCS) between the permutations. Our main result is an algorithm, that for any fixed e > 0, provides a (1 + e)-multiplicative approximation for d in [EQUATION] time, which has been shown to be optimal up to polylogarithmic factors. This is the first sublinear time algorithm (provided that d = (log n)ω(1)) that obtains arbitrarily good multiplicative approximations to the Ulam distance. The previous best bound is an O(1)-approximation (with a large constant) by Andoni and Nguyen (2010) with the same running time bound (ignoring polylogarithmic factors). The improvement in the approximation factor from O(1) to (1 + e) allows for significantly more powerful sublinear algorithms. For example, for any fixed Δ > 0, we can get additive Δn approximations for the LCS between permutations in [EQUATION] time. Previous sublinear algorithms require Δ to be at least 1−1/C, where C is the approximation factor, which is close to 1 when C is large. Our algorithm is obtained by abstracting the basic algorithmic framework of Andoni and Nguyen, and combining it with the sublinear approximations for the longest increasing subsequence by Saks and Seshadhri (2010).