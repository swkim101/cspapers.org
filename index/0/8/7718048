XML is at the heart of Web services: It is used as the format for the messages exchanged between services and applications (using SOAP [7]), to describe the structure of those messages (using XML Schema [6, 8]), and to describe Web services interfaces (using WSDL [12]). Current approaches [5] to development of Web services hide the XML layer behind Java or C# APIs, preventing the application direct access to the original data and interface. The goal of the XButler project is to support fast and reliable development of Web services by enabling direct access to the XML data and Web-service interfaces. The main technical contribution of XButler is a binding between WSDL [12], the Web Services Description Language, and XQuery [14], the W3C XML query language. In particular, we extend XQuery with an import service statement, which provides transparent access to Web services from within an XQuery program. Conversely, XButler provides tool (called xquery2soap) which takes an XQuery module and deploys it as a SOAP service. The XButler toolset and the corresponding XQuery extensions are implemented on top of the Galax [2] XQuery processor. In our demonstration, we use XButler to deploy a userpresence service, called Yoo-Hoo!. Yoo-Hoo! integrates user-presence information from multiple service providers and can provide Yoo-Hoo! clients with information such as “the requested subscriber is on-line at Jabber” or “the subscriber’s cell phone is busy”. XButler dramatically simplifies the implementation and deployment of the Yoo-Hoo! service – the client and server can manipulate XML messages directly in XQuery and all low-level handling of SOAP messages is entirely transparent.