We re-introduce the coded model of fault-tolerant computation in which the input and output of a computational device are treated as words in an errorcorrecting code. A computational device correctly computes a function in the coded model if its input and output, once decoded, are a valid input and output of the function. In the coded model, it is reasonable to hope to simulate all computational devices by devices whose size is greater by a constant factor but which are exponentially reliable euen if each of their components can fail with some constant probability. We consider fine-grained parallel computations in which each processor has a constant probability of producing the wrong output at each time step. We show that any parallel computation that runs for time t on w processors can be performed reliably on a faulty machine in the coded model using w logo(’) w processors and time t logo(’) w. The failure probability of the computation will be at most t . e~p(-w’/~). The codes used to communicate with our faulttolerant machines are generalized Reed-Solomon codes and can thus be encoded and decoded in 0 nlogo(’) sequential time and are independent of the machine they are used to communicate with. We also show how coded computation can be used to self-correct many linear functions in parallel with arbitrarily small overhead.