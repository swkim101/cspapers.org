In this paper, we present a new algorithm for '/ solving linear programs that requires only Õ(√rank(A)L) iterations where A is the constraint matrix of a linear program with m constraints, n variables, and bit complexity L. Each iteration of our method consists of solving Õ(1) linear systems and additional nearly linear time computation. Our method improves upon the previous best iteration bounds by factor Ω̃((m/rank (A)))<sup>1/4</sup>) of for methods with polynomial time computable iterations and by Ω̃((m/rank (A))<sup>1/2</sup>) for methods which solve at most Õ(1) linear systems in each iteration each achieved over 20 years ago. Applying our techniques to the linear program formulation of maximum flow yields an Õ(|E| √|V| log<sup>2</sup> U) time algorithm for solving the maximum flow problem on directed graphs with |E| edges, |V| vertices, and capacity ratio U. This improves upon the previous fastest running time of O(|E| min{|E|<sup>1/2</sup>, |V|<sup>2/3</sup>} log (|V|<sup>2</sup>/|E|) log(U)) achieved over 15 years ago by Goldberg and Rao and improves upon the previous best running times for solving dense directed unit capacity graphs of Õ(|E| min{|E|<sup>1/2</sup>, |V|<sup>2/3</sup>}) achieved by Even and Tarjan over 35 years ago and a running time of Õ(|E|<sup>10/7</sup>) achieved recently by Madry.