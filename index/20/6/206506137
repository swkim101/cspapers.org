SystemJ is a new language that extends Java to the globally asynchronous locally synchronous (GALS) language by extending it with synchronous reactive and asynchronous constructs. The original SystemJ compiler produces Java code that executes on standard JVM. This paper proposes a new approach for compiling and executing SystemJ using a tandem virtual machine (TVM). The new approach is based on separating the control-driven and data-driven operations for the execution on two virtual machines running in parallel: while the JVM executes the data-driven operations, a control virtual machine (CVM) is introduced to execute the control-driven (synchronous reactive and asynchronous) parts of a SystemJ program. The benchmark results show that the TVM has code size improvements of over 60% on average and also a substantial improvement in execution speed over previous Java based compilation.