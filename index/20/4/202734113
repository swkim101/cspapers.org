Consider the following distance query for an n-node graph G undergoing edge insertions and deletions: given two sets of nodes I and J, return the distances between every pair of nodes in I × J. %It generalizes several versions of the dynamic shortest paths problem such as Single-Source and All-Pairs Shortest Paths (SSSP and APSP). This query is rather general and captures several versions of the dynamic shortest paths problem. In this paper, we develop an efficient (1 + ε) -approximation algorithm for this query using fast matrix multiplication. Our algorithm leads to answers for some open problems for Single-Source and All-Pairs Shortest Paths (SSSP and APSP), as well as for Diameter, Radius, and Eccentricities. Below are some highlights. Note that all our algorithms guarantee worst-case update time and are randomized (Monte Carlo), but do not need the oblivious adversary assumption. Subquadratic update time for SSSP, Diameter, Centralities, ect.: When we want to maintain distances from a single node explicitly (without queries), a fundamental question is to beat trivially calling Dijkstra's static algorithm after each update, taking Θ(n^2) update time on dense graphs. A better time complexity was not known even with amortization. It was known to be improbable for exact algorithms and for combinatorial any-approximation algorithms to polynomially beat the Ω(n^2) bound (under some conjectures) [Roditty, Zwick, ESA'04; Abboud, V. Williams, FOCS'14]. Our algorithm with I={s} and J=V(G) implies a (1 + ε) -approximation algorithm for this, guaranteeing Õ(n^1.823/ε^2) worst-case update time for directed graphs with positive real weights in [1, W].^2 With ideas from [Roditty, V. Williams, STOC'13], we also obtain the first subquadratic worst-case update time for (5/3+ε) -approximating the eccentricities and (1.5 + ε) -approximating the diameter and radius for unweighted graphs (with small additive errors). We also obtain the first subquadratic worst-case update time for (1 + ε) -approximating the closeness centralities for undirected unweighted graphs. Worst-case update time for APSP: When we want to maintain distances between all-pairs of nodes explicitly, the Õ(n^2) amortized update time by Demetrescu and Italiano [STOC'03] already matches the trivial Ω(n^2) lower bound. A fundamental question is whether it can be made worst-case. The state-of-the-art algorithm takes Õ(n^2+2/3) worst-case update time to maintain the distances exactly [Abraham, Chechik, Krinninger, SODA'17; Thorup STOC'05]. When it comes to (1 + ε) approximation, this bound is still higher than calling the Õ(n^ω/ε) -time static algorithm of Zwick [FOCS'98], where ω≈ 2.373. Our algorithm with I=J=V(G) implies nearly tight bounds for this, namely Õ(n^2/ε^1 + ω) for undirected unweighted graphs and Õ(n^2.045/ε^2) for directed graphs with positive real weights. Besides this, we also obtain the first dynamic APSP algorithm with subquadratic update time and sublinear query time.