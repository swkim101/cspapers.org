Autonomous agents are designed to reach goals that were pre-defined by their operators. An important way to execute tasks and to maximize utility is to share resources and to cooperate on task execution by creating coalitions of agents. If the agents are individually rational, such coalitions will take place if, and only if, each member of a coalition gains more if it joins the coalition than it could gain previously. There are several ways of creating such coalitions and dividing the joint payoff among the members. Variation in these methods is due to different environments, different settings in a specific environment, and different approaches to a specific environment with specific settings (Zlotkin & Rosenschein 1993). In this research we develop methods for coalitionformation and utility distribution in various environments, we discuss their advantages and suggest occasions when each is most suitable (Shechory & Kraus 1993). The algorithms are developed with reference to different approaches. Some approaches are based on theoretical concepts from game theory (Shapley & Shubik 1973). Other approaches are based upon negotiation (Kraus & Wilkenfeld 1991), and the use of methods and concepts from distributed AI. The algorithms require communication and computation operations. These operations are either distributed among the agents or performed all by one agent. There are algorithms that can be halted in the middle of processes but still give reasonable results, i.e., any-time algorithms (Dean & Boddy 1988), while others, if were stopped before they end will give no results. We use a new concept of polynomial Kernelstability based on the original Kernel-stability (Davis & Maschler 1965), to develop a Coalition Negotiation polynomial Algorithm (CNA), on which we focus. The CNA consists of steps in which coalitions are formed, where each step is constructed as follows: