Over the past several years, crowdsourcing has entered software engineering practice. While most work is still done through traditional development, contract development, and outsourcing, software projects today increasingly use crowdsourcing for a variety of purposes, including fixing defects, testing their software, or gathering alternative designs for a new user interface. Through mechanisms such as competition sites, expertise sharing sites, bug bounties, and online labor markets, crowdsourcing has begun to reshape the ways in which developers contribute to software projects. This talk explores the models of crowdsourcing that have been applied to software development to date and outlines some of the opportunities that exist for the future.