In each step of the $p$-processor cup game on $n$ cups, a filler distributes up to $p$ units of water among the cups, subject only to the constraint that no cup receives more than $1$ unit of water; an emptier then removes up to $1$ unit of water from each of $p$ cups. Designing strategies for the emptier that minimize backlog (i.e., the height of the fullest cup) is important for applications in processor scheduling, buffer management in networks, quality of service guarantees, and deamortization. We prove that the greedy algorithm (i.e., the empty-from-fullest-cups algorithm) achieves backlog $O(\log n)$ for any $p \ge 1$. This resolves a long-standing open problem for $p > 1$, and is asymptotically optimal as long as $n \ge 2p$. If the filler is an oblivious adversary, then we prove that there is a randomized emptying algorithm that achieve backlog $O(\log p + \log \log n)$ with probability $1 - 2^{-\operatorname{polylog}(n)}$ for $2^{\operatorname{polylog}(n)}$ steps. This is known to be asymptotically optimal when $n$ is sufficiently large relative to $p$. The analysis of the randomized algorithm can also be reinterpreted as a smoothed analysis of the deterministic greedy algorithm. Previously, the only known bound on backlog for $p > 1$, and the only known randomized guarantees for any $p$ (including when $p = 1$), required the use of resource augmentation, meaning that the filler can only distribute at most $p(1 - \epsilon)$ units of water in each step, and that the emptier is then permitted to remove $1 + \delta$ units of water from each of $p$ cups, for some $\epsilon, \delta > 0$.