Modern cloud systems have adopted a variety of FPGA-acceleratedI/Odevices,suchasSmartNICsandcomputational storage,whiletheyfaceprogrammabilityandportability challenges.ExistingFPGAframeworkseitherdirectlyexpose device-specificI/Ointerfacestouserlogicoroffervirtualized I/Oslimitedtoasingledevicetype.ThelackofI/Oabstraction imposeshighengineeringcosts,lessdesignportability,and even unexpected throughput degradation. We introduce vFPIO , an FPGA-based I/O acceleration framework that brings better programmability and design portability. vFPIO extends modern FPGA OSes to expose virtual I/O ports to user logic, which abstracts device-dependent I/O specifications and makes the user logic design platform-agnostic. The connectivity between virtual and physical I/O ports can be easily configured by host applications using POSIX-like file APIs. vFPIO also offers a preemptive I/O transaction scheduler that alleviates the I/O throughput degradation caused by concurrent I/O requests from multiple accelerators in a multi-tenant environment. We implement a prototype of the vFPIO framework on x86 servers equipped with AMD Xilinx Alveo U280 cards and support four different I/O interfaces: PCIe, DRAM, HBM, and network. Our evaluation highlights that vFPIO incurs negligible performance overheads compared to Coyote, one of the latest FPGA OSes, while preserving the maximum I/O throughput for high-priority tasks even under resource contention.