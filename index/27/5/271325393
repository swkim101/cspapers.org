Decompilers, one of the widely used security tools, transform low-level binary programs back into their high-level source representations, such as C/C++. While state-of-the-art de-compilers try to generate more human-readable outputs, for instance, by eliminating goto statements in their decompiled code, the correctness of a decompilation process is largely ignored due to the complexity of decompilers, e.g., involving hundreds of heuristic rules. As a result, outputs from decom-pilers are often not accurate, which aﬀects the eﬀectiveness of downstream security tasks. In this paper, we propose D-H ELIX , a generic decom-piler testing framework that can automatically vet the de-compilation correctness on the function level. D-H ELIX uses R ECOMPILER to compile the decompiled code at the functional level. It then uses S YMDIFF to compare the symbolic model of the original binary with the one of the decompiled code, detecting potential errors introduced by the decompila-tion process. D-H ELIX further provides T UNER to help debug the incorrect decompilation via toggling decompilation heuristic rules automatically. We evaluated D-H ELIX on Ghidra and angr using 2,004 binaries and object ﬁles ending up with 93K decompiled functions in total. D-H ELIX detected 4,515 in-correctly decompiled functions, reproduced 8 known bugs, found 17 distinct previously unknown bugs within these two decompilers, and ﬁxed 7 bugs automatically.