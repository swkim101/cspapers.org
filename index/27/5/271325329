IOMMU has been introduced to thwart DMA attacks. However, the performance degradation prevents it from being enabled on most systems. Even worse, recent studies show that IOMMU is still vulnerable to sub-page and deferred invalidation attacks, posing threats to systems with IOMMU enabled. This paper aims to provide a lightweight and secure so-lution to defend against DMA attacks. Based on our measurement and characterizing of DMA behavior, we propose D MA A UTH , a lightweight pointer integrity-based hardware-software co-design architecture. D MA A UTH utilizes a novel technique named Arithmetic-capable Pointer AuthentiCation (APAC), which protects the DMA pointer integrity while supporting pointer arithmetic. It also places a dedicated hardware named Authenticator on the bus to authenticate all the DMA transactions. Combining APAC, per-mapping metadata, and the Authenticator, D MA A UTH achieves strict byte-grained spatial protection and temporal protection. We implement D MA A UTH on a real FPGA hardware board. Specifically, we first realize a PCIe-customizable SoC on real FPGA, based on which we implement hardware version D MA A UTH and conduct a thorough evaluation. We also implement D MA A UTH on both ARM and RISC-V emulators to demonstrate its cross-architecture capability. Our evaluation shows that D MA A UTH is faster and safer than IOMMU while being transparent to devices, drivers, and IOMMU.