IoT devices have significantly impacted our daily lives, and detecting vulnerabilities in embedded systems early on is critical for ensuring their security. Among the existing vulnerability detection techniques for embedded systems, static taint analysis has been proven effective in detecting severe vulnerabilities, such as command injection vulnerabilities, which can cause remote code execution. Nevertheless, static taint analysis is faced with the problem of identifying sources comprehensively and accurately. This paper presents L ARA , a novel static taint analysis technique to detect vulnerabilities in embedded systems. The design of L ARA is inspired by an observation that pertains to semantic relations within and between the code and data of embedded software: user input entries can be categorized as URIs or keys ( data ), and identifying their handling code ( code ) and relations can help systematically and comprehensively identify the sources for taint analysis. Transforming the observation into a practical methodology poses challenges. To address these challenges, L ARA employs a combination of pattern-based static analysis and large language model(LLM)- aided analysis, aiming to replicate how human experts would utilize the findings during analysis and enhance it. The pattern-based static analysis simulates human experience, while the LLM-aided analysis captures the way human experts perceive code semantics. We implemented L ARA and evaluated it on 203 IoT devices from 21 vendors. In general, L ARA detects 556 and 602 more known vulnerabilities than S A TC and K ARONTE while reducing false positives by 57.0% and 54.3%. Meanwhile, with more sources and sinks from L ARA , E M T AINT can detect 245 more vulnerabilities. To date, L ARA has found 245 0-day vulnerabilities in 57 devices, all of which were confirmed or fixed with 162 CVE IDs assigned.