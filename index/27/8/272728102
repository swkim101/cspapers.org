ScriptEase is a tool that allows authors with no programming experience to create interactive stories for computer role-playing games. Instead of writing scripting code manually, game authors select design patterns that encapsulate frequent game scenarios, creating stories at a higher level of abstraction and being shielded from the underlying scripting language. ScriptEase has been extended to support behavior patterns that generate ambient behaviors for non-player characters. This demonstration shows how ScriptEase creates intricate non-player character scripts to generate compelling and engaging character behaviors. We demonstrate our ScriptEase motivational ambient and PC-interactive behaviors for a guard character using BioWare Corp.’s Neverwinter Nights game. Non-Player Character Behaviors A computer role-playing game (CRPG) is an interactive story where the game player controls an avatar called a player character (PC). A major determinant for the success of an interactive story is the development of the supporting characters, i.e., non-player characters (NPCs). Using AI to create NPCs that exhibit near-realistic ambient behaviors makes the game more entertaining and enhances the player’s experience. Characters in CRPGs usually perform simple and predictable behaviors, especially in worlds with hundreds or thousands of NPCs. For example, in games such as Fable and Morrowind, the state-of-the-art character behaviors are repetitive, with characters that rarely interact with each other [1]. NPCs walk predefined paths, make random comments about the PC, stand still or perform a simple animation. In Sims 2, ambient behaviors are more developed, but they are dependent on the design model that is integral to the game. There are several reasons for a generally poor state of interactive characters in games, the most common being the effort necessary to script individual NPCs [3]. The programming resources required to model character behaviors are hard to financially justify, especially when the NPCs are not essential to the main Copyright © 2006, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. plot. Creating realistic ambient behavior for a single character is challenging: even more challenging is to define realistic interactions between NPCs. Interacting NPC behaviors are rarely seen in CRPGs, since they complicate event synchronization. Halo 2 has support for “joint behaviors” [2] but the game designer still has to write custom code for these behaviors. We developed a concurrency control mechanism that solves the inherent synchronization problems [1]. Our behavior model generates engaging NPC behaviors without writing code. This model is robust, flexible, extendable, and requires minimal CPU resources.