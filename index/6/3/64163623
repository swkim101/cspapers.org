Feature location has long been recognized as an important reverse engineering activity to identify the implementation of a given system functionality in the source code. In this paper, we present a simple yet powerful approach for solving the feature location problem based on impact analysis. The presented approach combines two different sources of information: an execution trace that corresponds to the software feature under study and a static component dependency graph (CDG). Using the CDG, we rank the components invoked in the trace by measuring the impact of a component modification on the rest of the system. Our hypothesis is that the smaller the impact of a component modification, the more likely it is that the component is specific to the feature under study. A case study is presented to support the applicability of our approach