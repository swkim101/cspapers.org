With the advances of server virtualization technology, virtual machines (VMs) are widely used to provide various services, where live VM migration becomes an important tool to manage these services. Especially, with the increasing trend of owning multiple datacenters by a single company, live VM migration across datacenters enables the administrators to carry out globally optimized resource control and management like cloud bursting [2]. Generally, migrating a virtual machine requires to copy the disk and memory from one server to another, and update the network to forward packets to the new location. Pre-copy strategy are usually used for disk and memory copy to reduce the service downtime. Ideally, two aspects of optimization can be used to improve the migration performance. The first is from the view of host, e.g., optimizing the algorithm that decides when to stop the pre-copy stage or eliminating redundancy of data transmissions through compression. The second is network based optimization, e.g., selecting the best path for data copy or optimizing the network update process to reduce service downtime. However, as best as we know, most previous works [1, 2] only focus on the host based optimization, leaving the potential of network based optimization unexplored. The reason is the control of routing and network updating is distributed on every single forwarding device under traditional network architecture, making it hard to implement network based optimization. However, with the advances of Software-Defined Network (SDN) and the trend of its ubiquitous deployment in datacenters, it is able to control traffic forwarding and network update by running programs on the controller, which brings the opportunity to implement network based optimization.