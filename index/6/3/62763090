In this paper, we describe a new approach for computing the area of a mesh projected onto a plane. This approach utilizes the graphics hardware’s line/object intersection capability and a recursive subdivision strategy to achieve performance and precision control. This approach starts from digitizing the projection plane into a grid of rectangular elements. For each element the graphics engine is utilized to check whether projection lines passing through the nodes of the element intersect the object in the model space. If all lines intersect the object, the element is considered “inside” and its area will be accounted towards the final projection area. If none of the lines has an intersection, the element is considered “outside” and discarded. For those elements that lay along the boundary of the projected area (which means some of their lines intersect the model while others don’t) we subdivide them until they are sufficiently small and the given area tolerance is met. Heuristics are derived for deciding the initial grid resolution and the level of subdivisions needed to meet/exceed a given area tolerance. Implementation results are demonstrated and compared with a classic polygon-clipping approach.Copyright © 2004 by ASME