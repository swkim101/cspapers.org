Welcome to San Jose, California, for the Twelfth International Conference on Architecture Support for Programming Languages and Operating Systems (ASPLOS-XII), the premiere interdisciplinary conference that brings together researchers from three research disciplines, namely Computer Architecture, Programming Languages, and Operating Systems.The ASPLOS conference began in 1982 and helped usher in more than a decade of highly vibrant computer architecture research and innovation. During this period, we witnessed the emergence of the single-chip microprocessor as the dominant computing engine deployed in almost all forms of computer systems, including servers, workstations, and personal computers. However, by the late 1990's some were uncertain about the relevance and continuance of ASPLOS. In 1998, at ASPLOS-VIII, there was a panel discussion organized for the purpose of assessing the future of ASPLOS. I recall one panelist made the statement that ASPLOS is no longer needed. He argued that there is only one instruction set architecture (x86), one compiler (GCC), and one operating system (Windows), and that it will remain that way for quite a while.ASPLOS has continued, is currently thriving, and can potentially usher in another golden decade of computer architecture research and innovation. 2006 marks the 60th anniversary of ENIAC, the first modern digital electronic computer. During these 60 years, we have seen a number of significant paradigm shifts in the architecture and implementation of computers. What is the next dominant form for computing systems? We are witnessing a powerful digital convergence. Both computing and communication have become all digital and wireless based. We see the convergence of high-end, main-stream, and embedded computing. There is no longer just one ubiquitous ISA. Managed run-time environments go far beyond static compilation. Virtualization facilitates multiple concurrent runtimes and operating systems. ASPLOS's distinctive focus on the interfaces and interactions between computer architecture, programming systems and runtime/operating systems will once again allow it to play a pivotal role in the next era of computing.