Use case driven approach is one of the most practical ways in software development. However, due to lack of formalism in UML use case diagrams, the requirements that are represented by use case models often become vague. In addition, particular notation of UML use case diagram makes it difficult to evaluate the consistency of use case models to other related UML models, e.g. activity models. This paper presents a systematic way to introduce logic based formalism into use case driven approach, in order to make use case models more rigorous. The formalization is made by analyzing each use case description from logical viewpoints, and as a result, the description is transformed into a set of logical formulae that represent pre- and post-conditions, along with a series of functions that represents action steps. Subsequently the logic based use case models are transformed into CPN (Colored Petri-Net) models in order to identify larger scale processes.