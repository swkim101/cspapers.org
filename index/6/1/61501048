Describes a portable multiprocessing nucleus for real-time applications, which is implemented as a real-time extension of the C programming language. The portability is achieved by writing the nucleus routines in C, too. The design concepts of the nucleus are described considering the nucleus object model, scheduling algorithms and deadlock prevention. The nucleus directives are divided into six groups; process state control; synchronisation by event flags; resource management; mailboxes; interrupt handling; and miscellaneous directives. The nucleus implementation is discussed, considering portability and expandability. >