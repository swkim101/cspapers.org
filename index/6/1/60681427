Describes expressive graphical languages suitable for requirements capture to system design: GRAFCET, STATECHARTS and G++. G++ has many features of STATECHARTS but has a syntax similar to GRAFCET, which is more usual in the process control field. The semantics of STATECHARTS are much richer than GRAFCET: hierarchy is present and interrupts can be easily represented. G++ has enhanced features to show the interactions between parallel components. Ambiguous constructions allowed in GRAFCET and undesirable non-determinism in the STATECHARTS have been avoided in G++. The description is focused on the reactive, i.e. behavioural aspects of the modeling, but G++ like STATECHARTS also tackles the functional decomposition and the hardware supporting the application. G++ aims at capturing the specifications of the application in diagrams. The ultimate goal is to translate them semi-automatically in executable programs. A diagram editor is under development; it will be the core of a program generating tool. The paper centres on PLC based process control applications.