Some program comprehension techniques involve analyzing comments and identifiers in software. Other techniques analyze the code itself. Biggerstaff et al. noted a difference in abstraction level between comments and code. Comments are domain-related, whereas code is lower-level task-oriented. We are currently researching a combined automated approach that incorporates both code and comment understanding, using similar knowledge-based techniques. Part of this effort, includes an analysis of the degree to which comments match the associated code. We perform a complete analysis of how well and to what degree, in practice, comments match code. It is also important to determine the types of statements that need comments, and which ones are typically supplied with comments. In this paper, we present a study of abstraction level and coupling. We also examine comment placement, including the kinds of statements inline comments are attached to, and their relative position.