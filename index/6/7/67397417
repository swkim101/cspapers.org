Software routers are gaining momentum for its extensibility and programmability in network packet processing. PacketShader has pushed the performance limit of software routers to 40Gbps on a single machine, utilizing the massive parallel computation power of modern GPUs. The next step is to integrate the control-plane into it. The most crucial part to implement the control-plane is to minimize performance degradation to the data-plane. Today’s routers typically maintain large routing tables (over 320,000 entries) and often they have to sustain the updating frequency of 50-150 times per second. Forwarding information bases (FIBs), as known as forwarding tables, are generated from routing tables for faster next-hop lookups, and they usually reside in the linecards in traditional hardware routers. The delay from a link failure or a BGP update to an FIB update can be sometimes seconds or up to minutes and affects a network’s performance greatly. The same FIB updating problem exists in GPU-based software routers. The forwarding table resides in the GPU’s device memory for the GPU kernels to perform the IP address lookups. Figure 1(a) is the software architecture of PacketShader. For the control-plane integration, we add a forwarding table manager on the GPU side and it pulls most updated routing information from the kernel routing table. Figure 1(b) is the updating costs of the forwarding table in the GPU’s device memory. It shows that the forwarding table updates may cause performance fluctuation or degradation in bursty situations. The technical challenge here is to update the forwarding table in GPUs, without compromising the data-plane performance under dynamic and bursty traffic.