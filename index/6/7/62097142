The talk will discuss the advantages and drawbacks of the applicative style of programming, also called non-procedural or functional. This stems from “pure LISP”, although it is independent of the syntactic peculiarities of LISP, and is well-exemplified by Burge's book “Recursive Programming”. The idea is to do without assignment and rely on functions which produce results. Developments for this style include PROLOG and the school of logic programming, (Colmerauer,Kowalski), also the functional programming of Backus which avoids variables altogether, rather in the manner of combinatory logic. The author has recently been experimenting with the design of an applicative language, “HOPE”.