To develop on-board software in embedded space applications, it is often a requirement to use a real-time operating system, since these systems must assure that the timing constraints associated to each task are guaranteed. Furthermore, it's desirable that the execution time of the real-time application in any scenario is as deterministic as possible (i.e., it takes always the same time to perform the task). Typical real-time operating systems focus on increasing performance by focusing on scheduler design, device driver writing, heavy machine-level code optimisations, etc. However, the main goal must be to behave in as a deterministic way as possible. The work related to this paper is centred in real-time, embedded operating systems research on the ERC32 architecture, an E.S.A. (European Space Agency) standard architecture for space applications. This architecture is SPARC V7 instruction set compliant and has a lot of features built-in for space applications, but some aspects of the architecture can, in some cases, decrease the system determinism. Our main research tries to obtain a real-time operating system that has a deterministic behaviour running on this architecture, by implementing new management paradigms over some architectural aspects, enhancing the time accuracy, allowing worst case execution time analysis and improving the context switch operations.