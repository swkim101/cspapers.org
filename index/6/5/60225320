Refactorings applied in the distributed environment might cause serious problems while merging parallel introduced changes -- it is mainly due to extensive scope of these operations and thus high risk of a code overlapping. Currently available Software Configuration Management systems neither are able to avoid most of potential conflicts, nor even able to detect them. In the paper we propose a core for a modern development environment based on graph repository concept and operational merging approach. Two modes (on-line and off-line) of a collaborative software development will be discussed and a combination of these modes will be promoted by our environment. The proposed solution allows not only to significantly reduce the number of refactoring conflicts but also provides an immediate verification of the local committed refactoring influence on the current (local) work of other designers.