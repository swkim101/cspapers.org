A distributed variant of multi-objective particle swarm optimization (MOPSO) called multi-objective parallel asynchronous particle swarm optimization (MOPAPSO) is presented and the effects of distribution of objective function calculations to slave processors on the results and performance are investigated. Two benchmark examples were used to verify the capability of this implementation of MOPAPSO to match previously published results of MOPSO. The computationally intensive task of multi-objective Optimization Based Mechanism Synthesis (OBMS) was used to verify that significant performance improvements were realized through parallelization. The results show that MOPAPSO is able to match the results of MOPSO in significantly less time. The fact that MOPAPSO is distributed results in an effective optimization tool for complex multi-objective design problems.Copyright Â© 2009 by ASME