In the process of development in a software system, software maintenance plays an important role to reduce cost and effort. As software release, maintenance becomes difficult due to the complexity increase. Understanding and refactoring are the solutions. We discovery historical events for more understanding what happened. There are macro and micro phenomenon of software history. In macro, we pointed out the events happened in the real world. In micro, we descript how these events behave and evolve. Multiple sequence alignment gathers these behaviours and emerge macro phenomenon. In the end of paper, a case study is demonstrated to prove that maintenance is achieved.