Unlike traditional web applications, current web applications called RIAs become powerful and useful by combining several technologies including markup languages, client-side script languages and web services. Therefore, it becomes more complicated to develop these applications and a number of stakeholders including designers and developers are required. It is reasonable to divide an application into several concerns (i.e., modules) to make the development effective, however, pieces of code to combine each concern prevent it. For example, designers design user interfaces with markup languages, e.g., HTML and developers implement application logic with script languages. Then developers will often need to add code (e.g., event handlers) to connect the user interface and the logic so that this will become a single application. In this paper, we propose a client-side script language extension inspired by Aspect-Oriented Programming, which is well-known concept to realize improved separation of concerns. This language extension mainly focuses on the complete separation between markup languages, which represent user interfaces, and script languages, which represent client-side logic. In addition, we provide a prototype implementation of an weaver, which combines modules before the execution.