Despite student interest in mobile app development (MAD) and a rise in demand for mobile app developers, many computer science departments have not yet incorporated a MAD course into their curriculum. For such departments, barriers such as resource and curriculum limitations stand in the way of offering a MAD course. To elaborate, it can be difficult to find an instructor with the expertise to teach a MAD course. If such expertise is not available, it can be time consuming for an educator to train him/herself to gain the necessary knowledge to the teach the course. Furthermore, the instructor must decide which MAD platform to utilize, Android, iOS, hybrid, or web? Since MAD is a relatively new field, there are few resources in the literature that can help with MAD course preparation and design. In this poster, I present my experiences navigating these MAD course barriers at a primarily undergraduate institution. Recently, I have designed and taught a 300-level Android/Java course (Fall 2017) and a 300-level iOS/Swift course (Fall 2018). My experience report includes a summary of MAD course preparation, design, and implementation for both courses. To help guide choosing a platform, I include a detailed comparison of Android and iOS for supporting undergraduate CS learning outcomes. The comparison is based on resources required, maintenance considerations, software design principles covered (OOP and design patterns), and student work and feedback. The experiences reported in this poster offer guidance and insights for educators considering teaching a MAD course at their own university.