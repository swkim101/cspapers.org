The use of Evolutionary Computations (EC’s) has become one of the primary methods in the field of automated design synthesis. The overwhelming majority of EC’s in use today use a direct encoding, where an individual is described by its gene string. This means that every engineering domain must create its own encoding scheme, making implementation in new fields difficult and slow. Additionally, direct encoding does not produce symmetry or modularity, unless these attributes are written into the encoding scheme ab initio. Direct encoding, however, is not the way that genetic information is used in biological evolution. In nature, each DNA string (genotype) is composed of instructions or rules on how an individual should grow and develop. This has provided nature with a wide array of evolved solutions, based on simple coding blocks. This paper presents a method of indirect (rules-based) encoding for an EC based on the biological analog of development: the gene string no longer describes the individual, but rather contains an instruction set on how to generate the individual. This allows for additional elements to be added by modifying the rule set, rather than re-composing the entire genetic structure. Indirect encoding also can have a built-in response to the environment, and is therefore able to adapt more readily to dynamic situations. Examples are shown to demonstrate the rule-set and its adaptability.Copyright © 2007 by ASME