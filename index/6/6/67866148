Game engine design and development is a highly desirable area of exploration for students involved in the computing sciences. Equally, faculty find the use of game engines to be highly compelling in upper division computing courses as they consolidate application of systems topics and usually require a team-based approach in their architectural design and implementation. As an application domain, game engines exhibit a high degree of complexity and present students with challenges related to many areas of the curricula, including graphics programming, computer architecture, operating systems, compiler theory, artificial intelligence, and much more. However, at a practical level, the use of game engines as a motivator for computing concepts and large-scale software development is beginning to change. Educators are starting to question the utility of games engines in the computing classroom given the availability of high quality, easily accessible commercial engines. In this poster, the author examines how this changing landscape influences computing educators that wish to utilize game engines as a motivator in the computing classroom. The poster provides insight into the challenges related to the software construction of game engines and the reality of new approaches and techniques that are on the horizon. The poster provides examples of means and methods to provide balance, incorporating lessons learned from new industry approaches in relation to (and not exclusion) the foundational practices of the computing sciences.