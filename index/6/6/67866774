Embedded systems pervade nearly every aspect of modern life. Moreover, the emergence of both mobile platforms and Internet of Things (IoT) is furthering their reach. Although embedded systems are one of the bodies of knowledge in the ACM/IEEE-CS Com- puter Engineering Curricula, they have only passing mention in the ACM/IEEE-CS Computer Science Curricula. Inclusion of embedded systems concepts in undergraduate computer science can facilitate many objectives: a) they are an example of Platform-Based Devel- opment, a prominent theme in the ACM 2013 CS Curricula, b) they are often a more suitable level of complexity for educational needs than other "real world" platforms (e.g., Arduinos may be used to introduce many AP CS Principles in a single course), c) they offer a novel form of engagement, which may enhance diversity, and d) emerging areas, like IoT, are increasing demand for professionals that understand the full span of systems, from low-level firmware, to middleware and cloud computing. This panel represents three methods of including embedded systems concepts in undergraduate computer science: 1) use of em- bedded systems to improve engagement in a non-major computing course, 2) a required course covering core content for both com- puter science and computer engineering majors, and 3) a degree program offering a formal emphasis in embedded systems via a complementary set of courses. The panelists will share their motiva- tions for including embedded systems concepts in their programs, their approaches to integrating the content into their curricula, the teaching methods they use, the challenges they faced, and chal- lenges that remain.