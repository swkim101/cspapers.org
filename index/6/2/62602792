Introduction I find it interesting that this panel is titled “Completely Validated Software” while the abstract for the panel asks “how to determine when a system has been adequately validated.” That is, before the panel members have even begun to respond the position has been softened from “completely validated” to “adequately validated.” It is the more plausible adequately validated question that I will address. The question of determining when a system has been adequately validated and can be put into production use cannot be answered in an absolute fashion. Clearly the answer depends on the system and the environment in which it is to perform. For instance, if the system of interest is a logout routine that generates a random fortune based on a user’s profile, then minimal validation constitutes adequate validation. However, if the system is an embedded real-time Strategic Defense System component that controls a weapon, then the answer to when adequate validation has been achieved is probably “never”. The next section of this paper presents an overview of the formal specification and verification approach to achieving reliable software. This is followed by a discussion of some of the assumptions that are being made when using this approach, and finally some discussion about competing approaches.