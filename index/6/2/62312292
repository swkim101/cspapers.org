This paper discusses the teaching of a final year undergraduate software development subject. It describes how the subject was taught and the experience gained over three years of its existence. The subject required the students to work in teams of eight. Their goal was to produce software to meet a given specification to a commercial robust standard. The student teams had no tutorials but reported to the tutor on a weekly basis in a formal management meeting. The key motivational factor to the quality of the work was that project assessment was performed by running the final system, the marking to stop on any system failure. The most interesting aspect was that students were not given the specification until half way through the semester. They critiqued the previous year's system, so they knew the type of product they were to produce. They spent the first seven weeks preparing JCL, reusable code modules and skeleton module frameworks so that on receiving the specification they could proceed productively. The opportunity for creativity was provided for the students by not including screen layouts in the specification, just the required fields. This meant that each group could produce an "original" system. There are numerous benefits that other academics can use in similar subjects and this paper summarises the key ideas that are easily applicable. It should be Transactions on Information and Communications Technologies vol 10, Â© 1995 WIT Press, www.witpress.com, ISSN 1743-3517