Positive and negative instances of a concept are assumed to be described by a conjunction of literals in the predicate calculus, with terms limited to constants and universally quantified variables. A graph representation of a conjunction of literals, called a "product graph", is introduced. It is desirable to merge positive instances by generalization, while maintaining discrimination against negative instances. This is accomplished by an induction procedure which operates on the product graph form of these positive and negative instances. The correctness of the procedure is proven, together with several related results of direct practical significance. This work is directed to the goal of providing a formal model for the inductive processes which are observed in artificial intelligence studies in specialized areas.