The programming language C has gained considerable popularity, especially in the fields of systems programming and embedded computer systems, but C was designed well before software engineering emerged as a coherent discipline. The author proposes an evolutionary approach to modular programming, that recognises that in many situations C will continue to be widely used. The strength of the method presented is derived from two fundamental aspects: a directed graph software structure and the sharing of interfaces by both importer and exporter modules. The approach has proved to be useful in industrial environments, at least as a means of motivation for the adoption of more advanced software engineering tools. >