Oft muss bei der Behebung eines technischen Problems unter Zeitdruck zwischen einer aufwandsarmen „suboptimalen“ Losung und der aufwandigeren „besseren“ Losung entschieden werden. Diese Frage stellen sich Ingenieure, Techniker und Entscheider haufig bei der Entwicklung, dem Betrieb bzw. der Inbetriebnahme eines Embedded Systems (ES). Dabei mussen diese die Projektsituation, die verbleibende Laufzeit und Kosten berucksichtigen. Unter dem Begriff der technischen Schuld, also der Technical Debt (TD), wird die bewusste Entscheidung gegen eine bessere, sinnvollere Losung verstanden. Obwohl TD im klassischen Software-Engineering ein bekanntes und erforschtes Phanomen ist, wird es bis dato in den Bereichen der Embedded Systems und Mechatronik, wie beispielsweise ein Produktionssystem, noch wenig beachtet und ist in Folge dessen wenig beherrscht. Die daraus resultierenden finanziellen Schaden fur Unternehmen sind erheblich. Aus diesem Grund ist die Bereitstellung transparenter Grundlagen fur bewusste Entscheidungen zur Inkaufnahme von TD von besonderem Interesse. Anhand einer Erweiterung der TD-Klassifikation aus dem Software Engineering und einer domanenubergreifenden Fallstudie wird TD und ihre Auswirkungen sowie das Potential zur Beherrschung von TD diskutiert. Um die geforderte Transparenz zu erreichen, werden fur Embedded Systems sowohl die kurzfristigen als auch die langfristigen Auswirkungen aufgezeigt und gegenubergestellt.