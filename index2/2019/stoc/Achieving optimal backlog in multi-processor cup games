Many problems in processor scheduling, deamortization, and buffer management can be modeled as single- and multi-processor cup games. At the beginning of the single-processor n-cup game, all cups are empty. In each step of the game, a filler distributes 1−є units of water among the cups, and then an emptier selects a cup and removes up to 1 unit of water from it. The goal of the emptier is to minimize the amount of water in the fullest cup, also known as the backlog. The greedy algorithm (i.e., empty from the fullest cup) is known to achieve backlog O(logn), and no deterministic algorithm can do better. We show that the performance of the greedy algorithm can be exponentially improved with a small amount of randomization: After each step and for any k ≥ Ω(logє−1), the emptier achieves backlog at most O(k) with probability at least 1 −O(2−2k). We call our algorithm the smoothed greedy algorithm because if follows from a smoothed analysis of the (standard) greedy algorithm. In each step of the p-processor n-cup game, the filler distributes p(1−є) unit of water among the cups, with no cup receiving more than 1−δ units of water, and then the emptier selects p cups and removes 1 unit of water from each. Proving nontrivial bounds on the backlog for the multi-processor cup game has remained open for decades. We present a simple analysis of the greedy algorithm for the multi-processor cup game, establishing a backlog of O(є−1 logn), as long as δ > 1/poly(n). Turning to randomized algorithms, we find that the backlog drops to constant. Specifically, we show that if є and δ satisfy reasonable constraints, then there exists an algorithm that bounds the backlog after a given step by 3 with probability at least 1 − O(exp(−Ω(є2 p)). We prove that our results are asymptotically optimal for constant є, in the sense that no algorithms can achieve better bounds, up to constant factors in the backlog and in p. Moreover, we prove robustness results, demonstrating that our randomized algorithms continue to behave well even when placed in bad starting states.