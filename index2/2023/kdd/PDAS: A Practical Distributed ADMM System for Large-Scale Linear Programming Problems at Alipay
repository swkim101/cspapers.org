Linear programming (LP) is arguably the most common optimization problem encountered in practical settings. Important examples include machine learning systems optimization, resource allocation, and other decision-making scenarios. However, even with state-of-the-art (SOTA) solvers, it is extremely challenging to solve large-scale problems arising in industry settings, which could have up to billions of decision variables and require solutions within a time limit to meet business demands. This paper proposes PDAS, a Practical Distributed ADMM System to solve such problems with a variant of the Alternating Direction Method of Multipliers (ADMM) algorithm. PDAS offers user-friendly interfaces and provides near-linear speedup thanks to its high scalability and excellent performance. It also comes with a failover mechanism to ensure the stability of the iterative process. The convergence, feasibility, and optimality of PDAS have been verified on two real-world data-sets, resulting in a 10-4 average relative deviation from Gurobi. Although SOTA solvers do have advantages if only considering the solving time when tested on five small and medium-sized public data-sets, PDAS is more promising after including the modeling time. Moreover, when used to solve large-scale LP problems with up to 109 decision variables and 104 constraints in three real-world scenarios, PDAS achieves at least 2x speedups, well beyond the capabilities of SOTA.