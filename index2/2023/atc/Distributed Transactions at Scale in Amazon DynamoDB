NoSQL cloud database services are popular for their simple key-value operations,  high availability, high scalability, and predictable performance.  These characteristics are generally considered to be at odds with support for transactions  that permit atomic and serializable updates to partitioned data. This paper explains how  transactions were added to Amazon DynamoDB using a timestamp ordering protocol  while exploiting the semantics of a key-value store to achieve low latency for both  transactional and non-transactional operations. The results of experiments against a production  implementation demonstrate that distributed transactions with full ACID properties  can be supported without compromising on performance, availability, or scale.