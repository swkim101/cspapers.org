For a set of real-time tasks that have mixed preference of being executed at early or late times before their deadlines, we have recently studied both earliest-deadline based and fixed-priority preference-oriented (PO) scheduling algorithms for uniprocessor systems. In this work, focusing on multiprocessor real-time systems, we study the foundational guidelines to design partition-based PO scheduling algorithms for tasks with mixed preference requirements. In particular, through a concrete example, we illustrate that the harmonicity of tasks' periods should be incorporated when making scheduling decisions in addition to their execution preferences to obtain favorable schedules that better fulfill tasks' preference requirements. Based on such guidelines, we design a period-aware preference-oriented (PAPO) partitioned scheduling algorithm and discuss several variations by considering harmonicity as well as utilization of tasks.