Loops are a fundamental concept in computing and well known to be difficult for novices. Recent research shows that the open-ended learning approach often used in teaching block-based programming can be insufficient to help young students gain a solid understanding of computing concepts. Misconceptions about loop are very common despite the user-friendly block-based programming syntax. This study aims to contribute to the current understanding of how elementary-aged students can learn the concept of loops through a more structured instructional design. We engage students in structured learning activities consisting of "tangible" programming concept demo and progressive problem solving exercises. These activities were used to teach a group of 3-5th graders two types of loops: counting loops that repeat a set number of times without logic conditions, and conditional loops where the loop iteration is controlled by a Boolean condition. The evaluation results indicate that most students are able to understand and use counting loops correctly in their programs after the weeklong class. The understanding of conditional loops, however, remains difficult for elementary-aged students. Our study suggests that computing concepts may be learned more effectively with a structured instruction setting. Nonetheless, teaching young students conditional loops, especially how to apply them in computational problem solving is a very challenging task even in block-based environments.