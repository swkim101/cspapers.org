A key learning objective of the CS2 curriculum is for a student to obtain the necessary computer science skills to be proficient in the understanding and usage of software objects in an object-oriented programming language. In typical CS programs there are two prevalent object-oriented languages that are used to fulfill this requirement: Java and C++. In most instances, one language is selected as the primarily tool in which to teach these concepts. In other instances, both languages may be used, but not in a side-by-side fashion which can often leave the students confused or with an incomplete understanding of both languages. Each language has its documented trade-offs (benefits and drawbacks) when it comes to adequately preparing students. An aspect that is often overlooked as part of this traditional course structure is the ability to leverage a teaching component that allows the students to analyze trade-offs between languages and the Why/When/How to select a given language based upon their analysis. We provide an outline for how these two languages can be successfully taught in a side-by-side, or simultaneous, fashion that will still satisfy all of the existing expectations and requirements of a course. We describe how this component can be integrated into a career preparation module that will further augment the students' overall learning experience and their academic preparation. Results of this trial demonstrate that student satisfaction, understanding, learning of concepts, and educational preparation can be improved while maintaining the necessary standards set forth as part of the CS2 curriculum.