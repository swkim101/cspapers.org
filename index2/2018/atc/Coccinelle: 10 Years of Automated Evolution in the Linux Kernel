The Coccinelle C-program matching and transformation tool was first released in 2008 to facilitate specification and automation in the evolution of Linux kernel code.  The novel contribution of Coccinelle was that it allows software developers to write code manipulation rules in terms of the code structure itself, via a generalization of the patch syntax.  Over the years, Coccinelle has been extensively used in Linux kernel development, resulting in over 6000 commits to the Linux kernel, and has found its place as part of the Linux kernel development process.  This paper studies the impact of Coccinelle on Linux kernel development and the features of Coccinelle that have made it possible.  It can provide guidance on how other research-based tools can achieve practical impact in the open-source development community.