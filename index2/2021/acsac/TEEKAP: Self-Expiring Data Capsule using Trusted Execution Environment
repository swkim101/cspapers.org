Safeguarding privacy in data sharing is challenging, especially when data owners lose control over their data once it is passed to another party. Our work aims to build a data-sharing platform that enables data owners to regain control over their shared data. Specifically, sensitive data is first encapsulated into a data capsule. The platform regulates functional access to the data capsule, i.e., the receiver can compute a predefined function on the data with its input and learns nothing else. The platform also enforces self-expiry of the data capsule. In addition, the data capsule features a notion of “send-and-forget” wherein data owners can go offline after releasing their data capsules. As a result, data capsules can be freely circulated. Each data capsule is associated with an access policy and a usage transcript. The former specifies which functions are eligible to access the protected data and its expiry conditions, whereas the latter is used to determine if the expiry conditions have been met. To regulate functional access, one efficient solution is to employ a Trusted Execution Environment (TEE) with attested execution. Nonetheless, we observe that the use of TEE alone is not sufficient to accomplish self-expiry, for TEEs are vulnerable to rollback attacks via which an adversary could “unwind” the usage transcript of an expired data capsule or double-consume the protected data. Moreover, a straightforward implementation would need a single master key to be resided in the TEE, leading to single-point-of-failure. Our solution, TEEKAP, addresses the challenges by embracing decentralization, employing a committee of independent and mutually distrusting nodes to uphold the integrity of usage transcripts and the confidentiality of encryption keys. TEEKAP integrates TEE, consensus protocol, and threshold secret sharing in a novel way. Experiments conducted in realistic deployment settings on Microsoft Azure show that TEEKAP can process access requests at scale.