The Rainfall problem has been widely used to explore plan composition and programming errors by CS1 students. This work introduces the Inchworm problem, a conceptually straightforward task which must be solved using three interrelated skills: problem solving, algorithmic design and code implementation. The Inchworm is a holistic low stakes assessment of those three skills that provides insights on students' use of abstraction in problem solving while exposing the intricacies of code design. We tested this task with three cohorts of undergraduate students that have passed our core CS2 course. Most of them solved it in their first attempt, showing a reasonable mastery of basic algorithmic skills. In regards to problem solving strategies, most students chose to simulate the process described in the problem, step by step, with less than 10% choosing the more efficient mathematical approach. Their simulations used 4 different modelling strategies, all correct but with varying abstraction and efficiency levels. Simulation designs with poor performance indicate possible gaps in software development skills by disregarding the memory and computational cost of their solutions.