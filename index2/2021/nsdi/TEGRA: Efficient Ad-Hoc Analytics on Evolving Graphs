Several emerging evolving graph application workloads demand support for efficient ad-hoc analytics—the ability to perform ad-hoc queries on arbitrary time windows of the graph. Existing systems face limitations when used for such tasks. We present Tegra, a system that enables efficient adhoc window operations on evolving graphs. Tegra enables efficient access to the state of the graph at arbitrary windows, and significantly accelerates ad-hoc window queries by using a compact in-memory representation for both graph and intermediate computation state. For this, it leverages persistent datastructures to build a versioned, distributed graph state store, and couples it with an incremental computation model which can leverage these compact states. For users, it exposes these compact states using Timelapse, a natural abstraction. We extensively evaluate Tegra against existing evolving graph analysis techniques, and show that it significantly outperforms other systems (by up to 30×) for ad-hoc window operation workloads.