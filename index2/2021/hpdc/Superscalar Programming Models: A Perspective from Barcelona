The importance of the programming model in the development of applications has been increasingly more important with the evolution of computing architectures and infrastructures. Aspects such as the number of cores and heterogeneity in the computing nodes, the increase in scale, and new highly distributed environments (the so-called computing continuum) make it even more critical. Superscalar programming models have been proposed as an alternative for the development of parallel and distributed applications. They are a family of task-based programming models that aim at offering a sequential programming interface while enabling a parallel execution in distributed programming environments. Generic aspects supported by the model are: task dependency analysis, parallelism exploitation, data renaming, and data management. Over the years, BSC has developed multiple instances of this family, each of them with some specific aspects depending on the needs and possibilities of the existing computing infrastructure. The talk will present a historical perspective of the superscalar programming models for distributed computing and the challenges that we foresee for the near future.