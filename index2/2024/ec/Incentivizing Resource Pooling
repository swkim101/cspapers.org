Resource pooling improves system efficiency drastically in large stochastic systems, but its effective implementation in decentralized systems remains relatively underexplored. In this paper, we study the problem of incentivizing resourcing pooling when agents are self-interested, and their states are private information. Specifically, we study a standard multi-server queueing model in which each server is associated with an M/M/1 queue and aims to minimize its time-average job holding and processing costs. Our primary motivation is applications in the design of decentralized computing markets (potentially implemented on blockchains), among others. We develop a simple token-based mechanism to incentivize resource pooling when servers' states and actions are private information. In our mechanism, a server can request help from others for serving its jobs at the cost of one token per requested job at any time. Meanwhile, a server can allocate its next unit of available computing power to help others and earn a token with a pre-determined probability. Decisions regarding the request and provision of help are made by each server based on its self-interest. The mechanism matches servers providing help to those requesting help in a first-come-first-serve order by managing a (virtual) shared pool, which a smart contract can achieve. The mechanism introduces a complex incomplete-information, dynamic game among servers that is challenging to analyze. To address this, we employ the fluid mean-field equilibrium (FMFE) concept to analyze the system, combining mean-field approximation with fluid relaxation. This framework enables us to derive a closed-form characterization of a server's best response in FMFE. Moreover, we show that these FMFE strategies approximate well the servers' rational behavior as the number of servers grows large, justifying our approximation methodology. We leverage this framework to optimize the design of the mechanism and present our main results: As the number of servers increases, the proposed mechanism incentivizes complete resource pooling---that is, the system dynamics and performance under our mechanism match those under centralized control. Finally, we show that our mechanism achieves the first-best performance even when helping others incurs higher job processing costs and remains nearly optimal in settings with heterogeneous servers. The full version of this paper is available at https://ssrn.com/abstract=4586771.