Modern control systems, including robotics, drones, and autonomous vehicles, are increasingly incorporating intelligent controllers such as deep neural networks (DNNs) supported by heterogeneous processors. However, unlike conventional control algorithms on homogeneous platforms, the design and runtime execution of intelligent control tasks on heterogeneous computing platforms pose more rigorous demands and substantial challenges. These challenges encompass not only inherent conflicts between algorithm complexity and accuracy but also the couplings and trade-offs among run-time execution latency, end-to-end system performance, and reliability with timing constraints. To address these challenges, this paper introduces an end-to-end capability and scheduling co-design approach to efficiently design intelligent control tasks on heterogeneous computing architectures. We first introduce a novel and general control capability function, which bridges the control performance with the complexity of the intelligent controller, computation latency, and the properties of the physical plants. Subsequently, we formulate a comprehensive optimization problem to properly design algorithm capability and assign limited heterogeneous computational resources from offline heterogeneous resource allocation to run-time execution. Finally, we present a case study on the intelligent control of autonomous quadcopters (with the hardware-in-the-loop simulator built on Microsoft AirSim), and the extensive experiments demonstrate the superiority of the capability and scheduling co-design in terms of overall system performance compared with state-of-the-art design approaches.