The dynamic set cover problem has been subject to growing research attention in recent years. In this problem, we are given as input a dynamic universe of at most $n$ elements and a fixed collection of $m$ sets, where each element appears in a most $f$ sets and the cost of each set is in [1/C, 1], and the goal is to efficiently maintain an approximate minimum set cover under element updates. Two algorithms that dynamize the classic greedy algorithm are known, providing $O(\log n)$ and $((1+\epsilon)\ln n)$-approximation with amortized update times $O(f \log n)$ and, $O(\frac{f \log n}{\epsilon})$, respectively [GKKP (STOC'17); SU (STOC'23)]. The question of whether one can get approximation $O(\log n)$ (or even worse) with low worst-case update time has remained open — only the naive $O(f\cdot n)$ time bound is known, even for unweighted instances. In this work we devise the first amortized greedy algorithm that is amenable to an efficient deamortization, and also develop a lossless deamortization approach suitable for the set cover problem, the combination of which yields a $((1+\epsilon)\ln n){-}$ approximation algorithm with a worst-case update time of $O(\frac{f \log n}{\epsilon^{2}})$. Our worst-case time bound — the first to break the naive $O(f\cdot n)$ bound — matches the previous best amortized bound, and actually improves its $\epsilon$ -dependence. Further, to demonstrate the applicability of our deamortization approach, we employ it, in conjunction with the primal-dual amortized algorithm of [BHN (FOCS'19)], to obtain a $((1+\epsilon)f)$-approximation algorithm with a worst-case update time of $O(\frac{f \log n}{\epsilon^{2}})$, improving over the previous best bound of $O(\frac{f \cdot \log ^{2}(C n)}{-3})\ [$ BHNW (SODA'21)]. Finally, as direct implications of our results for set cover, we (i) achieve the first nontrivial worst-case update time for the dominating set problem, and (ii) improve the state-of-the-art worst-case update time for the vertex cover problem.