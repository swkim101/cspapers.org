We give two new approximation algorithms to compute the fractional hypertree width of an input hypergraph. The first algorithm takes as input n-vertex m-edge hypergraph <tex>$H$</tex> of fractional hypertree width at most <tex>$\omega$</tex>, runs in polynomial time and produces a tree decomposition of <tex>$H$</tex> of fractional hypertree width <tex>$\mathcal{O}(\omega\log n\log\omega)$</tex>, i.e., it is an <tex>$\mathcal{O}(\log n\log\omega)$</tex>-approximation algorithm. As an immediate corollary this yields poly-nomial time <tex>$\mathcal{O}(\log^{2}n\log\omega)$</tex>-approximation algorithms for (generalized) hypertree width as well. To the best of our knowledge our algorithm is the first non-trivial polynomial-time approximation algorithm for fractional hypertree width and (generalized) hypertree width, as opposed to algorithms that run in polynomial time only when <tex>$\omega$</tex> is considered a constant. For hypergraphs where every pair of hyperedges have at most <tex>$\eta$</tex> vertices in common, the al-gorithm outputs a hypertree decomposition with fractional hypertree width <tex>$\mathcal{O}(\eta\omega^{2}\log\omega)$</tex> and generalized hypertree width <tex>$\mathcal{O}(\eta\omega^{2}\log\omega(\log\eta+\text{log}\omega))$</tex>. This ratio is comparable with the recent algorithm of Lanzinger and Razgon [STACS 2024], which produces a hypertree decomposition with generalized hypertree width <tex>${\mathcal{O}}(\omega^{2}(\omega+\eta))$</tex>, but uses time (at least) exponential in <tex>$\eta$</tex> and <tex>$\omega$</tex>. The second algorithm runs in time <tex>$n^{\omega}m^{\mathcal{O}(1)}$</tex> and pro-duces a tree decomposition of <tex>$H$</tex> of fractional hypertree width <tex>$\mathcal{O}(\omega{\mathrm{l}}\text{og}^{2}\omega)$</tex>. This significantly improves over the <tex>$(n+m)^{\mathcal{O}(\omega^{3})}$</tex> time algorithm of Marx [ACM TALG 2010], which produces a tree decomposition of fractional hyper-tree width <tex>$\mathcal{O}(\omega^{3})$</tex>, both in terms of running time and the approximation ratio. Our main technical contribution, and the key insight behind both algorithms, is a variant of the classic Menger's Theorem for clique separators in graphs: For every graph <tex>$G$</tex>, vertex sets <tex>$A$</tex> and <tex>$B$</tex>, family <tex>$\mathcal{F}$</tex> of cliques in <tex>$G$</tex>, and positive rational <tex>$f$</tex>, either there exists a sub-family of <tex>$\mathcal{O}(f \cdot {\mathrm{l}}\text{og}^{2}n)$</tex> cliques in <tex>$\mathcal{F}$</tex> whose union separates <tex>$A$</tex> from <tex>$B$</tex>, or there exist <tex>$f\cdot\log\vert \mathcal{F}\vert$</tex> paths from <tex>$A$</tex> to <tex>$B$</tex> such that no clique in <tex>$\mathcal{F}$</tex> intersects more than <tex>$\log\vert \mathcal{F}\vert$</tex> paths.