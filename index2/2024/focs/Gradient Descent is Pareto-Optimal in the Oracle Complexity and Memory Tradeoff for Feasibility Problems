In this paper we provide oracle complexity lower bounds for finding a point in a given set using a memory-constrained algorithm that has access to a separation oracle. We assume that the set is contained within the unit <tex>$d-\mathbf{dimensional}$</tex> ball and contains a ball of known radius <tex>$\epsilon > 0$</tex>. This setup is commonly referred to as the feasibility problem. We show that to solve feasibility problems with accuracy <tex>$\epsilon\geq e^{-d^{o(1)}}$</tex>, any deterministic algorithm either uses <tex>$d^{1+\delta}$</tex> bits of memory or must make at least <tex>$1/(d^{0.01\delta}\epsilon^{2\frac{1-\delta}{1+1.01\delta}-o(1)})$</tex> oracle queries, for any <tex>$\delta\in[0,1]$</tex>. Additionally, we show that randomized algorithms either use <tex>$d^{1+\delta}$</tex> memory or make at least <tex>$1/(d^{2\delta}\epsilon^{2(1-4\delta)-o(1)})$</tex> queries for any <tex>$\delta\in[0, \frac{1}{4}]$</tex>. Because gradient descent only uses linear memory <tex>$\mathcal{O}(d\ln 1/\epsilon)$</tex> but makes <tex>$\mathcal{O}(1/\epsilon^{2})$</tex> queries, our results imply that it is Pareto-optimal in the oracle complexity/memory tradeoff. Further, our results show that the oracle complexity for deterministic algorithms is always polynomial in <tex>$1/\epsilon$</tex> if the algorithm has less than quadratic memory in <tex>$d$</tex>. This reveals a sharp phase transition since with quadratic <tex>$\mathcal{O}(d^{2}\ln 1/\epsilon)$</tex> memory, cutting plane methods only require <tex>$\mathcal{O}(d\ln 1/\epsilon)$</tex> queries.