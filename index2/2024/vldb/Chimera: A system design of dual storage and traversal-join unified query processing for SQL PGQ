
 As graphs are being used increasingly in various industries, a new standard of SQL (called SQL:2023) has incorporated SQL with Property Graph Queries (SQL/PGQ) as a core feature. While some approaches process graph queries within RDBMSs using graph view definition or materialized graph view, their performance is not good enough for interactive SQL/PGQ queries in terms of response time, throughput, and graph size. To address this problem, we propose a novel system design named
 Chimera
 , which features a dual-store architecture and a unified query planning called Traversal-Join(TJ). This design treats the topologies of a graph as first-class citizens rather than secondary elements overcoming the graph size limitations of the materialized graph view approach. It also generates an efficient, unified query plan that performs traversal and join in a mixed way, significantly enhancing both response time and throughput. Implemented on the open-source RDBMS, PostgreSQL, our extensive experiments with the LDBC SNB benchmark and microbenchmark show that Chimera significantly outperforms the existing approaches and GRDBMSs.
