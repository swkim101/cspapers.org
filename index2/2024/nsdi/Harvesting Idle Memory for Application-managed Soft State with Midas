Many applications can benefit from data that increases performance but is not required for correctness (commonly referred to as soft state ). Examples include cached data from backend web servers and memoized computations in data analytics systems. Today’s systems generally statically limit the amount of memory they use for storing soft state in order to prevent un-bounded growth that could exhaust the server’s memory. Static provisioning, however, makes it difficult to respond to shifts in application demand for soft state and can leave significant amounts of memory idle. Existing OS kernels can only spend idle memory on caching disk blocks—which may not have the mostutility—becausetheydonotprovidetherightabstractions to safely allow applications to store their own soft state. To effectively manage and dynamically scale soft state, we propose soft memory , an elastic virtual memory abstraction with unmap-and-reconstruct semantics that makes it possible for applications to use idle memory to store whatever soft state they choose while guaranteeing both safety and efficiency. We present Midas, a soft memory management system that contains (1) a runtime that is linked to each application to manage soft memory objects and (2) OS kernel support that coordinates soft memory allocation between applications to maximize their performance. Our experiments with four real-world applications show that Midas can efficiently and safely harvest idle memory to store applications’ soft state, delivering near-optimal application performance and responding to extreme memory pressure without running out of memory.