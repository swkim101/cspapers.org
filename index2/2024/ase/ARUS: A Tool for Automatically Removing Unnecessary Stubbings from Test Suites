In software testing, test doubles and stubbings are crucial for isolating the code under test from its dependencies, allowing for more controlled and reliable testing environments. However, as test suites evolve, some stubbings may become unnecessary, which should be removed to keep the test code clean, reliable, and maintainable.To address this problem, we introduce ARUS, a tool designed to automatically remove unnecessary stubbings from test suites. ARUS can be used to analyze Java projects using Maven, JUnit, and Mockito. Given a software project and its test suite, the tool executes the test suite to collect data on how stubbings are used, identifies and categorizes stubbings that are unnecessary, and removes unnecessary stubbings through different resolution strategies. We used ARUS to perform an empirical evaluation based on 128 projects. The projects contain 280 stubbing definitions that lead to 1,529 unnecessary stubbings. Overall, ARUS provides a solution for 276 of the definitions (98.6% resolution rate) and the tool’s time cost is negligible. We submitted ARUS’ changes to the projects through pull requests and 86 resolutions are already merged. ARUS and its dataset are publicly available at https://github.com/se-umn/arus. We provide a video demo of the tool at https://youtu.be/YcJxp5lRlFM.