Many programming languages and operating system communities maintain software repositories to build their own ecosystems. The repositories often provide management tools to help users using the packages. The tools are often, if not all the times, well-designed to handle intra-repository dependencies without considering inter-repository dependencies. The users, however, often need packages from different repositories, and thus may suffer from compatibility issues. We refer to these issues as Cross-repository Compatibility (CC) issues. Existing works typically focus on a single software repository and are insufficient to detect CC issues.To fill this gap, we use both Python and Ubuntu repositories as representatives to study the root cause of CC issues, then summarize their triggering patterns and failure symptoms. Guided by the above analysis, we design Hera, an automatic tool to solve CC issues. Hera first builds a cross-repository compatibility database offline, and then online predicts, detects and fixes CC issues in the user’s system environment. In our evaluation, we construct a dataset of 1,692 real-world CC issues, and Hera can detect 3,689 issues with the precision of 90.5% and the recall of 93.7%. We also collected 27 real-world CC issues from GitHub and Stack Overflow, and reproduced 26 of them. Hera can detect all the 26 cases, and provide accurate reasons as well as fixing advice.CCS CONCEPTS• Software and its engineering → Software libraries and repositories.