Rust is a system programming language that emphasizes both efficiency and memory safety. It achieves comparable efficiency with C/C++ by pursuing the concept of zero-cost abstraction and memory safety via its ownership scheme. As a side effect, these features may also steepen the learning curve for developers, potentially leading to the use of inefficient code in their programs. In this paper, we aim to investigate the characteristics of performance bugs that occur in real-world Rust projects. To this end, we have mined the repository of 100 well-known projects on GitHub and collected 122 performance bugs. We showcase two main findings including performance issues from Rust’s dynamic checking and memory management mechanisms. We hope our work can enhance the usability of Rust’s complex yet powerful language features, empowering developers to write safe, high-performance code more efficiently.CCS Concepts• Software and its engineering → Maintaining software.