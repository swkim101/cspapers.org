We introduce Oblivious Parallel Stateful Computation (OPSC), a form of secure multi-party computation (MPC) tailored for stateful machine computation models emphasizing parallel execution across multiple data. OPSC enables parties to compute multiple results simultaneously in a parallel fashion, leveraging all data from current states and auxiliary inputs dynamically entered at that point. With its parallel and dynamic nature, OPSC holds promise for privacy-preserving applications in intricate decision-making scenarios involving multiple agents, such as traffic analyses, individual consumer behavior economics, and epidemiological simulations. We focus on OPSC for binary branch, akin to deterministic finite automata (DFA) with binary alphabet albeit with multiple pebbles moving. A straightforward approach to obtain OPSC with N data and |S| states is to run N instances of MPC for individual DFA, incurring a ~O(N |S|) overhead. Distributed Oblivious RAM (DORAM) is a related primitive that allows efficient oblivious read and write of distributed data and can facilitate OPSC. However, no existing method achieves both constant round and cost less than ~O(N |S|) for all metrics. In this paper, we formalize OPSC and propose a protocol achieving constant round and ~O(N + |S|) costs for all metrics, including communication and storage costs. Our protocols drastically improve storage efficiency, requiring just 408 MB for scenarios with 16 million data and 26,000 states, compared to 24 TB with the DORAM-based approach instantiated with the state-of-the-art DUORAM (Vadapalli et al., USENIX Sec'23), representing a four-order-of-magnitude improvement. Additionally, our online processing time is comparable, with the DUORAM-based approach being about 1.3 times faster. We demonstrate the practical utility of OPSC through a proof of concept for agent-based simulations and apply OPSC to obliviously solve the All Nearest Smaller Values (ANSV) problem, a crucial primitive in parallel computation. Additionally, we explore its application in multiple pattern matching scenarios. At the core of our OPSC design is a new primitive of independent interest: Oblivious Group-Wise Stable Sorting, which enables sorting data within privately partitioned groups. We introduce Oblivious Parallel Stateful Computation (OPSC), a form of secure multi-party computation (MPC) tailored for stateful machine computation models emphasizing parallel execution across multiple data. OPSC enables parties to compute multiple results simultaneously in a parallel fashion, leveraging all data from current states and auxiliary inputs dynamically entered at that point. With its parallel and dynamic nature, OPSC holds promise for privacy-preserving applications in intricate decision-making scenarios involving multiple agents, such as traffic analyses, individual consumer behavior economics, and epidemiological simulations. We focus on OPSC for binary branch, akin to deterministic finite automata (DFA) with binary alphabet albeit with multiple pebbles moving. A straightforward approach to obtain OPSC with N data and |S| states is to run N instances of MPC for individual DFA, incurring a ~O (N |S|) overhead. Distributed Oblivious RAM (DORAM) is a related primitive that allows efficient oblivious read and write of distributed data and can facilitate OPSC. However, no existing method achieves both constant round and cost less than ~O(N |S|) for all metrics. In this paper, we formalize OPSC and propose a protocol achieving constant round and ~O (N + |S|) costs for all metrics, including communication and storage costs. Our protocols drastically improve storage efficiency, requiring just 408 MB for scenarios with 16 million data and 26,000 states, compared to 24 TB with the DORAM-based approach instantiated with the state-of-the-art DUORAM (Vadapalli et al., USENIX Sec'23), representing a four-order-of-magnitude improvement. Additionally, our online processing time is comparable, with the DUORAM-based approach being about 1.3 times faster. We demonstrate the practical utility of OPSC through a proof of concept for agent-based simulations and apply OPSC to obliviously solve the All Nearest Smaller Values (ANSV) problem, a crucial primitive in parallel computation. Additionally, we explore its application in multiple pattern matching scenarios. At the core of our OPSC design is a new primitive of independent interest: Oblivious Group-Wise Stable Sorting, which enables sorting data within privately partitioned groups.