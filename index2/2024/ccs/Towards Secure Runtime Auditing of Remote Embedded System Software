Low-cost and energy-efficient microcontroller units (MCUs) increasingly perform critical tasks at the edge of modern systems despite their inherent vulnerabilities. To assess their security in remote deployments, Control Flow Attestation (CFA) offers a technique for a Verifier (Vrf) to remotely detect attacks that illegally alter the software or the runtime behavior of a Prover MCU (Prv) by producing a log of all control flow transfers during task execution (CFLog). Current CFA techniques cannot ensure Vrf receives CFLog from a compromised Prv, allowing it to ignore CFA requests and preventing Vrf vulnerability analysis. This dissertation proposal introduces architectures to achieve runtime auditing, guaranteeing the delivery of runtime evidence and enabling Vrf to remediate detected compromises. The first approach uses a hardware-software co-design, and the second approach leverages Trusted Execution Environments (TEEs) to provide the same guarantees without hardware modifications. Future work will focus on further challenges, such as enabling application-specific storage/latency optimizations and automated vulnerability analysis of runtime evidence.