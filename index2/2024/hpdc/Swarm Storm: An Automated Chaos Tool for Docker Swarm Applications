Docker Swarm facilitates the deployment of modular applications in an independent yet interconnected manner. Applications within the Swarm communicate through Docker's internal network, ensuring rapid computation and enhanced security. Despite these advantages, the complex nature of software development often leads to the occurrence of various faults, including memory leaks, application failures, and network outages. To systematically identify and address such issues, chaos engineering has emerged as a powerful approach within both development and production environments. However, conducting chaos experiments within a Docker Swarm cluster in a multi-cloud environment proves to be challenging. In this paper, we present Swarm Storm, an automated framework designed for orchestrating chaos engineering experiments within Docker Swarm-based clusters in a cloud-agnostic environment with comprehensive testing features. We validate Swarm Storm using a simple Java benchmark application, demonstrating its effectiveness in addressing faults within the system.