The increase of hardware and software parallelism in modern machines, together with the growth of data volume, have made a new shift in memory/data management necessary. The purpose of this paper is to present a full-stack revision of memory and data management on multi-core machines, considering Parallel Discrete Event Simulation (PDES) systems as a case study. The mechanisms described tackle different aspects of PDES systems, but the primary goal is to provide a holistic approach to fully exploit parallelism and improve memory utilization. The disclosed solutions span from memory hierarchy awareness in terms of cache/NUMA locality, moving on to an incremental state saving mechanism exploiting write-protection, up to an prompt way of collecting output data during simulation execution ensuring memory safety, showing also results to validate our findings. The techniques used in our solutions are not only relevant for PDES systems, but they are of independent interest, since they leverage traditional OS services.