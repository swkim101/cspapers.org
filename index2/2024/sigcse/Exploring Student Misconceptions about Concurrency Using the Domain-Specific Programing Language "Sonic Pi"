As the importance of concurrent and multi-threaded programming continues to grow, many universities have incorporated these concepts into their introductory courses. Sonic Pi, a programming language designed for music creation, provides valuable support for exploring concurrency due to its simplified multi-threading abstractions and its domain-specific nature. This paper investigates the combined use of Sonic Pi and Team-Based Learning to mitigate the difficulties in early exposure to concurrency. Sonic Pi provides great support for "playing'' with concurrency, and "hearing'' common problems such as data races and lack of synchronization among different threads. Our primary research goal is to explore whether the use of Sonic Pi can support students, especially in the early stages, to understand concurrent programming concepts and help them face misconceptions identified in the concurrency education literature. The approach has been applied in teaching experiments with undergraduate students involving 184 participants.