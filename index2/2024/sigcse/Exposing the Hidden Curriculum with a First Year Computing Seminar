Representation and persistence to graduation for first year students in a computing major is stubbornly disproportionate depending on gender and ethnic background. While this subject has been extensively studied, progress toward changing the overall national graduation ratios has been minimal. Addressing the first-term experience for students has promise to enable progress toward improving the disproportionality. Self-efficacy has been shown to be an important factor for completing the first programming course at a university. Confidence erosion, lack of peer study groups, and other factors are documented sources of attrition in computing majors. First year seminars are a documented high-impact practice for students that can promote self-efficacy. In this work we present an effort to introduce a first-year seminar course for all computing majors at the Milwaukee School of Engineering University designed to expose the hidden curriculum specific for computing majors. The seminar is an optional weekly meeting for 50 minutes that gathers first-year students in one place to discuss topics like: building a problem-solving peer network, how to successfully answer software development exam questions, who and how to ask for help, history of computing, how to manage time, and more. We introduce collaborative, motivating examples that expose students to topics relevant to their major but not explicitly taught such as coding exam strategies, regular expressions, and productivity tools. In this session, we will present our seminar structure as well as preliminary data gathered regarding it efficacy toward addressing representation and persistence gaps.