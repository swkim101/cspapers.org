We study a broad class of algorithmic problems with an"additive flavor"such as computing sumsets, 3SUM, Subset Sum and geometric pattern matching. Our starting point is that these problems can often be solved efficiently for integers, owed to the rich available tool set including bit-tricks, linear hashing, and the Fast Fourier Transform. However, for real numbers these tools are not available, leading to significant gaps in the best-known running times for integer inputs versus for real inputs. In this work our goal is to close this gap. As our key contribution we design a new technique for computing real sumsets. It is based on a surprising blend of algebraic ideas (like Prony's method and coprime factorizations) with combinatorial tricks. We then apply our new algorithm to the aforementioned problems and successfully obtain, in all cases, equally fast algorithms for real inputs. Specifically, we replicate the running times of the following landmark results by randomized algorithms in the standard real RAM model: - Sumsets: Given two sets $A,B$, their sumset $A+B=\{a+b:a\in A,b\in B\}$ can be computed in time $\tilde O(|A+B|)$ [Cole, Hariharan; STOC'02]. - Geometric pattern matching: Given two sets $A,B$, we can test whether there is some shift such that $A+s\subseteq B$ in time $\tilde O(|A|+|B|)$ [Cardoze, Schulman; FOCS'98]. - 3SUM with preprocessing: We can preprocess three size-$n$ sets $A,B,C$ in time $\tilde O(n^2)$ such that upon query of sets $A'\subseteq A,B'\subseteq B,C'\subseteq C$, the 3SUM instance $(A',B',C')$ can be decided in time $\tilde O(n^{13/7})$ [Chan, Lewenstein; STOC'15]. - Output-sensitive Subset Sum: Given a size-$n$ (multi-)set $X$ and a target $t$, we can compute the set of subset sums $\{\Sigma(X'):X'\subseteq X,\Sigma(X')\leq t\}$ in output-sensitive time $\tilde O(n+\mathrm{out}^{4/3})$ [Bringmann, Nakos; STOC'20].