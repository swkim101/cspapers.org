We present PAFL, a new technique for enhancing existing fault localization methods by leveraging project-specific fault patterns.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
We observed that each software project has its own challenges and suffers from recurring fault patterns associated with those challenges. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
However, existing fault localization techniques use a universal localization strategy without considering those repetitive faults.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
To address this limitation, our technique, called project-aware fault localization (PAFL), enables existing fault localizers to leverage project-specific fault patterns.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Given a buggy version of a project and a baseline fault localizer, PAFL first mines the fault patterns from past buggy versions of the project. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Then, it uses the mined fault patterns to update the suspiciousness scores of statements computed by the baseline fault localizer.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
To this end, we use two novel ideas.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
First, we design a domain-specific fault pattern-description language to represent various fault patterns.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
An instance, called crossword, in our language describes a project-specific fault pattern and how it affects the suspiciousness scores of statements.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Second, we develop an algorithm that synthesizes crosswords (i.e., fault patterns) from past buggy versions of the project.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Evaluation using seven baseline fault localizers and 12 real-world C/C++ and Python projects demonstrates that PAFL effectively, robustly, and efficiently improves the performance of the baseline fault localization techniques.