In this paper, we present our findings on the evaluation of an overload-resistant control system. We implemented the control of a rotational pendulum on a microcontroller with a state-of-the-art real-time operating system. To mitigate overload conditions, we employed deadline-miss handling strategies that determine how to proceed when a control task exceeds its deadline. The system can either terminate the current controller job (Kill), complete the current job while skipping the next one (Skip-Next), or queue job executions (Queue). We show that the effectiveness of deadline-miss-strategies is highly parameter sensitive. Even subtle and initially unnoticed differences in system assumptions can lead to significant variations in system behavior. Our research thus highlights the importance of evaluation on complete system implementations. Not only did our initial, straightforward implementation perform well under overload conditions, adding deadline-miss handling strategies advocated in related work has proven to be potentially detrimental to the behavior of the pendulum. Based on our initial system implementation, we present and analyze a novel strategy called Shift-On-Miss.