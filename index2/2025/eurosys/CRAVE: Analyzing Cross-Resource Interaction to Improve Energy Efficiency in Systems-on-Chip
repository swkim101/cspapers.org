Mobile platforms make use of dynamic voltage and frequency scaling (DVFS) to trade off runtime performance and power consumption for their systems-on-chip (SoCs). State-of-the-art governors in the OS use application-based characteristics to control the SoC’s DVFS settings for CPU cores, as well as the GPU in some SoCs. Through experimental characterization of real-world mobile platforms, we find that key SoC components have a complex relationship with one another, which directly affects their performance and power usage. This relationship is dependent on the architecture of the SoC as it is caused by the interaction of processing elements such as the CPU and GPU through a shared main memory. Unfortunately, existing application-oriented governors do not explicitly capture this design-induced relationship. We propose a new governor, called CRAVE, which uses learned design characteristics to control DVFS settings. At design time, CRAVE identifies optimal DVFS settings for the SoC by sampling points across a multivariate space of frequency settings for the three major mobile system components: CPU cores, GPU, and memory. At runtime, CRAVE monitors resource utilization, in a manner similar to that of the existing simple governors that are built into today’s OS kernels, and then applies the previously-learned optimal settings.WeimplementCRAVEontworealmobileplatforms:the ODROID-XU4 and the NVIDIA Jetson TX2. Compared to the best built-in Linux governor, CRAVE improves performance by 20% while reducing energy usage by 16% on the TX2, with similar gains on the XU4. CRAVE also shows an improvement over a state-of-the-art application-driven governor, with performance