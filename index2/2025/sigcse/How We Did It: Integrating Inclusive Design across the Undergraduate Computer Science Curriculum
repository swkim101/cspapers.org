Inclusive design appears rarely, if at all, in most undergraduate computer science (CS) curricula. As a result, many CS students graduate without knowing how to apply inclusive design to the software they build and go on to careers that perpetuate the proliferation of software that excludes communities of users. Our panel of CS faculty will explain how we have been working to address this problem. For the past several years, we have been integrating bits of inclusive design into multiple courses in CS undergraduate programs, which has had very positive impacts on students’ ratings of their instructors, students’ ratings of the education climate, and students’ retention. The panel’s content will include mostly concrete examples of how we are doing this, so that attendees can leave with an in-the-trenches understanding of what this looks like for CS faculty across specialization areas and classes. We also show how it can be used in a department’s BPC Plan and point to resources on the CRA’s BPCnet Activity Library and on OERcommons, to enable interested faculty to move forward with this approach in their own classes and departments.