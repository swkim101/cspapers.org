In this programming assignment, students develop a music visualizer using the MinMax algorithm. A music visualizer synchronizes graphical effects with audio playback, adding motion, color, and energy to the music. The MinMax algorithm, widely used in platforms like SoundCloud, Spotify, and ffmpeg, is a key to generating such visualizations. The program reads an audio file, stores the audio samples in an array, and then divides the samples into k groups. For each group, the program calculates the maximum absolute value of a sample and displays it as a vertical bar. This produces a dynamic, real-time visual representation of the audio file, synchronized with the audio playback. This assignment is nifty because it blends algorithmic thinking, multimedia programming, and real data to create a compelling music visualizer. It is intended for early use in a CS1 curriculum (or CSA or CSP), when introducing arrays (in Java) or lists (in Python). It appeals not only to computer science majors but also to students in other disciplines. We also include numerous concrete and open-ended opportunities for variation, innovation, and exploration.