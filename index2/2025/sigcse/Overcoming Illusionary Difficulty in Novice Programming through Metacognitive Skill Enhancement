This paper investigates the illusionary difficulty novice programmers face, where students struggle with new tasks despite feeling well-prepared. The study explicitly shows that traditional assessments, such as self-reports, often fail to identify the misconceptions underlying this challenge. Using Veenman's metacognitive cueing with scaffolded self-check questions, we help students -- without introducing additional materials -- to refocus from their current understanding to uncovering unconscious knowledge gaps. This approach encourages students to step out of their comfort zones, engage in deeper self-exploration, persist through real difficulties, accommodate new concepts, and resolve misconceptions in their grasp. Pilot experiments reveal that while students initially overestimate their understanding, applying this cueing approach during test preparation significantly improves their actual test performance, as opposed to cumulative performance that relies on feedback and reinforcement through practices. The results underscore the importance of addressing misconceptions in problem-solving training using non-identical cues (as opposed to code evaluation training, which follows a predetermined solution path) to foster long-term self-efficacy, even if it temporarily reduces self-esteem.