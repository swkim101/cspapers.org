In computer science, teaching first-year students to approach problems at varying levels of abstraction is both essential and challenging. While abstraction is a key component of problem solving, many students struggle with thinking abstractly. When presented with a problem, students often rush into coding, feeling closer to a solution through immediate feedback from the compiler or by simulating their code. However, this approach can cause them to overlook essential details, as their code may not account for all possible input scenarios. To address this issue, we introduced a programming methodology in our Introduction to Programming (CS1) course. This methodology requires students to first construct a graphical representation of their solution, ensuring coverage of all potential input cases, before translating it into code. To support regular practice in this diagrammatic reasoning process, we developed a learning tool called CAFÉ 2.0. Over the course of the semester, students use CAFÉ 2.0 to solve problems by submitting both a graphical model of their solution and the associated code implementation. In addition to evaluating the final code, CAFÉ 2.0 provides personalized feedback on the graphical model and how well it aligns with the code. This feedback guides students in refining their model and code, and resubmit them to get new feedback. CAFÉ 2.0's unique feature is its ability to automatically generate feedback on graphical models within an interactive online environment, fostering an engaging and supportive learning experience.